{"version":3,"sources":["select.js","select_without_templates.js","templates.js"],"names":["isNil","value","undefined","uiSelectCtrl","$scope","$element","$timeout","$filter","$$uisDebounce","RepeatParser","uiSelectMinErr","uiSelectConfig","$parse","$window","isEmpty","selected","ctrl","$$null","multiple","length","getSelectedText","find","text","getPlaceholder","placeholder","_findIndex","collection","predicate","thisArg","findIndex","list","Object","i","call","_resetSearchInput","resetSearchInput","search","EMPTY_SEARCH","setActiveIndexToSelected","active","parserResult","angular","equals","nullValue","items","isNullValue","trackedValue","getTrackedValue","item","_isItemDisabled","activeIndex","_groupsFilter","groups","groupNames","j","result","name","push","itemProperty","activate","initSearchValue","avoidReset","disabled","open","searchEnabled","close","$broadcast","taggingLabel","focusSearchInput","tagging","isActivated","_ensureHighlightVisible","searchInput","focus","findGroupByName","noStrict","filter","group","parseRepeatAttr","repeatAttr","groupByExp","groupFilterExp","createArrayFromObject","origSrc","originalSource","$uisSource","keys","map","v","keyName","createNullItem","nullItem","needsNullItem","required","nullLabel","toLowerCase","indexOf","some","onOriginalSourceChange","newVal","oldVal","onSourceChange","isArray","refreshItems","isDefined","ngModel","$modelValue","data","excludeSelected","isNotSelected","selectedItem","selectedItems","every","source","removeSelected","setItemsFn","calculateDropdownPos","updateFlatItems","unshift","updateGroups","groupFn","$eval","forEach","groupName","isFunction","groupFilterFn","reduce","concat","parse","isGrouped","itemName","filters","$watch","$watchCollection","refresh","refreshAttr","refreshDelayPromise","cancel","$select","minimumInputLength","refreshPromise","then","refreshing","refreshDelay","isActive","itemScope","itemIndex","isUndefined","onHighlightCallback","_isItemSelected","selection","_updateItemDisabled","isDisabled","disabledItemIndex","disabledItems","splice","disableChoiceExpression","isTag","select","skipFocusser","$event","clickTriggeredSelect","type","fct","replace","trim","closeOnSelect","$setTouched","setFocus","focusInput","clear","stopPropagation","focusser","toggle","e","cancelEvent","_initaliseLockedChoices","doInitalise","_updateItemLocked","isLocked","lockedItemIndex","lockedItems","_isItemlocked","isLockedFn","lockChoiceExpression","sizeSearchInput","calculateContainerWidth","container","clientWidth","input","offsetParent","updateIfVisible","containerWidth","inputWidth","offsetLeft","css","sizeWatch","updaterScheduled","$$postDigest","noop","_handleDropDownSelection","key","shiftKey","processed","KEY","DOWN","UP","len","Math","max","min","TAB","tabNavigate","ENTER","ESC","preventDefault","focusEl","focusable","element","index","el","onSearchInputKeyDown","which","$apply","tagged","taggingTokens","tokens","MAP","keyCode","triggerHandler","newItem","isVerticalMovement","onSearchInputPaste","window","clipboardData","getData","originalEvent","separator","toSeparator","split","oldsearch","paste","onSearchInputTagged","querySelectorAll","choices","highlighted","posY","offsetTop","clientHeight","scrollTop","height","offsetHeight","isLockChoiceExpressionDefined","onActiveIndexChange","attr","generatedId","onDestroy","off","onResize","onOpenChange","removeAttr","this","dropdownXPosition","dropdownYPosition","sortable","spinnerClass","spinnerEnabled","on","$on","SPACE","LEFT","RIGHT","SHIFT","CTRL","ALT","PAGE_UP","PAGE_DOWN","HOME","END","BACKSPACE","DELETE","COMMAND","91","8","9","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","43","44","45","46","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","144","145","186","187","188","189","190","191","192","219","220","221","222","isControl","k","metaKey","ctrlKey","isFunctionKey","isHorizontalMovement","sep","prototype","selector","closest","elem","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","bind","parentElement","latestId","uis","module","constant","theme","generateId","appendToBody","backspaceReset","service","minErr","$$minErr","error","apply","arguments","message","RegExp","Error","directive","link","scope","attrs","transclude","clone","append","escapeRegexp","queryToEscape","matchItem","query","factory","$document","boundingClientRect","getBoundingClientRect","width","prop","top","pageYOffset","documentElement","left","pageXOffset","scrollLeft","$compile","restrict","require","templateUrl","tElement","addClass","parent","compile","tAttrs","repeat","groupBy","groupFilter","getGroupNgRepeatExpression","repeatExpression","rowsInner","clickTarget","document","addEventListener","uiDisableChoice","onHighlight","parseInt","position","String","newValue","$observe","controller","uisOffset","controllerAs","match","exec","ngClass","combined","inputId","id","ctrls","transcludeFn","calculateSelectLeftPosition","offset","body","edgeOffscreenAmount","paddingFromEdge","leftPosition","closeOnClick","contains","target","srcElement","jQuery","focusableControls","targetController","tagName","$digest","closeOnResize","closeOnScroll","positionDropdown","style","after","originalWidth","appendChild","resetDropdown","removeEventListener","replaceWith","resetFocus","$fieldset","dropdown","baseTitle","title","focusserTitle","focusserId","onSelectCallback","onSelect","onRemoveCallback","onRemove","choiceGrouped","tabindex","limit","taggingEval","ngRequired","oldRequired","autofocus","focusOn","transcluded","transcludedMatch","transcludedChoices","transcludedNoChoice","transcludedHeader","remove","transcludedFooter","isOpen","$evalAsync","visibility","removeClass","offsetDropdown","scrollTarget","xState","toggleClass","yState","isEnabled","getElements","console","enableClick","hasClass","disableClick","getAttribute","attribute","hasAttribute","multi","uiLockChoice","activeMatchIndex","updateModel","$setViewValue","Date","now","refreshComponent","removeChoice","removedChoice","locals","$item","$model","modelMapper","_getCaretPosition","isNumber","selectionStart","_handleMatchSelection","getNewActiveMatchIndex","$selectMultiple","prev","last","curr","next","caretPosition","first","newIndex","_findCaseInsensitiveDupe","arr","hasDupe","origItem","toUpperCase","_findApproxDupe","haystack","needle","dupeIndex","tempArr","copy","mockObj","isObject","$isEmpty","$parsers","resultMultiple","$formatters","inputValue","checkFnMultiple","p","trackByExp","propsItemNameMatches","oldValue","$render","$viewValue","event","tagItems","tagItem","stashArr","hasTag","slice","itemsWithoutTag","checkFnSingle","d","prepend","val","uiSelectSort","$ngModel","options","extend","axis","uiSelectSortOptions","draggingClassName","droppingClassName","droppingBeforeClassName","droppingAfterClassName","dataTransfer","setData","$index","toString","dropTimeout","move","from","to","className","dragOverHandler","offsetY","layerY","offsetX","layerX","dropHandler","droppedItemIndex","_dropHandler","theList","itemToMove","$emit","array","callback","debounceTime","timeoutPromise","self","args","Array","onOpenCloseCallback","uisOpenClose","previousState","expression","filterMatch","grouped","run","$templateCache","put"],"mappings":"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","file":"select.min.js","sourcesContent":["/*! ui-select@0.20.0 https://github.com/bdb-opensource/ui-select (MIT License) */\n(function () { \n\"use strict\";\nvar KEY = {\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27,\n    SPACE: 32,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    SHIFT: 16,\n    CTRL: 17,\n    ALT: 18,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    HOME: 36,\n    END: 35,\n    BACKSPACE: 8,\n    DELETE: 46,\n    COMMAND: 91,\n\n    MAP: { 91 : \"COMMAND\", 8 : \"BACKSPACE\" , 9 : \"TAB\" , 13 : \"ENTER\" , 16 : \"SHIFT\" , 17 : \"CTRL\" , 18 : \"ALT\" , 19 : \"PAUSEBREAK\" , 20 : \"CAPSLOCK\" , 27 : \"ESC\" , 32 : \"SPACE\" , 33 : \"PAGE_UP\", 34 : \"PAGE_DOWN\" , 35 : \"END\" , 36 : \"HOME\" , 37 : \"LEFT\" , 38 : \"UP\" , 39 : \"RIGHT\" , 40 : \"DOWN\" , 43 : \"+\" , 44 : \"PRINTSCREEN\" , 45 : \"INSERT\" , 46 : \"DELETE\", 48 : \"0\" , 49 : \"1\" , 50 : \"2\" , 51 : \"3\" , 52 : \"4\" , 53 : \"5\" , 54 : \"6\" , 55 : \"7\" , 56 : \"8\" , 57 : \"9\" , 59 : \";\", 61 : \"=\" , 65 : \"A\" , 66 : \"B\" , 67 : \"C\" , 68 : \"D\" , 69 : \"E\" , 70 : \"F\" , 71 : \"G\" , 72 : \"H\" , 73 : \"I\" , 74 : \"J\" , 75 : \"K\" , 76 : \"L\", 77 : \"M\" , 78 : \"N\" , 79 : \"O\" , 80 : \"P\" , 81 : \"Q\" , 82 : \"R\" , 83 : \"S\" , 84 : \"T\" , 85 : \"U\" , 86 : \"V\" , 87 : \"W\" , 88 : \"X\" , 89 : \"Y\" , 90 : \"Z\", 96 : \"0\" , 97 : \"1\" , 98 : \"2\" , 99 : \"3\" , 100 : \"4\" , 101 : \"5\" , 102 : \"6\" , 103 : \"7\" , 104 : \"8\" , 105 : \"9\", 106 : \"*\" , 107 : \"+\" , 109 : \"-\" , 110 : \".\" , 111 : \"/\", 112 : \"F1\" , 113 : \"F2\" , 114 : \"F3\" , 115 : \"F4\" , 116 : \"F5\" , 117 : \"F6\" , 118 : \"F7\" , 119 : \"F8\" , 120 : \"F9\" , 121 : \"F10\" , 122 : \"F11\" , 123 : \"F12\", 144 : \"NUMLOCK\" , 145 : \"SCROLLLOCK\" , 186 : \";\" , 187 : \"=\" , 188 : \",\" , 189 : \"-\" , 190 : \".\" , 191 : \"/\" , 192 : \"`\" , 219 : \"[\" , 220 : \"\\\\\" , 221 : \"]\" , 222 : \"'\"\n    },\n\n    isControl: function (e) {\n        var k = e.which;\n        switch (k) {\n        case KEY.COMMAND:\n        case KEY.SHIFT:\n        case KEY.CTRL:\n            return true;\n        }\n\n        if (e.metaKey || e.ctrlKey) return true;\n\n        return false;\n    },\n    isFunctionKey: function (k) {\n        k = k.which ? k.which : k;\n        return k >= 112 && k <= 123;\n    },\n    isVerticalMovement: function (k){\n      return ~[KEY.UP, KEY.DOWN].indexOf(k);\n    },\n    isHorizontalMovement: function (k){\n      return ~[KEY.LEFT,KEY.RIGHT,KEY.BACKSPACE,KEY.DELETE].indexOf(k);\n    },\n    toSeparator: function (k) {\n      var sep = {ENTER:\"\\n\",TAB:\"\\t\",SPACE:\" \"}[k];\n      if (sep) return sep;\n      // return undefined for special keys other than enter, tab or space.\n      // no way to use them to cut strings.\n      return KEY[k] ? undefined : k;\n    }\n  };\n\nfunction isNil(value) {\n  return value === undefined || value === null;\n}\n\n/**\n * Add querySelectorAll() to jqLite.\n *\n * jqLite find() is limited to lookups by tag name.\n * TODO This will change with future versions of AngularJS, to be removed when this happens\n *\n * See jqLite.find - why not use querySelectorAll? https://github.com/angular/angular.js/issues/3586\n * See feat(jqLite): use querySelectorAll instead of getElementsByTagName in jqLite.find https://github.com/angular/angular.js/pull/3598\n */\nif (angular.element.prototype.querySelectorAll === undefined) {\n  angular.element.prototype.querySelectorAll = function(selector) {\n    return angular.element(this[0].querySelectorAll(selector));\n  };\n}\n\n/**\n * Add closest() to jqLite.\n */\nif (angular.element.prototype.closest === undefined) {\n  angular.element.prototype.closest = function( selector) {\n    var elem = this[0];\n    var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\n\n    while (elem) {\n      if (matchesSelector.bind(elem)(selector)) {\n        return elem;\n      } else {\n        elem = elem.parentElement;\n      }\n    }\n    return false;\n  };\n}\n\nvar latestId = 0;\n\nvar uis = angular.module('ui.select', [])\n\n.constant('uiSelectConfig', {\n  theme: 'bootstrap',\n  searchEnabled: true,\n  sortable: false,\n  placeholder: '', // Empty by default, like HTML tag <select>\n  refreshDelay: 1000, // In milliseconds\n  closeOnSelect: true,\n  skipFocusser: false,\n  dropdownXPosition: 'auto',\n  dropdownYPosition: 'auto',\n  removeSelected: true,\n  resetSearchInput: true,\n  generateId: function() {\n    return latestId++;\n  },\n  appendToBody: false,\n  spinnerEnabled: false,\n  spinnerClass: 'glyphicon glyphicon-refresh ui-select-spin',\n  backspaceReset: true,\n  nullLabel: '(none)',\n  nullValue: null,\n})\n\n// See Rename minErr and make it accessible from outside https://github.com/angular/angular.js/issues/6913\n.service('uiSelectMinErr', function() {\n  var minErr = angular.$$minErr('ui.select');\n  return function() {\n    var error = minErr.apply(this, arguments);\n    var message = error.message.replace(new RegExp('\\nhttp://errors.angularjs.org/.*'), '');\n    return new Error(message);\n  };\n})\n\n// Recreates old behavior of ng-transclude. Used internally.\n.directive('uisTranscludeAppend', function () {\n  return {\n    link: function (scope, element, attrs, ctrl, transclude) {\n        transclude(scope, function (clone) {\n          element.append(clone);\n        });\n      }\n    };\n})\n\n/**\n * Highlights text that matches $select.search.\n *\n * Taken from AngularUI Bootstrap Typeahead\n * See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L340\n */\n.filter('highlight', function() {\n  function escapeRegexp(queryToEscape) {\n    return ('' + queryToEscape).replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  return function(matchItem, query) {\n    return query && matchItem ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<span class=\"ui-select-highlight\">$&</span>') : matchItem;\n  };\n})\n\n/**\n * A read-only equivalent of jQuery's offset function: http://api.jquery.com/offset/\n *\n * Taken from AngularUI Bootstrap Position:\n * See https://github.com/angular-ui/bootstrap/blob/master/src/position/position.js#L70\n */\n.factory('uisOffset',\n  ['$document', '$window',\n  function ($document, $window) {\n\n  return function(element) {\n    var boundingClientRect = element[0].getBoundingClientRect();\n    return {\n      width: boundingClientRect.width || element.prop('offsetWidth'),\n      height: boundingClientRect.height || element.prop('offsetHeight'),\n      top: boundingClientRect.top + ($window.pageYOffset || $document[0].documentElement.scrollTop),\n      left: boundingClientRect.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft)\n    };\n  };\n}]);\n\nuis.directive('uiSelectChoices',\n  ['uiSelectConfig', 'uisRepeatParser', 'uiSelectMinErr', '$compile', '$window',\n  function(uiSelectConfig, RepeatParser, uiSelectMinErr, $compile, $window) {\n\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-choices');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/choices.tpl.html';\n    },\n\n    compile: function(tElement, tAttrs) {\n\n      if (!tAttrs.repeat) throw uiSelectMinErr('repeat', \"Expected 'repeat' expression.\");\n\n      // var repeat = RepeatParser.parse(attrs.repeat);\n      var groupByExp = tAttrs.groupBy;\n      var groupFilterExp = tAttrs.groupFilter;\n\n      if (groupByExp) {\n        var groups = tElement.querySelectorAll('.ui-select-choices-group');\n        if (groups.length !== 1) throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-group but got '{0}'.\", groups.length);\n        groups.attr('ng-repeat', RepeatParser.getGroupNgRepeatExpression());\n      }\n\n      var parserResult = RepeatParser.parse(tAttrs.repeat);\n\n      var choices = tElement.querySelectorAll('.ui-select-choices-row');\n      if (choices.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row but got '{0}'.\", choices.length);\n      }\n\n      choices.attr('ng-repeat', parserResult.repeatExpression(groupByExp));\n\n      var rowsInner = tElement.querySelectorAll('.ui-select-choices-row-inner');\n      if (rowsInner.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row-inner but got '{0}'.\", rowsInner.length);\n      }\n      rowsInner.attr('uis-transclude-append', ''); //Adding uisTranscludeAppend directive to row element after choices element has ngRepeat\n\n      // If IE8 then need to target rowsInner to apply the ng-click attr as choices will not capture the event.\n      var clickTarget = $window.document.addEventListener ? choices : rowsInner;\n      clickTarget.attr('ng-click', '$select.select(' + parserResult.itemName + ',$select.skipFocusser,$event)');\n\n      return function link(scope, element, attrs, $select) {\n        $select.parseRepeatAttr(attrs.repeat, groupByExp, groupFilterExp); //Result ready at $select.parserResult\n        $select.disableChoiceExpression = attrs.uiDisableChoice;\n        $select.onHighlightCallback = attrs.onHighlight;\n        $select.minimumInputLength = parseInt(attrs.minimumInputLength) || 0;\n\n        // Position may be: [auto|up|down] [auto|left|right].\n        var position = String(attrs.position || '').toLowerCase().split(/\\s+/g);\n        $select.dropdownYPosition = position[0] || uiSelectConfig.dropdownYPosition;\n        $select.dropdownXPosition = position[1] || uiSelectConfig.dropdownXPosition;\n\n        scope.$watch('$select.search', function(newValue) {\n          if(newValue && !$select.open && $select.multiple) $select.activate(false, true);\n          $select.activeIndex = $select.tagging.isActivated ? -1 : 0;\n          if (!attrs.minimumInputLength || $select.search.length >= attrs.minimumInputLength) {\n            $select.refresh(attrs.refresh);\n          } else {\n            $select.items = [];\n          }\n        });\n\n        attrs.$observe('refreshDelay', function(refreshDelay) {\n          refreshDelay = scope.$eval(refreshDelay);\n          $select.refreshDelay = refreshDelay !== undefined ? refreshDelay : uiSelectConfig.refreshDelay;\n        });\n\n        attrs.$observe('nullValue', function(value) {\n          value = scope.$eval(value);\n          $select.nullValue = value !== undefined ? value : null;\n          $select.refreshItems();\n        });\n\n        attrs.$observe('nullLabel', function(value) {\n          $select.nullLabel = value !== undefined && value !== '' ? value : uiSelectConfig.nullLabel;\n        });\n\n        scope.$watch('$select.open', function(open) {\n          if (open) {\n            element.attr('role', 'listbox');\n            $select.refresh(attrs.refresh);\n          } else {\n            element.removeAttr('role');\n          }\n        });\n      };\n    }\n  };\n}]);\n\n/**\n * Contains ui-select \"intelligence\".\n *\n * The goal is to limit dependency on the DOM whenever possible and\n * put as much logic in the controller (instead of the link functions) as possible so it can be easily tested.\n */\nuis.controller('uiSelectCtrl', [\n  '$scope', '$element', '$timeout', '$filter', '$$uisDebounce', 'uisRepeatParser', 'uiSelectMinErr', 'uiSelectConfig',\n  '$parse', '$window', uiSelectCtrl\n]);\n\nfunction uiSelectCtrl($scope, $element, $timeout, $filter, $$uisDebounce, RepeatParser, uiSelectMinErr, uiSelectConfig, $parse, $window) {\n  //#region Declarations\n  var ctrl = this; // jshint ignore:line\n  var disabledItems = [];\n  var EMPTY_SEARCH = '';\n  var onResize = $$uisDebounce(sizeSearchInput, 50);\n  var refreshDelayPromise;\n  var sizeWatch = null;\n  var updaterScheduled = false;\n  ctrl.$element = $element;\n  ctrl.$filter = $filter;\n  ctrl.activeIndex = 0; //Dropdown of choices\n  ctrl.clickTriggeredSelect = false;\n  ctrl.closeOnSelect = true; //Initialized inside uiSelect directive link function\n  ctrl.disableChoiceExpression = undefined; // Initialized inside uiSelectChoices directive link function\n  ctrl.disabled = false;\n  ctrl.dropdownXPosition = 'auto';\n  ctrl.dropdownYPosition = 'auto';\n  ctrl.focus = false;\n  ctrl.focusser = undefined; //Reference to input element used to handle focus events\n  ctrl.items = []; //All available choices\n  ctrl.lockChoiceExpression = undefined; // Initialized inside uiSelectMatch directive link function\n  ctrl.multiple = undefined; // Initialized inside uiSelect directive link function\n  ctrl.nullLabel = uiSelectConfig.nullLabel;\n  ctrl.nullValue = uiSelectConfig.nullValue;\n  ctrl.open = false;\n  ctrl.paste = uiSelectConfig.paste;\n  ctrl.placeholder = uiSelectConfig.placeholder;\n  ctrl.refreshDelay = uiSelectConfig.refreshDelay;\n  ctrl.refreshing = false;\n  ctrl.removeSelected = uiSelectConfig.removeSelected; //If selected item(s) should be removed from dropdown list\n  ctrl.resetSearchInput = uiSelectConfig.resetSearchInput;\n  ctrl.search = EMPTY_SEARCH;\n  ctrl.searchEnabled = uiSelectConfig.searchEnabled;\n  ctrl.searchInput = $element.querySelectorAll('input.ui-select-search');\n  ctrl.selected = undefined;\n  ctrl.skipFocusser = false; //Set to true to avoid returning focus to ctrl when item is selected\n  ctrl.sortable = uiSelectConfig.sortable;\n  ctrl.spinnerClass = uiSelectConfig.spinnerClass;\n  ctrl.spinnerEnabled = uiSelectConfig.spinnerEnabled;\n  ctrl.tagging = {isActivated: false, fct: undefined};\n  ctrl.taggingTokens = {isActivated: false, tokens: undefined};\n  //#endregion\n\n  //#region Controller Interface\n  ctrl.activate = activate;\n  ctrl.cancelEvent = cancelEvent;\n  ctrl.clear = clear;\n  ctrl.close = close;\n  ctrl.findGroupByName = findGroupByName;\n  ctrl.focusSearchInput = focusSearchInput;\n  ctrl.getPlaceholder = getPlaceholder;\n  ctrl.getSelectedText = getSelectedText;\n  ctrl.isActive = isActive;\n  ctrl.isDisabled = isDisabled;\n  ctrl.isEmpty = isEmpty;\n  ctrl.isLocked = function() { return false; }; // Overwritten: assume unlocked until _initaliseLockedChoices\n  ctrl.parseRepeatAttr = parseRepeatAttr;\n  ctrl.refresh = refresh;\n  ctrl.refreshItems = angular.noop; // Overwritten: do nothing until parseRepeatAttr is called\n  ctrl.select = select;\n  ctrl.setFocus = setFocus;\n  ctrl.sizeSearchInput = sizeSearchInput;\n  ctrl.tabNavigate = tabNavigate;\n  ctrl.toggle = toggle;\n  //#endregion\n\n  //#region Initialization\n  if (ctrl.searchInput.length !== 1) {\n    throw uiSelectMinErr('searchInput', \"Expected 1 input.ui-select-search but got '{0}'.\", ctrl.searchInput.length);\n  }\n\n  angular.element($window).on('resize', onResize);\n  ctrl.searchInput.on('keydown', onSearchInputKeyDown);\n  ctrl.searchInput.on('paste', onSearchInputPaste);\n  ctrl.searchInput.on('tagged', onSearchInputTagged);\n  $scope.$on('$destroy', onDestroy);\n  $scope.$watch(isLockChoiceExpressionDefined, _initaliseLockedChoices);\n  $scope.$watch('$select.activeIndex', onActiveIndexChange);\n  $scope.$watch('$select.open', onOpenChange);\n  //#endregion\n\n  //#region Controller Functions\n  function isEmpty() {\n    var selected = ctrl.selected;\n    return isNil(selected) || selected === '' || selected.$$null || (ctrl.multiple && !selected.length);\n  }\n\n  function getSelectedText() {\n    return ctrl.$element.find('.ui-select-match-text').text();\n  }\n\n  function getPlaceholder() {\n    var selected = ctrl.selected;\n    if (selected && selected.length) { return; }\n\n    return ctrl.placeholder;\n  }\n\n  function _findIndex(collection, predicate, thisArg) {\n    if (collection.findIndex) {\n      return collection.findIndex(predicate, thisArg);\n    } else {\n      var list = Object(collection);\n      var length = list.length >>> 0;\n      var value;\n\n      for (var i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  }\n\n  // Most of the time the user does not want to empty the search input when in typeahead mode\n  function _resetSearchInput() {\n    if (ctrl.resetSearchInput) {\n      ctrl.search = EMPTY_SEARCH;\n      setActiveIndexToSelected();\n    }\n  }\n\n  function setActiveIndexToSelected() {\n    // Don't change activeIndex to selected if we can select multiple items\n    if (ctrl.multiple) { return; }\n\n    // If we have a track by expression, use that to find the selected item since it might be a copy/different\n    // prototype. Otherwise, do equality checks.\n    var active = -1;\n    var selected = ctrl.selected;\n    var parserResult = ctrl.parserResult;\n    if (angular.equals(selected, ctrl.nullValue)) {\n      active = _findIndex(ctrl.items, isNullValue);\n    } else if (parserResult && ctrl.items.length) {\n      // If tracked by option.field.id, ng-model={field: {id}}, and items [{field: {id}, oopsNotSelected: true}],\n      // angular.equals will not find the ng-model, thus leaving unselected, due to oopsNotSelected.\n      var trackedValue = parserResult.getTrackedValue($scope, selected);\n      active = _findIndex(ctrl.items, function(item) {\n        return angular.equals(parserResult.getTrackedValue($scope, item), trackedValue);\n      });\n    }\n\n    // If we don't have an active index, select first enabled non-generated null item.\n    if (active < 0) {\n      active = _findIndex(ctrl.items, function(item) {\n        return !item.$$null && !_isItemDisabled(item);\n      });\n    }\n\n    ctrl.activeIndex = active;\n  }\n\n  function _groupsFilter(groups, groupNames) {\n    for (var i = 0, j, result = []; i < groupNames.length; i++) {\n      for (j = 0; j < groups.length; j++) {\n        if (groups[j].name == [groupNames[i]]) {\n          result.push(groups[j]);\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function isNullValue(item) {\n    return item.$$null || angular.equals(item[ctrl.itemProperty], ctrl.nullValue);\n  }\n\n  // When the user clicks on ui-select, displays the dropdown list\n  function activate(initSearchValue, avoidReset) {\n    if (!ctrl.disabled && !ctrl.open) {\n      if (!avoidReset) {\n        _resetSearchInput();\n      }\n\n      $scope.$broadcast('uis:activate');\n      ctrl.open = true;\n\n      // Tagging label variant should select the first item\n      if (ctrl.taggingLabel) {\n        ctrl.activeIndex = 0;\n      } else {\n        setActiveIndexToSelected();\n      }\n\n      $timeout(function() {\n        focusSearchInput(initSearchValue);\n        if (!ctrl.tagging.isActivated && ctrl.items.length > 1 && ctrl.open) {\n          _ensureHighlightVisible();\n        }\n      });\n    } else if (ctrl.open && !ctrl.searchEnabled) {\n      // Close the selection if we don't have search enabled, and we click on the select again\n      close();\n    }\n  }\n\n  function focusSearchInput(initSearchValue) {\n    ctrl.search = initSearchValue || ctrl.search;\n    ctrl.searchInput[0].focus();\n  }\n\n  function findGroupByName(name, noStrict) {\n    return ctrl.groups && ctrl.groups.filter(function(group) {\n      if (noStrict) {\n        return group.name == name;\n      } else {\n        return group.name === name;\n      }\n    })[0];\n  }\n\n  function parseRepeatAttr(repeatAttr, groupByExp, groupFilterExp) {\n    var parserResult = RepeatParser.parse(repeatAttr);\n    var originalSource = parserResult.source;\n    ctrl.isGrouped = !!groupByExp;\n    ctrl.itemProperty = parserResult.itemName;\n    ctrl.parserResult = parserResult;\n    ctrl.refreshItems = refreshItems;\n    ctrl.setItemsFn = groupByExp ? updateGroups : updateFlatItems;\n\n    if (parserResult.keyName) { // Check for (key,value) syntax\n      createArrayFromObject();\n      parserResult.source = $parse('$uisSource' + parserResult.filters);\n      $scope.$watch(originalSource, onOriginalSourceChange, true);\n    }\n\n    // See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L259\n    $scope.$watchCollection(parserResult.source, onSourceChange);\n\n    //When an object is used as source, we better create an array and use it as 'source'\n    function createArrayFromObject() {\n      var origSrc = originalSource($scope);\n      $scope.$uisSource = Object.keys(origSrc).map(function(v) {\n        var result = {};\n        result[ctrl.parserResult.keyName] = v;\n        result.value = origSrc[v];\n        return result;\n      });\n    }\n\n    function createNullItem() {\n      var nullItem = {$$null: true};\n      nullItem[ctrl.itemProperty] = ctrl.nullValue;\n      return nullItem;\n    }\n\n    function needsNullItem(items) {\n      return !ctrl.taggingLabel && !ctrl.required && (!ctrl.search || ctrl.nullLabel.toLowerCase().indexOf(ctrl.search) > -1) && !items.some(isNullValue);\n    }\n\n    function onOriginalSourceChange(newVal, oldVal) {\n      if (newVal !== oldVal) {\n        createArrayFromObject();\n      }\n    }\n\n    function onSourceChange(items) {\n      if (isNil(items)) {\n        // If the user specifies undefined or null => reset the collection\n        // Special case: items can be undefined if the user did not initialized the collection on the scope\n        // i.e $scope.addresses = [] is missing\n        ctrl.items = [];\n      } else if (!angular.isArray(items)) {\n        throw uiSelectMinErr('items', \"Expected an array but got '{0}'.\", items);\n      } else {\n        //Remove already selected items (ex: while searching)\n        ctrl.refreshItems(items);\n\n        //update the view value with fresh data from items, if there is a valid model value\n        if (angular.isDefined(ctrl.ngModel.$modelValue)) {\n          ctrl.ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n        }\n      }\n    }\n\n    function refreshItems(data) {\n      //TODO should implement for single mode removeSelected\n      var selectedItems = ctrl.selected;\n      data = data || ctrl.parserResult.source($scope) || ctrl.items || [];\n      if (!ctrl.multiple || !ctrl.removeSelected || isEmpty() || (angular.isArray(selectedItems) && !selectedItems.length)) {\n        ctrl.setItemsFn(data);\n      } else if (!isNil(data)) {\n        ctrl.setItemsFn(data.filter(excludeSelected));\n      }\n\n      $scope.calculateDropdownPos();\n      $scope.$broadcast('uis:refresh');\n\n      function excludeSelected(item) {\n        return angular.isArray(selectedItems) ? selectedItems.every(isNotSelected) : isNotSelected(selectedItems);\n\n        function isNotSelected(selectedItem) {\n          return !angular.equals(item, selectedItem);\n        }\n      }\n    }\n\n    function updateFlatItems(items) {\n      ctrl.items = items;\n\n      // Insert our null item at the head of the items\n      if (needsNullItem(items)) {\n        items.unshift(createNullItem());\n      }\n    }\n\n    function updateGroups(items) {\n      items = items || ctrl.items;\n\n      // Group items together by the group by expression\n      var groupFn = $scope.$eval(groupByExp);\n      ctrl.items = [];\n      ctrl.groups = [];\n      items.forEach(function(item) {\n        var groupName = angular.isFunction(groupFn) ? groupFn(item) : item[groupFn];\n        var group = findGroupByName(groupName);\n        if (group) {\n          group.items.push(item);\n        } else {\n          ctrl.groups.push({name: groupName, items: [item]});\n        }\n      });\n\n      // Filter the groups by the given filter expression\n      var groupFilterFn = groupFilterExp && $scope.$eval(groupFilterExp);\n      if (angular.isFunction(groupFilterFn)) {\n        ctrl.groups = groupFilterFn(ctrl.groups);\n      } else if (angular.isArray(groupFilterFn)) {\n        ctrl.groups = _groupsFilter(ctrl.groups, groupFilterFn);\n      }\n\n      // Collect the remaining items in the same order of the filtered groups.\n      items = ctrl.items = ctrl.groups.reduce(function(items, group) {\n        return items.concat(group.items);\n      }, []);\n\n      // Insert our null item at the head of the list if we dont have an item that represents null.\n      if (needsNullItem(items)) {\n        var group = ctrl.groups[0] || (ctrl.groups[0] = {name: '', items: []});\n        var nullItem = createNullItem();\n        group.items.unshift(nullItem);\n        items.unshift(nullItem);\n      }\n    }\n  }\n\n  /**\n   * Typeahead mode: lets the user refresh the collection using his own function.\n   *\n   * See Expose $select.search for external / remote filtering https://github.com/angular-ui/ui-select/pull/31\n   */\n  function refresh(refreshAttr) {\n    if (!isNil(refreshAttr)) {\n      // Debounce\n      // See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L155\n      // FYI AngularStrap typeahead does not have debouncing: https://github.com/mgcrea/angular-strap/blob/v2.0.0-rc.4/src/typeahead/typeahead.js#L177\n      if (refreshDelayPromise) {\n        $timeout.cancel(refreshDelayPromise);\n      }\n\n      refreshDelayPromise = $timeout(function() {\n        if ($scope.$select.search.length >= $scope.$select.minimumInputLength) {\n          var refreshPromise = $scope.$eval(refreshAttr);\n          if (refreshPromise && angular.isFunction(refreshPromise.then) && !ctrl.refreshing) {\n            ctrl.refreshing = true;\n            refreshPromise.finally(function() {\n              ctrl.refreshing = false;\n            });\n          }\n        }\n      }, ctrl.refreshDelay);\n    }\n  }\n\n  function isActive(itemScope) {\n    if (!ctrl.open) { return false; }\n\n    var itemIndex = ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n    var isActive = itemIndex == ctrl.activeIndex;\n    if (!isActive || itemIndex < 0) { return false; }\n\n    if (isActive && !angular.isUndefined(ctrl.onHighlightCallback)) {\n      itemScope.$eval(ctrl.onHighlightCallback);\n    }\n\n    return isActive;\n  }\n\n  function _isItemSelected(item) {\n    var selected = ctrl.selected;\n    return (angular.isArray(selected) && selected.filter(function(selection) {\n      return angular.equals(selection, item);\n    }).length > 0);\n  }\n\n  function _updateItemDisabled(item, isDisabled) {\n    var disabledItemIndex = disabledItems.indexOf(item);\n    if (isDisabled && disabledItemIndex === -1) {\n      disabledItems.push(item);\n    }\n\n    if (!isDisabled && disabledItemIndex > -1) {\n      disabledItems.splice(disabledItemIndex, 1);\n    }\n  }\n\n  function _isItemDisabled(item) {\n    return disabledItems.indexOf(item) > -1;\n  }\n\n  function isDisabled(itemScope) {\n    if (!ctrl.open) { return; }\n\n    var item = itemScope[ctrl.itemProperty];\n    var itemIndex = ctrl.items.indexOf(item);\n    var isDisabled = false;\n    if (itemIndex >= 0 && (angular.isDefined(ctrl.disableChoiceExpression) || ctrl.multiple)) {\n      if (item.isTag) { return false; }\n\n      if (ctrl.multiple) {\n        isDisabled = _isItemSelected(item);\n      }\n\n      if (!isDisabled && angular.isDefined(ctrl.disableChoiceExpression)) {\n        isDisabled = !!(itemScope.$eval(ctrl.disableChoiceExpression));\n      }\n\n      _updateItemDisabled(item, isDisabled);\n    }\n\n    return isDisabled;\n  }\n\n  // When the user selects an item with ENTER or clicks the dropdown\n  function select(item, skipFocusser, $event) {\n    if (isNil(item) || !_isItemDisabled(item)) {\n      if (!ctrl.items && !ctrl.search && !ctrl.tagging.isActivated) { return; }\n\n      if (!item || !_isItemDisabled(item)) {\n        // if click is made on existing item, prevent from tagging, ctrl.search does not matter\n        ctrl.clickTriggeredSelect = false;\n        if ($event && ($event.type === 'click' || $event.type === 'touchend') && item) {\n          ctrl.clickTriggeredSelect = true;\n        }\n\n        if (ctrl.tagging.isActivated && ctrl.clickTriggeredSelect === false) {\n          // if taggingLabel is disabled and item is undefined we pull from ctrl.search\n          if (ctrl.taggingLabel === false) {\n            if (ctrl.activeIndex < 0) {\n              if (item === undefined) {\n                item = ctrl.tagging.fct !== undefined ? ctrl.tagging.fct(ctrl.search) : ctrl.search;\n              }\n\n              if (!item || angular.equals(ctrl.items[0], item)) { return; }\n            } else {\n              // keyboard nav happened first, user selected from dropdown\n              item = ctrl.items[ctrl.activeIndex];\n            }\n          } else {\n            // tagging always operates at index zero, taggingLabel === false pushes\n            // the ctrl.search value without having it injected\n            if (ctrl.activeIndex === 0) {\n              // ctrl.tagging pushes items to ctrl.items, so we only have empty val\n              // for `item` if it is a detected duplicate\n              if (item === undefined) { return; }\n\n              // create new item on the fly if we don't already have one;\n              // use tagging function if we have one\n              if (ctrl.tagging.fct !== undefined && typeof item === 'string') {\n                item = ctrl.tagging.fct(item);\n                if (!item)  { return; }\n                // if item type is 'string', apply the tagging label\n              } else if (typeof item === 'string') {\n                // trim the trailing space\n                item = item.replace(ctrl.taggingLabel, '').trim();\n              }\n            }\n          }\n          // search ctrl.selected for dupes potentially caused by tagging and return early if found\n          if (_isItemSelected(item)) {\n            close(skipFocusser);\n            return;\n          }\n        }\n\n        _resetSearchInput();\n        $scope.$broadcast('uis:select', item);\n\n        if (ctrl.closeOnSelect) {\n          close(skipFocusser);\n        }\n      }\n    }\n  }\n\n  // Closes the dropdown\n  function close(skipFocusser) {\n    if (!ctrl.open) { return; }\n\n    if (ctrl.ngModel && ctrl.ngModel.$setTouched) {\n      ctrl.ngModel.$setTouched();\n    }\n\n    ctrl.open = false;\n    _resetSearchInput();\n    $scope.$broadcast('uis:close', skipFocusser);\n  }\n\n\n  function setFocus() {\n    if (!ctrl.focus) {\n      ctrl.focusInput[0].focus();\n    }\n  }\n\n  function clear($event) {\n    select(ctrl.nullValue);\n    $event.stopPropagation();\n    $timeout(function() {\n      ctrl.focusser[0].focus();\n    }, 0, false);\n  }\n\n  // Toggle dropdown\n  function toggle(e) {\n    if (ctrl.open) {\n      close();\n    } else {\n      activate();\n    }\n\n    cancelEvent(e);\n  }\n\n  function _initaliseLockedChoices(doInitalise) {\n    if (!doInitalise) { return; }\n\n    var lockedItems = [];\n    ctrl.isLocked = isLockedFn;\n\n    function _updateItemLocked(item, isLocked) {\n      var lockedItemIndex = lockedItems.indexOf(item);\n      if (isLocked && lockedItemIndex === -1) {\n        lockedItems.push(item);\n      }\n\n      if (!isLocked && lockedItemIndex > -1) {\n        lockedItems.splice(lockedItemIndex, 1);\n      }\n    }\n\n    function _isItemlocked(item) {\n      return lockedItems.indexOf(item) > -1;\n    }\n\n    function isLockedFn(itemScope, itemIndex) {\n      var isLocked = false;\n      var item = ctrl.selected[itemIndex];\n\n      if (item) {\n        if (itemScope) {\n          isLocked = !!itemScope.$eval(ctrl.lockChoiceExpression);\n          _updateItemLocked(item, isLocked);\n        } else {\n          isLocked = _isItemlocked(item);\n        }\n      }\n\n      return isLocked;\n    }\n  }\n\n  function sizeSearchInput() {\n    var input = ctrl.searchInput[0];\n    var container = ctrl.$element[0];\n    ctrl.searchInput.css('width', '10px');\n    $timeout(function() { //Give tags time to render correctly\n      if (sizeWatch === null && !updateIfVisible(calculateContainerWidth())) {\n        sizeWatch = $scope.$watch(function() {\n          if (!updaterScheduled) {\n            updaterScheduled = true;\n            $scope.$$postDigest(function() {\n              updaterScheduled = false;\n              if (updateIfVisible(calculateContainerWidth())) {\n                sizeWatch();\n                sizeWatch = null;\n              }\n            });\n          }\n        }, angular.noop);\n      }\n    });\n\n    function calculateContainerWidth() {\n      // Return the container width only if the search input is visible\n      return container.clientWidth * !!input.offsetParent;\n    }\n\n    function updateIfVisible(containerWidth) {\n      if (containerWidth === 0) { return false; }\n\n      var inputWidth = containerWidth - input.offsetLeft;\n      if (inputWidth < 50) {\n        inputWidth = containerWidth;\n      }\n\n      ctrl.searchInput.css('width', inputWidth + 'px');\n      return true;\n    }\n  }\n\n  function _handleDropDownSelection(key, shiftKey) {\n    var processed = true;\n    switch (key) {\n      case KEY.DOWN:\n      case KEY.UP:\n        if (!ctrl.open && ctrl.multiple) {\n          // In case its the search input in 'multiple' mode\n          activate(false, true);\n        } else {\n          var len = ctrl.items.length;\n          do {\n            ctrl.activeIndex += key === KEY.UP ? -1 : 1;\n          } while (ctrl.activeIndex > 0 && ctrl.activeIndex < len && _isItemDisabled(ctrl.items[ctrl.activeIndex]));\n\n          ctrl.activeIndex = Math.max(0, Math.min(len - 1, ctrl.activeIndex));\n        }\n\n        break;\n      case KEY.TAB:\n        if (!ctrl.multiple || ctrl.open) {\n          select(ctrl.items[ctrl.activeIndex], true);\n          tabNavigate(shiftKey);\n        }\n\n        break;\n      case KEY.ENTER:\n        if (ctrl.open && (ctrl.tagging.isActivated || ctrl.activeIndex >= 0)) {\n          // Make sure at least one dropdown item is highlighted before adding if not in tagging mode\n          select(ctrl.items[ctrl.activeIndex], ctrl.skipFocusser);\n        } else {\n          // In case its the search input in 'multiple' mode\n          activate(false, true);\n        }\n\n        break;\n      case KEY.ESC:\n        close();\n        break;\n      default:\n        processed = false;\n    }\n    return processed;\n  }\n\n  function cancelEvent(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function tabNavigate(shiftKey) {\n    close(true);\n\n    $timeout(function() {\n      var focusEl = ctrl.focusser && ctrl.focusser[0];\n      if (!focusEl) { return; }\n\n      var focusable = angular.element(':tabbable');\n      var index = focusable.index(focusEl);\n      if (index > -1) {\n        index += shiftKey ? -1 : 1;\n        var el = focusable[index + (index < 0 ? focusable.length : 0)];\n        if (el) {\n          el.focus();\n        }\n      }\n    }, 50);\n  }\n\n  function onSearchInputKeyDown(e) {\n    var key = e.which;\n    if (~[KEY.ENTER, KEY.ESC, KEY.TAB].indexOf(key)) {\n      cancelEvent(e);\n    }\n\n    $scope.$apply(function() {\n      var tagged = false;\n      if (ctrl.items.length > 0 || ctrl.tagging.isActivated) {\n        if (!_handleDropDownSelection(key, e.shiftKey) && !ctrl.searchEnabled) {\n          cancelEvent(e);\n        }\n\n        if (ctrl.taggingTokens.isActivated) {\n          for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {\n            if (ctrl.taggingTokens.tokens[i] === KEY.MAP[e.keyCode]) {\n              // make sure there is a new value to push via tagging\n              if (ctrl.search.length > 0) {\n                tagged = true;\n              }\n            }\n          }\n\n          if (tagged) {\n            $timeout(function() {\n              ctrl.searchInput.triggerHandler('tagged');\n              var newItem = ctrl.search.replace(KEY.MAP[e.keyCode], '').trim();\n              if (ctrl.tagging.fct) {\n                newItem = ctrl.tagging.fct(newItem);\n              }\n\n              if (newItem) {\n                select(newItem, true);\n              }\n            });\n          }\n        }\n      } else if (key === KEY.TAB) {\n        // Don't trap users in lists with no items\n        tabNavigate(e.shiftKey);\n      }\n    });\n\n    if (KEY.isVerticalMovement(key) && ctrl.items.length > 0) {\n      _ensureHighlightVisible();\n    }\n  }\n\n  function onSearchInputPaste(e) {\n    var data;\n    if (window.clipboardData && window.clipboardData.getData) { // IE\n      data = window.clipboardData.getData('Text');\n    } else {\n      data = (e.originalEvent || e).clipboardData.getData('text/plain');\n    }\n\n    // Prepend the current input field text to the paste buffer.\n    data = ctrl.search + data;\n    if (data && data.length > 0) {\n      // If tagging try to split by tokens and add items\n      if (ctrl.taggingTokens.isActivated) {\n        var items = [];\n        for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {  // split by first token that is contained in data\n          var separator = KEY.toSeparator(ctrl.taggingTokens.tokens[i]) || ctrl.taggingTokens.tokens[i];\n          if (data.indexOf(separator) > -1) {\n            items = data.split(separator);\n            break;  // only split by one token\n          }\n        }\n\n        if (items.length === 0) {\n          items = [data];\n        }\n\n        var oldsearch = ctrl.search;\n        items.forEach(function(item) {\n          var newItem = ctrl.tagging.fct ? ctrl.tagging.fct(item) : item;\n          if (newItem) {\n            select(newItem, true);\n          }\n        });\n        ctrl.search = oldsearch || EMPTY_SEARCH;\n        cancelEvent(e);\n      } else if (ctrl.paste) {\n        ctrl.paste(data);\n        ctrl.search = EMPTY_SEARCH;\n        cancelEvent(e);\n      }\n    }\n  }\n\n  function onSearchInputTagged() {\n    $timeout(_resetSearchInput);\n  }\n\n  // See https://github.com/ivaynberg/select2/blob/3.4.6/select2.js#L1431\n  function _ensureHighlightVisible() {\n    var container = $element.querySelectorAll('.ui-select-choices-content');\n    var choices = container.querySelectorAll('.ui-select-choices-row');\n    if (choices.length < 1) {\n      throw uiSelectMinErr('choices', \"Expected multiple .ui-select-choices-row but got '{0}'.\", choices.length);\n    }\n\n    // Bail out if we can't find the highlighted row.\n    var highlighted = choices[ctrl.activeIndex];\n    if (!highlighted) { return; }\n\n    var posY = highlighted.offsetTop + highlighted.clientHeight - container[0].scrollTop;\n    var height = container[0].offsetHeight;\n    if (posY > height) {\n      container[0].scrollTop += posY - height;\n    } else if (posY < highlighted.clientHeight) {\n      if (ctrl.isGrouped && ctrl.activeIndex === 0) {\n        container[0].scrollTop = 0; //To make group header visible when going all the way up\n      } else {\n        container[0].scrollTop -= highlighted.clientHeight - posY;\n      }\n    }\n  }\n\n  function isLockChoiceExpressionDefined() {\n    return angular.isDefined(ctrl.lockChoiceExpression) && ctrl.lockChoiceExpression !== \"\";\n  }\n\n  function onActiveIndexChange(activeIndex) {\n    if (activeIndex) {\n      $element.find('input').attr(\n        'aria-activedescendant',\n        'ui-select-choices-row-' + ctrl.generatedId + '-' + activeIndex);\n    }\n  }\n\n  function onDestroy() {\n    ctrl.searchInput.off('keyup keydown tagged blur paste');\n    angular.element($window).off('resize', onResize);\n  }\n\n  function onOpenChange(open) {\n    if (!open) {\n      $element.find('input').removeAttr('aria-activedescendant');\n    }\n  }\n  //#endregion\n}\n\nuis.directive('uiSelect',\n  ['$document', 'uiSelectConfig', 'uiSelectMinErr', 'uisOffset', '$parse', '$timeout', '$window',\n  function($document, uiSelectConfig, uiSelectMinErr, uisOffset, $parse, $timeout, $window) {\n\n  return {\n    restrict: 'EA',\n    templateUrl: function(tElement, tAttrs) {\n      var theme = tAttrs.theme || uiSelectConfig.theme;\n      return theme + (angular.isDefined(tAttrs.multiple) ? '/select-multiple.tpl.html' : '/select.tpl.html');\n    },\n    replace: true,\n    transclude: true,\n    require: ['uiSelect', '^ngModel', '?^^fieldset'],\n    scope: true,\n\n    controller: 'uiSelectCtrl',\n    controllerAs: '$select',\n    compile: function(tElement, tAttrs) {\n\n      // Allow setting ngClass on uiSelect\n      var match = /{(.*)}\\s*{(.*)}/.exec(tAttrs.ngClass);\n      if(match) {\n        var combined = '{'+ match[1] +', '+ match[2] +'}';\n        tAttrs.ngClass = combined;\n        tElement.attr('ng-class', combined);\n      }\n\n      //Multiple or Single depending if multiple attribute presence\n      if (angular.isDefined(tAttrs.multiple))\n        tElement.append('<ui-select-multiple/>').removeAttr('multiple');\n      else\n        tElement.append('<ui-select-single/>');\n\n      if (tAttrs.inputId)\n        tElement.querySelectorAll('input.ui-select-search')[0].id = tAttrs.inputId;\n\n      return function(scope, element, attrs, ctrls, transcludeFn) {\n        var $select = ctrls[0];\n        var ngModel = ctrls[1];\n        var $fieldset = ctrls[2];\n\n        var documentElement = $document[0].documentElement;\n        var dropdown = angular.element(); // Hold on to a reference to the .ui-select-dropdown element for direction support.\n        var originalWidth = '';\n        var placeholder = null; // Hold on to a reference to the .ui-select-container element for appendToBody support\n\n        // Support for appending the select field to the body when its open\n        var appendToBody = scope.$eval(attrs.appendToBody);\n        if (appendToBody === undefined) {\n          appendToBody = uiSelectConfig.appendToBody;\n        }\n\n        $select.generatedId = uiSelectConfig.generateId();\n        $select.baseTitle = attrs.title || 'Select box';\n        $select.focusserTitle = $select.baseTitle + ' focus';\n        $select.focusserId = 'focusser-' + $select.generatedId;\n\n        $select.closeOnSelect = function() {\n          if (angular.isDefined(attrs.closeOnSelect)) {\n            return $parse(attrs.closeOnSelect)();\n          } else {\n            return uiSelectConfig.closeOnSelect;\n          }\n        }();\n\n        scope.$watch('skipFocusser', function() {\n            var skipFocusser = scope.$eval(attrs.skipFocusser);\n            $select.skipFocusser = skipFocusser !== undefined ? skipFocusser : uiSelectConfig.skipFocusser;\n        });\n\n        $select.onSelectCallback = $parse(attrs.onSelect);\n        $select.onRemoveCallback = $parse(attrs.onRemove);\n\n        //Set reference to ngModel from uiSelectCtrl\n        $select.ngModel = ngModel;\n\n        $select.choiceGrouped = function(group){\n          return $select.isGrouped && group && group.name;\n        };\n\n        if(attrs.tabindex){\n          attrs.$observe('tabindex', function(value) {\n            $select.focusInput.attr('tabindex', value);\n            element.removeAttr('tabindex');\n          });\n        }\n\n        scope.$watch(function () { return scope.$eval(attrs.searchEnabled); }, function(newVal) {\n          $select.searchEnabled = newVal !== undefined ? newVal : uiSelectConfig.searchEnabled;\n        });\n\n        scope.$watch('sortable', function() {\n            var sortable = scope.$eval(attrs.sortable);\n            $select.sortable = sortable !== undefined ? sortable : uiSelectConfig.sortable;\n        });\n\n        attrs.$observe('backspaceReset', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var backspaceReset = scope.$eval(attrs.backspaceReset);\n          $select.backspaceReset = backspaceReset !== undefined ? backspaceReset : true;\n        });\n\n        attrs.$observe('limit', function() {\n          //Limit the number of selections allowed\n          $select.limit = (angular.isDefined(attrs.limit)) ? parseInt(attrs.limit, 10) : undefined;\n        });\n\n        scope.$watch('removeSelected', function() {\n            var removeSelected = scope.$eval(attrs.removeSelected);\n            $select.removeSelected = removeSelected !== undefined ? removeSelected : uiSelectConfig.removeSelected;\n        });\n\n        // If the disable attribute is applied, or a parent fieldset becomes disabled, disable the select.\n        scope.$watch(function() { return element.attr('disabled') || $fieldset && $fieldset.isDisabled(); }, function(disabled) {\n          $select.disabled = disabled;\n        });\n\n        attrs.$observe('resetSearchInput', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var resetSearchInput = scope.$eval(attrs.resetSearchInput);\n          $select.resetSearchInput = resetSearchInput !== undefined ? resetSearchInput : true;\n        });\n\n        attrs.$observe('paste', function() {\n          $select.paste = scope.$eval(attrs.paste);\n        });\n\n        attrs.$observe('tagging', function() {\n          if(attrs.tagging !== undefined)\n          {\n            // $eval() is needed otherwise we get a string instead of a boolean\n            var taggingEval = scope.$eval(attrs.tagging);\n            $select.tagging = {isActivated: true, fct: taggingEval !== true ? taggingEval : undefined};\n          }\n          else\n          {\n            $select.tagging = {isActivated: false, fct: undefined};\n          }\n        });\n\n        attrs.$observe('taggingLabel', function() {\n          if(attrs.tagging !== undefined )\n          {\n            // check eval for FALSE, in this case, we disable the labels\n            // associated with tagging\n            if ( attrs.taggingLabel === 'false' ) {\n              $select.taggingLabel = false;\n            }\n            else\n            {\n              $select.taggingLabel = attrs.taggingLabel !== undefined ? attrs.taggingLabel : '(new)';\n            }\n          }\n        });\n\n        attrs.$observe('taggingTokens', function() {\n          if (attrs.tagging !== undefined) {\n            var tokens = attrs.taggingTokens !== undefined ? attrs.taggingTokens.split('|') : [',','ENTER'];\n            $select.taggingTokens = {isActivated: true, tokens: tokens };\n          }\n        });\n\n        attrs.$observe('spinnerEnabled', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var spinnerEnabled = scope.$eval(attrs.spinnerEnabled);\n          $select.spinnerEnabled = spinnerEnabled !== undefined ? spinnerEnabled : uiSelectConfig.spinnerEnabled;\n        });\n\n        attrs.$observe('spinnerClass', function() {\n          var spinnerClass = attrs.spinnerClass;\n          $select.spinnerClass = spinnerClass !== undefined ? attrs.spinnerClass : uiSelectConfig.spinnerClass;\n        });\n\n        // Keep track of whether or not this field is required, if it is, do not allow it to be cleared.\n        scope.$watch(\n          function() { return !!scope.$eval(attrs.ngRequired); },\n          function(required, oldRequired) {\n            $select.required = required;\n            $select.refreshItems();\n          }\n        );\n\n        //Automatically gets focus when loaded\n        if (angular.isDefined(attrs.autofocus)) {\n          resetFocus();\n        }\n\n        //Gets focus based on scope event name (e.g. focus-on='SomeEventName')\n        if (angular.isDefined(attrs.focusOn)) {\n          scope.$on(attrs.focusOn, resetFocus);\n        }\n\n        // Move transcluded elements to their correct position in main template\n        transcludeFn(scope, function(clone) {\n          // See Transclude in AngularJS http://blog.omkarpatil.com/2012/11/transclude-in-angularjs.html\n\n          // One day jqLite will be replaced by jQuery and we will be able to write:\n          // var transcludedElement = clone.filter('.my-class')\n          // instead of creating a hackish DOM element:\n          var transcluded = angular.element('<div>').append(clone);\n\n          var transcludedMatch = transcluded.querySelectorAll('.ui-select-match');\n          transcludedMatch.removeAttr('ui-select-match'); //To avoid loop in case directive as attr\n          transcludedMatch.removeAttr('data-ui-select-match'); // Properly handle HTML5 data-attributes\n          if (transcludedMatch.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-match but got '{0}'.\", transcludedMatch.length);\n          }\n          element.querySelectorAll('.ui-select-match').replaceWith(transcludedMatch);\n\n          var transcludedChoices = transcluded.querySelectorAll('.ui-select-choices');\n          transcludedChoices.removeAttr('ui-select-choices'); //To avoid loop in case directive as attr\n          transcludedChoices.removeAttr('data-ui-select-choices'); // Properly handle HTML5 data-attributes\n          if (transcludedChoices.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-choices but got '{0}'.\", transcludedChoices.length);\n          }\n          element.querySelectorAll('.ui-select-choices').replaceWith(transcludedChoices);\n\n          var transcludedNoChoice = transcluded.querySelectorAll('.ui-select-no-choice');\n          transcludedNoChoice.removeAttr('ui-select-no-choice'); //To avoid loop in case directive as attr\n          transcludedNoChoice.removeAttr('data-ui-select-no-choice'); // Properly handle HTML5 data-attributes\n          if (transcludedNoChoice.length == 1) {\n            element.querySelectorAll('.ui-select-no-choice').replaceWith(transcludedNoChoice);\n          }\n\n          var transcludedHeader = transcluded.querySelectorAll('.ui-select-header');\n          transcludedHeader.removeAttr('ui-select-header'); // To avoid loop in case directive as attr\n          transcludedHeader.removeAttr('data-ui-select-header'); // Properly handle HTML5 data-attributes\n          if (transcludedHeader.length == 1) {\n            element.querySelectorAll('.ui-select-header').replaceWith(transcludedHeader);\n          } else {\n            element.querySelectorAll('.ui-select-header').remove();\n          }\n\n          var transcludedFooter = transcluded.querySelectorAll('.ui-select-footer');\n          transcludedFooter.removeAttr('ui-select-footer'); // To avoid loop in case directive as attr\n          transcludedFooter.removeAttr('data-ui-select-footer'); // Properly handle HTML5 data-attributes\n          if (transcludedFooter.length == 1) {\n            element.querySelectorAll('.ui-select-footer').replaceWith(transcludedFooter);\n          } else {\n            element.querySelectorAll('.ui-select-footer').remove();\n          }\n        });\n\n        scope.$watch('$select.open', function(isOpen) {\n          if (isOpen) {\n            // Attach global handlers that cause the dropdowns to close\n            $window.addEventListener('mousedown', closeOnClick, true);\n            $window.addEventListener('scroll', closeOnScroll, true);\n            $window.addEventListener('resize', closeOnResize, true);\n\n            if (appendToBody) {\n              // Wait for ui-select-match child directive, it hasn't started rendering yet.\n              scope.$evalAsync(positionDropdown);\n            }\n\n            scope.calculateDropdownPos();\n          } else {\n            resetDropdown();\n          }\n        });\n\n        // Move the dropdown back to its original location when the scope is destroyed. Otherwise\n        // it might stick around when the user routes away or the select field is otherwise removed\n        scope.$on('$destroy', resetDropdown);\n\n        scope.calculateDropdownPos = function() {\n          if (!$select.open) { return; }\n\n          dropdown = dropdown.length ? dropdown : angular.element(element).querySelectorAll('.ui-select-dropdown');\n          if (!dropdown.length) { return; }\n\n          // Clear existing state and hide dropdown\n          dropdown[0].style.position = '';\n          dropdown[0].style.top = '';\n          dropdown[0].style.visibility = 'hidden';\n          element.removeClass('direction-up dropdown-menu-right');\n\n          // Determine X positioning\n          var offset = uisOffset(element);\n          var offsetDropdown = uisOffset(dropdown);\n          var scrollTarget = documentElement || $document[0].body;\n          var xState = $select.dropdownXPosition;\n          dropdown.toggleClass('dropdown-menu-right', xState === 'right' ||\n            (xState === 'auto' && offset.left + offsetDropdown.width - scrollTarget.scrollLeft > documentElement.clientWidth)\n          );\n\n          // Determine Y positioning\n          var yState = $select.dropdownYPosition;\n          var top = yState === 'up' || (yState === 'auto' && offset.top + offset.height + offsetDropdown.height - scrollTarget.scrollTop > documentElement.clientHeight) ?\n            (offsetDropdown.height * -1) + 'px' :\n            '';\n\n          // Apply and make visible.\n          dropdown[0].style.position = top ? 'absolute' : '';\n          dropdown[0].style.top = top;\n          dropdown[0].style.visibility = '';\n          if (top) {\n            element.addClass('direction-up');\n          }\n        };\n\n        function calculateSelectLeftPosition(offset) {\n          var scrollLeft = documentElement.scrollLeft || $document[0].body.scrollLeft;\n          var edgeOffscreenAmount = (offset.left + offset.width) - (scrollLeft + documentElement.clientWidth);\n          var paddingFromEdge = 30;\n\n          var leftPosition = offset.left;\n          if (edgeOffscreenAmount > 0) {\n            leftPosition -= (edgeOffscreenAmount + paddingFromEdge);\n          }\n\n          return leftPosition;\n        }\n\n        function closeOnClick(e) {\n          if (!$select.open) return; //Skip it if dropdown is close\n\n          var contains = false;\n          var target = e.target || e.srcElement;\n\n          if (window.jQuery) {\n            // Firefox 3.6 does not support element.contains()\n            // See Node.contains https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\n            contains = window.jQuery.contains(element[0], target);\n          } else {\n            contains = element[0].contains(target);\n          }\n          if (!contains && !$select.clickTriggeredSelect) {\n            var skipFocusser;\n            if (!$select.skipFocusser) {\n              //Will lose focus only with certain targets\n              var focusableControls = ['input','button','textarea','select'];\n              var targetController = angular.element(target).controller('uiSelect'); //To check if target is other ui-select\n              skipFocusser = targetController && targetController !== $select; //To check if target is other ui-select\n              if (!skipFocusser) skipFocusser =  ~focusableControls.indexOf(target.tagName.toLowerCase()); //Check if target is input, button or textarea\n            } else {\n              skipFocusser = true;\n            }\n\n            $select.close(skipFocusser);\n            scope.$digest();\n          }\n          $select.clickTriggeredSelect = false;\n        }\n\n        function closeOnResize() {\n          $select.close(false);\n        }\n\n        function closeOnScroll(e) {\n          if (!element[0].contains(e.target || e.srcElement)) {\n            $select.close(false);\n          }\n        }\n\n        function positionDropdown() {\n          // Remember the absolute position of the element\n          var offset = uisOffset(element);\n\n          // Clone the element into a placeholder element to take its original place in the DOM\n          placeholder = angular.element('<div class=\"ui-select-placeholder\"></div>');\n          placeholder[0].style.width = offset.width + 'px';\n          placeholder[0].style.height = offset.height + 'px';\n          element.after(placeholder);\n\n          // Remember the original value of the element width inline style, so it can be restored\n          // when the dropdown is closed\n          originalWidth = element[0].style.width;\n          element[0].style.position = 'absolute';\n          element[0].style.left = calculateSelectLeftPosition(offset) + 'px';\n          element[0].style.top = offset.top + 'px';\n          element[0].style.width = offset.width + 'px';\n          $document[0].body.appendChild(element[0]);\n        }\n\n        function resetDropdown() {\n          $window.removeEventListener('mousedown', closeOnClick, true);\n          $window.removeEventListener('scroll', closeOnResize, true);\n          $window.removeEventListener('resize', resetDropdown, true);\n\n          // Move the dropdown element back to its original location in the DOM if we moved it.\n          if (placeholder) {\n            element[0].style.position = '';\n            element[0].style.left = '';\n            element[0].style.top = '';\n            element[0].style.width = originalWidth;\n            placeholder.replaceWith(element);\n            placeholder = null;\n            resetFocus();\n          }\n        }\n\n        function resetFocus() {\n          $timeout(function(){\n            $select.setFocus();\n          });\n        }\n      };\n    }\n  };\n}]);\n\nuis.directive('uiSelectFooter', ['uiSelectConfig', function (uiSelectConfig) {\n  return {\n    templateUrl: function (tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-footer');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/footer.tpl.html';\n    },\n    restrict: 'EA',\n    transclude: true,\n    replace: true\n  };\n}]);\n\nuis.directive('uiSelectHeader', ['uiSelectConfig', function (uiSelectConfig) {\n  return {\n    templateUrl: function (tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-header');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/header.tpl.html';\n    },\n    restrict: 'EA',\n    transclude: true,\n    replace: true\n  };\n}]);\n\nuis.directive('uiSelectHeaderGroupSelectable', ['$timeout', function($timeout) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect'],\n    scope: {\n      isEnabled: \"<?uiSelectHeaderGroupSelectable\"\n    },\n    link: function ($scope, $element, attrs, select) {\n      // TODO Why that???\n      var $select = select[0];\n      if (angular.isUndefined($scope.isEnabled)) {\n        $scope.isEnabled = true;\n      }\n\n      function isEnabled() {\n        return angular.isUndefined($scope.isEnabled) || $scope.isEnabled;\n      }\n\n      function getElements() {\n        if ($select.multiple && $select.groups) {\n          return $element.querySelectorAll('.ui-select-choices-group-label');\n        } else {\n          console.error('Use uiSelectHeaderGroupSelectable with no multiple uiSelect or without groupBy');\n          return [];\n        }\n      }\n\n      function enableClick() {\n        if (isEnabled()) {\n          getElements().forEach(function(e) {\n            var element = angular.element(e);\n\n            // Check the onClick event is not already listen\n            if (!element.hasClass('ui-select-header-group-selectable')) {\n              element.addClass('ui-select-header-group-selectable');\n\n              element.on('click', function () {\n                if (isEnabled()) {\n                  var group = $select.findGroupByName(element.text(), true);\n\n                  group.items.forEach(function(item) {\n                    $timeout(function() {\n                      $select.select(item, false, ' ');\n                    });\n                  });\n                }\n              });\n            }\n          });\n        }\n      }\n\n      function disableClick() {\n        if (!isEnabled()) {\n          getElements().forEach(function(e) {\n            var element = angular.element(e);\n            element.removeClass('ui-select-header-group-selectable');\n            element.off('click');\n          });\n        }\n      }\n\n      // Watch element to trigger select event\n      $scope.$watch('isEnabled', function() {\n        if (!isEnabled()) {\n          disableClick();\n        } else {\n          enableClick();\n        }\n      });\n\n      $scope.$watch('$select.groups', enableClick);\n      $scope.$watch(function() {\n        return $select.selected && $select.selected.length ? $select.selected.length : -1;\n      }, enableClick);\n    }\n  };\n}]);\n\nuis.directive('uiSelectMatch', ['uiSelectConfig', function(uiSelectConfig) {\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-match');\n\n      var parent = tElement.parent();\n      // Gets theme attribute from parent (ui-select)\n      var theme = getAttribute(parent, 'theme') || uiSelectConfig.theme;\n      var multi = angular.isDefined(getAttribute(parent, 'multiple'));\n\n      return theme + (multi ? '/match-multiple.tpl.html' : '/match.tpl.html');\n    },\n    link: function(scope, element, attrs, $select) {\n      $select.lockChoiceExpression = attrs.uiLockChoice;\n      attrs.$observe('placeholder', function(placeholder) {\n        $select.placeholder = placeholder !== undefined ? placeholder : uiSelectConfig.placeholder;\n      });\n\n      if($select.multiple){\n        $select.sizeSearchInput();\n      }\n    }\n  };\n\n  function getAttribute(elem, attribute) {\n    if (elem[0].hasAttribute(attribute))\n      return elem.attr(attribute);\n\n    if (elem[0].hasAttribute('data-' + attribute))\n      return elem.attr('data-' + attribute);\n\n    if (elem[0].hasAttribute('x-' + attribute))\n      return elem.attr('x-' + attribute);\n  }\n}]);\n\nuis.directive('uiSelectMultiple', ['uiSelectMinErr','$timeout', function(uiSelectMinErr, $timeout) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n\n    controller: ['$scope','$timeout', function($scope, $timeout){\n\n      var ctrl = this,\n          $select = $scope.$select,\n          ngModel;\n\n      if (angular.isUndefined($select.selected))\n        $select.selected = [];\n\n      //Wait for link fn to inject it\n      $scope.$evalAsync(function(){ ngModel = $scope.ngModel; });\n\n      ctrl.activeMatchIndex = -1;\n\n      ctrl.updateModel = function(){\n        ngModel.$setViewValue(Date.now()); //Set timestamp as a unique string to force changes\n        ctrl.refreshComponent();\n      };\n\n      ctrl.refreshComponent = function(){\n        //Remove already selected items\n        //e.g. When user clicks on a selection, the selected array changes and\n        //the dropdown should remove that item\n        $select.refreshItems();\n        $select.sizeSearchInput();\n      };\n\n      // Remove item from multiple select\n      ctrl.removeChoice = function(index){\n\n        // if the choice is locked, don't remove it\n        if($select.isLocked(null, index)) return false;\n\n        var removedChoice = $select.selected[index];\n\n        var locals = {};\n        locals[$select.parserResult.itemName] = removedChoice;\n\n        $select.selected.splice(index, 1);\n        ctrl.activeMatchIndex = -1;\n        $select.sizeSearchInput();\n\n        // Give some time for scope propagation.\n        $timeout(function(){\n          $select.onRemoveCallback($scope, {\n            $item: removedChoice,\n            $model: $select.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        ctrl.updateModel();\n\n        return true;\n      };\n\n\n    }],\n    controllerAs: '$selectMultiple',\n\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = scope.ngModel = ctrls[1];\n      var $selectMultiple = scope.$selectMultiple;\n\n      //$select.selected = raw selected objects (ignoring any property binding)\n\n      $select.multiple = true;\n\n      //Input that will handle focus\n      $select.focusInput = $select.searchInput;\n\n      //Properly check for empty if set to multiple\n      ngModel.$isEmpty = function(value) {\n        return !value || value.length === 0;\n      };\n\n      //From view --> model\n      ngModel.$parsers.unshift(function () {\n        var locals = {},\n            result,\n            resultMultiple = [];\n        for (var j = $select.selected.length - 1; j >= 0; j--) {\n          locals = {};\n          locals[$select.parserResult.itemName] = $select.selected[j];\n          result = $select.parserResult.modelMapper(scope, locals);\n          resultMultiple.unshift(result);\n        }\n        return resultMultiple;\n      });\n\n      // From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (!data) return inputValue;\n        var resultMultiple = [];\n        var checkFnMultiple = function(list, value){\n          if (!list || !list.length) return;\n          for (var p = list.length - 1; p >= 0; p--) {\n            locals[$select.parserResult.itemName] = list[p];\n            result = $select.parserResult.modelMapper(scope, locals);\n            if($select.parserResult.trackByExp){\n                var propsItemNameMatches = /(\\w*)\\./.exec($select.parserResult.trackByExp);\n                var matches = /\\.([^\\s]+)/.exec($select.parserResult.trackByExp);\n                if(propsItemNameMatches && propsItemNameMatches.length > 0 && propsItemNameMatches[1] == $select.parserResult.itemName){\n                  if(matches && matches.length>0 && result[matches[1]] == value[matches[1]]){\n                      resultMultiple.unshift(list[p]);\n                      return true;\n                  }\n                }\n            }\n            if (angular.equals(result,value)){\n              resultMultiple.unshift(list[p]);\n              return true;\n            }\n          }\n          return false;\n        };\n        if (!inputValue) return resultMultiple; //If ngModel was undefined\n        for (var k = inputValue.length - 1; k >= 0; k--) {\n          //Check model array of currently selected items\n          if (!checkFnMultiple($select.selected, inputValue[k])){\n            //Check model array of all items available\n            if (!checkFnMultiple(data, inputValue[k])){\n              //If not found on previous lists, just add it directly to resultMultiple\n              resultMultiple.unshift(inputValue[k]);\n            }\n          }\n        }\n        return resultMultiple;\n      });\n\n      //Watch for external model changes\n      scope.$watchCollection(function(){ return ngModel.$modelValue; }, function(newValue, oldValue) {\n        if (oldValue != newValue){\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ngModel.$modelValue)) {\n            ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n          $selectMultiple.refreshComponent();\n        }\n      });\n\n      ngModel.$render = function() {\n        // Make sure that model value is array\n        if(!angular.isArray(ngModel.$viewValue)){\n          // Have tolerance for null or undefined values\n          if (isNil(ngModel.$viewValue)){\n            ngModel.$viewValue = [];\n          } else {\n            throw uiSelectMinErr('multiarr', \"Expected model value to be array but got '{0}'\", ngModel.$viewValue);\n          }\n        }\n        $select.selected = ngModel.$viewValue;\n        $selectMultiple.refreshComponent();\n        scope.$evalAsync(); //To force $digest\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        if($select.selected.length >= $select.limit) {\n          return;\n        }\n        $select.selected.push(item);\n        var locals = {};\n        locals[$select.parserResult.itemName] = item;\n\n        $timeout(function(){\n          $select.onSelectCallback(scope, {\n            $item: item,\n            $model: $select.parserResult.modelMapper(scope, locals)\n          });\n        });\n        $selectMultiple.updateModel();\n      });\n\n      scope.$on('uis:activate', function () {\n        $selectMultiple.activeMatchIndex = -1;\n      });\n\n      scope.$watch('$select.disabled', function(newValue, oldValue) {\n        // As the search input field may now become visible, it may be necessary to recompute its size\n        if (oldValue && !newValue) $select.sizeSearchInput();\n      });\n\n      $select.searchInput.on('keydown', function(e) {\n        var key = e.which;\n        scope.$apply(function() {\n          var processed = false;\n          // var tagged = false; //Checkme\n          if(KEY.isHorizontalMovement(key)){\n            processed = _handleMatchSelection(key);\n          }\n          if (processed  && key != KEY.TAB) {\n            //TODO Check si el tab selecciona aun correctamente\n            //Crear test\n            $select.cancelEvent(e);\n          }\n        });\n      });\n      function _getCaretPosition(el) {\n        if(angular.isNumber(el.selectionStart)) return el.selectionStart;\n        // selectionStart is not supported in IE8 and we don't want hacky workarounds so we compromise\n        else return el.value.length;\n      }\n      // Handles selected options in \"multiple\" mode\n      function _handleMatchSelection(key){\n        var caretPosition = _getCaretPosition($select.searchInput[0]),\n            length = $select.selected.length,\n            // none  = -1,\n            first = 0,\n            last  = length-1,\n            curr  = $selectMultiple.activeMatchIndex,\n            next  = $selectMultiple.activeMatchIndex+1,\n            prev  = $selectMultiple.activeMatchIndex-1,\n            newIndex = curr;\n\n        if(caretPosition > 0 || ($select.search.length && key == KEY.RIGHT)) return false;\n\n        $select.close();\n\n        function getNewActiveMatchIndex(){\n          switch(key){\n            case KEY.LEFT:\n              // Select previous/first item\n              if(~$selectMultiple.activeMatchIndex) return prev;\n              // Select last item\n              else return last;\n              break;\n            case KEY.RIGHT:\n              // Open drop-down\n              if(!~$selectMultiple.activeMatchIndex || curr === last){\n                $select.activate();\n                return false;\n              }\n              // Select next/last item\n              else return next;\n              break;\n            case KEY.BACKSPACE:\n              // Remove selected item and select previous/first\n              if(~$selectMultiple.activeMatchIndex){\n                if($selectMultiple.removeChoice(curr)) {\n                  return prev;\n                } else {\n                  return curr;\n                }\n\n              } else {\n                // If nothing yet selected, select last item\n                return last;\n              }\n              break;\n            case KEY.DELETE:\n              // Remove selected item and select next item\n              if(~$selectMultiple.activeMatchIndex){\n                $selectMultiple.removeChoice($selectMultiple.activeMatchIndex);\n                return curr;\n              }\n              else return false;\n          }\n        }\n\n        newIndex = getNewActiveMatchIndex();\n\n        if(!$select.selected.length || newIndex === false) $selectMultiple.activeMatchIndex = -1;\n        else $selectMultiple.activeMatchIndex = Math.min(last,Math.max(first,newIndex));\n\n        return true;\n      }\n\n      $select.searchInput.on('keyup', function(e) {\n\n        if ( ! KEY.isVerticalMovement(e.which) ) {\n          scope.$evalAsync( function () {\n            $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          });\n        }\n        // Push a \"create new\" item into array if there is a search string\n        if ( $select.tagging.isActivated && $select.search.length > 0 ) {\n\n          // return early with these keys\n          if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || KEY.isVerticalMovement(e.which) ) {\n            return;\n          }\n          // always reset the activeIndex to the first item when tagging\n          $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          // taggingLabel === false bypasses all of this\n          if ($select.taggingLabel === false) return;\n\n          var items = angular.copy( $select.items );\n          var stashArr = angular.copy( $select.items );\n          var newItem;\n          var item;\n          var hasTag = false;\n          var dupeIndex = -1;\n          var tagItems;\n          var tagItem;\n\n          // case for object tagging via transform `$select.tagging.fct` function\n          if ( $select.tagging.fct !== undefined) {\n            tagItems = $select.$filter('filter')(items,{'isTag': true});\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            // remove the first element, if it has the `isTag` prop we generate a new one with each keyup, shaving the previous\n            if ( items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.tagging.fct($select.search);\n            // verify the new tag doesn't match the value of a possible selection choice or an already selected item.\n            if (\n              stashArr.some(function (origItem) {\n                 return angular.equals(origItem, newItem);\n              }) ||\n              $select.selected.some(function (origItem) {\n                return angular.equals(origItem, newItem);\n              })\n            ) {\n              scope.$evalAsync(function () {\n                $select.activeIndex = 0;\n                $select.items = items;\n              });\n              return;\n            }\n            if (newItem) newItem.isTag = true;\n          // handle newItem string and stripping dupes in tagging string context\n          } else {\n            // find any tagging items already in the $select.items array and store them\n            tagItems = $select.$filter('filter')(items,function (item) {\n              return item.match($select.taggingLabel);\n            });\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            item = items[0];\n            // remove existing tag item if found (should only ever be one tag item)\n            if ( item !== undefined && items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.search+' '+$select.taggingLabel;\n            if ( _findApproxDupe($select.selected, $select.search) > -1 ) {\n              return;\n            }\n            // verify the the tag doesn't match the value of an existing item from\n            // the searched data set or the items already selected\n            if ( _findCaseInsensitiveDupe(stashArr.concat($select.selected)) ) {\n              // if there is a tag from prev iteration, strip it / queue the change\n              // and return early\n              if ( hasTag ) {\n                items = stashArr;\n                scope.$evalAsync( function () {\n                  $select.activeIndex = 0;\n                  $select.items = items;\n                });\n              }\n              return;\n            }\n            if ( _findCaseInsensitiveDupe(stashArr) ) {\n              // if there is a tag from prev iteration, strip it\n              if ( hasTag ) {\n                $select.items = stashArr.slice(1,stashArr.length);\n              }\n              return;\n            }\n          }\n          if ( hasTag ) dupeIndex = _findApproxDupe($select.selected, newItem);\n          // dupe found, shave the first item\n          if ( dupeIndex > -1 ) {\n            items = items.slice(dupeIndex+1,items.length-1);\n          } else {\n            items = [];\n            if (newItem) items.push(newItem);\n            items = items.concat(stashArr);\n          }\n          scope.$evalAsync( function () {\n            $select.activeIndex = 0;\n            $select.items = items;\n\n            if ($select.isGrouped) {\n              // update item references in groups, so that indexOf will work after angular.copy\n              var itemsWithoutTag = newItem ? items.slice(1) : items;\n              $select.setItemsFn(itemsWithoutTag);\n              if (newItem) {\n                // add tag item as a new group\n                $select.items.unshift(newItem);\n                $select.groups.unshift({name: '', items: [newItem], tagging: true});\n              }\n            }\n          });\n        }\n      });\n      function _findCaseInsensitiveDupe(arr) {\n        if ( arr === undefined || $select.search === undefined ) {\n          return false;\n        }\n        var hasDupe = arr.filter( function (origItem) {\n          if ( $select.search.toUpperCase() === undefined || origItem === undefined ) {\n            return false;\n          }\n          return origItem.toUpperCase() === $select.search.toUpperCase();\n        }).length > 0;\n\n        return hasDupe;\n      }\n      function _findApproxDupe(haystack, needle) {\n        var dupeIndex = -1;\n        if(angular.isArray(haystack)) {\n          var tempArr = angular.copy(haystack);\n          for (var i = 0; i <tempArr.length; i++) {\n            // handle the simple string version of tagging\n            if ( $select.tagging.fct === undefined ) {\n              // search the array for the match\n              if ( tempArr[i]+' '+$select.taggingLabel === needle ) {\n              dupeIndex = i;\n              }\n            // handle the object tagging implementation\n            } else {\n              var mockObj = tempArr[i];\n              if (angular.isObject(mockObj)) {\n                mockObj.isTag = true;\n              }\n              if ( angular.equals(mockObj, needle) ) {\n                dupeIndex = i;\n              }\n            }\n          }\n        }\n        return dupeIndex;\n      }\n\n      $select.searchInput.on('blur', function() {\n        $timeout(function() {\n          $selectMultiple.activeMatchIndex = -1;\n        });\n      });\n\n    }\n  };\n}]);\n\nuis.directive('uiSelectNoChoice',\n    ['uiSelectConfig', function (uiSelectConfig) {\n        return {\n            restrict: 'EA',\n            require: '^uiSelect',\n            replace: true,\n            transclude: true,\n            templateUrl: function (tElement) {\n                // Needed so the uiSelect can detect the transcluded content\n                tElement.addClass('ui-select-no-choice');\n      \n                // Gets theme attribute from parent (ui-select)\n                var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n                return theme + '/no-choice.tpl.html';\n            }\n        };\n    }]);\n\nuis.directive('uiSelectSingle', ['$timeout','$compile', function($timeout, $compile) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = ctrls[1];\n\n      //From view --> model\n      ngModel.$parsers.unshift(function (inputValue) {\n        // Keep original value for undefined and null\n        if (isNil(inputValue)) {\n          return inputValue;\n        }\n\n        // Allow the null value to be considered a valid model value\n        if (inputValue.$$null) {\n          return inputValue[$select.itemProperty];\n        }\n\n        var locals = {};\n        locals[$select.parserResult.itemName] = inputValue;\n        return $select.parserResult.modelMapper(scope, locals);\n      });\n\n      //From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        // Keep original value for undefined and null\n        if (isNil(inputValue)) {\n          return inputValue;\n        }\n\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (data){\n          var checkFnSingle = function(d){\n            locals[$select.parserResult.itemName] = d;\n            result = $select.parserResult.modelMapper(scope, locals);\n            return result === inputValue;\n          };\n          //If possible pass same object stored in $select.selected\n          if ($select.selected && checkFnSingle($select.selected)) {\n            return $select.selected;\n          }\n          for (var i = data.length - 1; i >= 0; i--) {\n            if (checkFnSingle(data[i])) return data[i];\n          }\n        }\n        return inputValue;\n      });\n\n      //Update viewValue if model change\n      scope.$watch('$select.selected', function(newValue) {\n        if (ngModel.$viewValue !== newValue) {\n          ngModel.$setViewValue(newValue);\n        }\n      });\n\n      ngModel.$render = function() {\n        $select.selected = ngModel.$viewValue;\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        $select.selected = item;\n        var locals = {};\n        locals[$select.parserResult.itemName] = item;\n\n        $timeout(function() {\n          $select.onSelectCallback(scope, {\n            $item: item,\n            $model: isNil(item) ? item : $select.parserResult.modelMapper(scope, locals)\n          });\n        });\n      });\n\n      scope.$on('uis:close', function (event, skipFocusser) {\n        $timeout(function(){\n          if (!skipFocusser) $select.focusser[0].focus();\n        },0,false);\n      });\n\n      //Idea from: https://github.com/ivaynberg/select2/blob/79b5bf6db918d7560bdd959109b7bcfb47edaf43/select2.js#L1954\n      var focusser = angular.element(\"<input ng-disabled='$select.disabled' class='ui-select-focusser ui-select-offscreen' type='text' id='{{ $select.focusserId }}' aria-label='{{ $select.focusserTitle }}' aria-haspopup='true' role='button' />\");\n      $compile(focusser)(scope);\n      $select.focusser = focusser;\n       //Input that will handle focus\n      $select.focusInput = focusser;\n\n      // Move focuser out of <ui-select> because append-to-body=\"true\" will move the focusser out of :tabbable order.\n      element.parent().parent().prepend(focusser);\n\n      scope.$on('$destroy', function() {\n        if ($select.focusser) {\n          $select.focusser.remove();\n        }\n      });\n\n      focusser.on(\"focus\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = true;\n        });\n      });\n\n      focusser.on(\"blur\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = false;\n        });\n      });\n\n      focusser.on(\"keydown\", function(e){\n        if (e.which === KEY.BACKSPACE && $select.backspaceReset !== false) {\n          $select.select($select.nullValue);\n          $select.cancelEvent(e);\n          scope.$apply();\n          return;\n        }\n\n        if (e.which === KEY.TAB) {\n          $select.tabNavigate(e.shiftKey);\n          $select.cancelEvent(e);\n          return;\n        }\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\n          return;\n        }\n\n        if (e.which == KEY.DOWN  || e.which == KEY.UP || e.which == KEY.ENTER || e.which == KEY.SPACE){\n          $select.cancelEvent(e);\n          $select.activate();\n        }\n\n        scope.$digest();\n      });\n\n      focusser.on(\"keyup input\", function(e){\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || e.which == KEY.ENTER || e.which === KEY.BACKSPACE) {\n          return;\n        }\n\n        $select.activate(focusser.val()); //User pressed some regular key, so we pass it to the search input\n        focusser.val('');\n        scope.$digest();\n      });\n    }\n  };\n}]);\n\n// Make multiple matches sortable\nuis.directive('uiSelectSort', ['$timeout', 'uiSelectConfig', 'uiSelectMinErr', function($timeout, uiSelectConfig, uiSelectMinErr) {\n  return {\n    require: ['^^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n      if (scope[attrs.uiSelectSort] === null) {\n        throw uiSelectMinErr('sort', 'Expected a list to sort');\n      }\n\n      var $select = ctrls[0];\n      var $ngModel = ctrls[1];\n\n      var options = angular.extend({\n          axis: 'horizontal'\n        },\n        scope.$eval(attrs.uiSelectSortOptions));\n\n      var axis = options.axis;\n      var draggingClassName = 'dragging';\n      var droppingClassName = 'dropping';\n      var droppingBeforeClassName = 'dropping-before';\n      var droppingAfterClassName = 'dropping-after';\n\n      scope.$watch(function(){\n        return $select.sortable;\n      }, function(newValue){\n        if (newValue) {\n          element.attr('draggable', true);\n        } else {\n          element.removeAttr('draggable');\n        }\n      });\n\n      if (element.data('disallowDrop')) {\n        return;\n      }\n\n      element.on('dragstart', function(event) {\n        element.addClass(draggingClassName);\n\n        (event.dataTransfer || event.originalEvent.dataTransfer).setData('text', scope.$index.toString());\n      });\n\n      element.on('dragend', function() {\n        removeClass(draggingClassName);\n      });\n\n      var move = function(from, to) {\n        /*jshint validthis: true */\n        this.splice(to, 0, this.splice(from, 1)[0]);\n      };\n\n      var removeClass = function(className) {\n        angular.forEach($select.$element.querySelectorAll('.' + className), function(el){\n          angular.element(el).removeClass(className);\n        });\n      };\n\n      var dragOverHandler = function(event) {\n        event.preventDefault();\n\n        var offset = axis === 'vertical' ? event.offsetY || event.layerY || (event.originalEvent ? event.originalEvent.offsetY : 0) : event.offsetX || event.layerX || (event.originalEvent ? event.originalEvent.offsetX : 0);\n\n        if (offset < (this[axis === 'vertical' ? 'offsetHeight' : 'offsetWidth'] / 2)) {\n          removeClass(droppingAfterClassName);\n          element.addClass(droppingBeforeClassName);\n\n        } else {\n          removeClass(droppingBeforeClassName);\n          element.addClass(droppingAfterClassName);\n        }\n      };\n\n      var dropTimeout;\n\n      var dropHandler = function(event) {\n        event.preventDefault();\n\n        var droppedItemIndex = parseInt((event.dataTransfer || event.originalEvent.dataTransfer).getData('text'), 10);\n\n        // prevent event firing multiple times in firefox\n        $timeout.cancel(dropTimeout);\n        dropTimeout = $timeout(function() {\n          _dropHandler(droppedItemIndex);\n        }, 20);\n      };\n\n      var _dropHandler = function(droppedItemIndex) {\n        var theList = scope.$eval(attrs.uiSelectSort);\n        var itemToMove = theList[droppedItemIndex];\n        var newIndex = null;\n\n        if (element.hasClass(droppingBeforeClassName)) {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index - 1;\n          } else {\n            newIndex = scope.$index;\n          }\n        } else {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index;\n          } else {\n            newIndex = scope.$index + 1;\n          }\n        }\n\n        move.apply(theList, [droppedItemIndex, newIndex]);\n\n        $ngModel.$setViewValue(Date.now());\n\n        scope.$apply(function() {\n          scope.$emit('uiSelectSort:change', {\n            array: theList,\n            item: itemToMove,\n            from: droppedItemIndex,\n            to: newIndex\n          });\n        });\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('drop', dropHandler);\n      };\n\n      element.on('dragenter', function() {\n        if (element.hasClass(draggingClassName)) {\n          return;\n        }\n\n        element.addClass(droppingClassName);\n\n        element.on('dragover', dragOverHandler);\n        element.on('drop', dropHandler);\n      });\n\n      element.on('dragleave', function(event) {\n        if (event.target != element) {\n          return;\n        }\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('dragover', dragOverHandler);\n        element.off('drop', dropHandler);\n      });\n    }\n  };\n}]);\n\n/**\n * Debounces functions\n *\n * Taken from UI Bootstrap $$debounce source code\n * See https://github.com/angular-ui/bootstrap/blob/master/src/debounce/debounce.js\n *\n */\nuis.factory('$$uisDebounce', ['$timeout', function($timeout) {\n  return function(callback, debounceTime) {\n    var timeoutPromise;\n\n    return function() {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments);\n      if (timeoutPromise) {\n        $timeout.cancel(timeoutPromise);\n      }\n\n      timeoutPromise = $timeout(function() {\n        callback.apply(self, args);\n      }, debounceTime);\n    };\n  };\n}]);\n\nuis.directive('uisOpenClose', ['$parse', '$timeout', function ($parse, $timeout) {\n  return {\n    restrict: 'A',\n    require: 'uiSelect',\n    link: function (scope, element, attrs, $select) {\n      $select.onOpenCloseCallback = $parse(attrs.uisOpenClose);\n\n      scope.$watch('$select.open', function (isOpen, previousState) {\n        if (isOpen !== previousState) {\n          $timeout(function () {\n            $select.onOpenCloseCallback(scope, {\n              isOpen: isOpen\n            });\n          });\n        }\n      });\n    }\n  };\n}]);\n\n/**\n * Parses \"repeat\" attribute.\n *\n * Taken from AngularJS ngRepeat source code\n * See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L211\n *\n * Original discussion about parsing \"repeat\" attribute instead of fully relying on ng-repeat:\n * https://github.com/angular-ui/ui-select/commit/5dd63ad#commitcomment-5504697\n */\n\nuis.service('uisRepeatParser', ['uiSelectMinErr', '$parse', function(uiSelectMinErr, $parse) {\n  var self = this;\n\n  /**\n   * Example:\n   * expression = \"address in addresses | filter: {street: $select.search} track by $index\"\n   * itemName = \"address\",\n   * source = \"addresses | filter: {street: $select.search}\",\n   * trackByExp = \"$index\",\n   */\n  self.parse = function(expression) {\n\n\n    var match;\n    //var isObjectCollection = /\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)/.test(expression);\n    // If an array is used as collection\n\n    // if (isObjectCollection){\n    // 000000000000000000000000000000111111111000000000000000222222222222220033333333333333333333330000444444444444444444000000000000000055555555555000000000000000000000066666666600000000\n    match = expression.match(/^\\s*(?:([\\s\\S]+?)\\s+as\\s+)?(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(\\s*[\\s\\S]+?)?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n    // 1 Alias\n    // 2 Item\n    // 3 Key on (key,value)\n    // 4 Value on (key,value)\n    // 5 Source expression (including filters)\n    // 6 Track by\n\n    if (!match) {\n      throw uiSelectMinErr('iexp', \"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\",\n              expression);\n    }\n\n    var source = match[5],\n        filters = '';\n\n    // When using (key,value) ui-select requires filters to be extracted, since the object\n    // is converted to an array for $select.items\n    // (in which case the filters need to be reapplied)\n    if (match[3]) {\n      // Remove any enclosing parenthesis\n      source = match[5].replace(/(^\\()|(\\)$)/g, '');\n      // match all after | but not after ||\n      var filterMatch = match[5].match(/^\\s*(?:[\\s\\S]+?)(?:[^\\|]|\\|\\|)+([\\s\\S]*)\\s*$/);\n      if(filterMatch && filterMatch[1].trim()) {\n        filters = filterMatch[1];\n        source = source.replace(filters, '');\n      }\n    }\n\n    return {\n      itemName: match[4] || match[2], // (lhs) Left-hand side,\n      keyName: match[3], //for (key, value) syntax\n      source: $parse(source),\n      filters: filters,\n      trackByExp: match[6],\n      getTrackedValue: function(scope, item) {\n        if (!this.trackByExp) {\n          return item;\n        } else {\n          var locals = {};\n          locals[this.itemName] = item;\n          return scope.$eval(this.trackByExp, locals);\n        }\n      },\n      modelMapper: $parse(match[1] || match[4] || match[2]),\n      repeatExpression: function (grouped) {\n        var expression = this.itemName + ' in ' + (grouped ? '$group.items' : '$select.items');\n        if (this.trackByExp) {\n          expression += ' track by ' + this.trackByExp;\n        }\n        return expression;\n      }\n    };\n\n  };\n\n  self.getGroupNgRepeatExpression = function() {\n    return '$group in $select.groups track by $group.name';\n  };\n\n}]);\n\n}());\nangular.module(\"ui.select\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"select2/choices.tpl.html\",\"<ul tabindex=\\\"-1\\\" class=\\\"ui-select-choices ui-select-choices-content select2-results\\\"><li class=\\\"ui-select-choices-group\\\" ng-class=\\\"{\\'select2-result-with-children\\': $select.choiceGrouped($group)}\\\"><div ng-show=\\\"$select.choiceGrouped($group)\\\" class=\\\"ui-select-choices-group-label select2-result-label\\\" ng-bind=\\\"$group.name\\\"></div><ul id=\\\"ui-select-choices-{{ $select.generatedId }}\\\" ng-class=\\\"{\\'select2-result-sub\\': $select.choiceGrouped($group), \\'select2-result-single\\': !$select.choiceGrouped($group)}\\\"><li role=\\\"option\\\" ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{\\'select2-highlighted\\': $select.isActive(this), \\'select2-disabled\\': $select.isDisabled(this)}\\\" ng-switch=\\\"this[$select.itemProperty].$$null\\\"><div ng-switch-default=\\\"\\\" class=\\\"select2-result-label ui-select-choices-row-inner\\\"></div><div ng-switch-when=\\\"true\\\" class=\\\"select2-result-label ui-select-choices-row-null\\\" ng-bind=\\\"$select.nullLabel\\\"></div></li></ul></li></ul>\");\n$templateCache.put(\"select2/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"select2/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"select2/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><li class=\\\"ui-select-match-item select2-search-choice\\\" ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-class=\\\"{\\'select2-search-choice-focus\\':$selectMultiple.activeMatchIndex === $index, \\'select2-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span uis-transclude-append=\\\"\\\"></span> <a href=\\\"javascript:;\\\" class=\\\"ui-select-match-close select2-search-choice-close\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\" tabindex=\\\"-1\\\"></a></li></span>\");\n$templateCache.put(\"select2/match.tpl.html\",\"<a class=\\\"select2-choice ui-select-match\\\" ng-class=\\\"{\\'select2-default\\': $select.isEmpty()}\\\" ng-click=\\\"$select.toggle($event)\\\" aria-label=\\\"{{ $select.baseTitle }} select\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\" ng-bind=\\\"$select.placeholder\\\"></span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\" ng-transclude=\\\"\\\"></span> <span class=\\\"select2-arrow ui-select-toggle\\\"><b></b></span></a>\");\n$templateCache.put(\"select2/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"><div class=\\\"dropdown-content\\\"><div data-selectable=\\\"\\\" ng-transclude=\\\"\\\"></div></div></div>\");\n$templateCache.put(\"select2/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple select2 select2-container select2-container-multi\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled}\\\"><ul class=\\\"select2-choices\\\"><span class=\\\"ui-select-match\\\"></span><li class=\\\"select2-search-field\\\"><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"select2-input ui-select-search\\\" ng-model=\\\"$select.search\\\" ng-click=\\\"$select.activate()\\\" placeholder=\\\"{{$select.getSelectedText() || $select.getPlaceholder()}}\\\" style=\\\"width: 34px;\\\" data-disallow-drop=\\\"data-disallow-drop\\\"></li></ul><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open || $select.items.length === 0}\\\"><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-footer\\\"></div></div></div>\");\n$templateCache.put(\"select2/select.tpl.html\",\"<div class=\\\"ui-select-container select2 select2-container\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled, \\'select2-container-active\\': $select.focus, \\'select2-allowclear\\': !$select.required && !$select.isEmpty()}\\\"><div class=\\\"ui-select-match\\\"></div><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open}\\\"><div class=\\\"search-container\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled, \\'select2-search\\':$select.searchEnabled}\\\"><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" ng-class=\\\"{\\'select2-active\\': $select.refreshing}\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" placeholder=\\\"{{$select.getSelectedText() || $select.placeholder}}\\\" class=\\\"ui-select-search select2-input\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" ng-model=\\\"$select.search\\\"></div><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div><div class=\\\"ui-select-footer\\\"></div></div></div>\");\n$templateCache.put(\"bootstrap/choices.tpl.html\",\"<ul class=\\\"ui-select-choices ui-select-choices-content\\\"><li class=\\\"ui-select-choices-group\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\"><div class=\\\"divider\\\" ng-show=\\\"$select.isGrouped && $index > 0\\\"></div><div ng-show=\\\"$select.isGrouped && $group.name\\\" class=\\\"ui-select-choices-group-label dropdown-header\\\" ng-bind=\\\"$group.name\\\"></div><div ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\" role=\\\"option\\\" ng-switch=\\\"this[$select.itemProperty].$$null\\\"><span ng-switch-when=\\\"true\\\" class=\\\"ui-select-choices-row-null\\\" ng-bind=\\\"$select.nullLabel\\\"></span> <span ng-switch-default=\\\"\\\" class=\\\"ui-select-choices-row-inner\\\"></span></div></li></ul>\");\n$templateCache.put(\"bootstrap/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"bootstrap/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"bootstrap/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><span ng-repeat=\\\"$item in $select.selected track by $index\\\"><span class=\\\"ui-select-match-item btn btn-default btn-xs\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ui-select-sort=\\\"$select.selected\\\" ng-class=\\\"{\\'btn-primary\\':$selectMultiple.activeMatchIndex === $index, \\'select-locked\\':$select.isLocked(this, $index)}\\\"><span class=\\\"close ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&nbsp;&times;</span> <span uis-transclude-append=\\\"\\\"></span></span></span></span>\");\n$templateCache.put(\"bootstrap/match.tpl.html\",\"<div class=\\\"ui-select-match\\\" ng-hide=\\\"$select.open && $select.searchEnabled\\\" ng-disabled=\\\"$select.disabled\\\" ng-class=\\\"{\\'btn-default-focus\\':$select.focus}\\\"><span tabindex=\\\"-1\\\" class=\\\"btn btn-default form-control ui-select-toggle\\\" aria-label=\\\"{{ $select.baseTitle }} activate\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" style=\\\"outline: 0;\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"ui-select-placeholder text-muted\\\" ng-bind=\\\"$select.placeholder\\\"></span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"ui-select-match-text pull-left\\\" ng-transclude=\\\"\\\" ng-class=\\\"{\\'ui-select-required\\': !$select.required && !$select.isEmpty()}\\\"></span> <i class=\\\"caret pull-right\\\" ng-click=\\\"$select.toggle($event)\\\"></i></span></div>\");\n$templateCache.put(\"bootstrap/no-choice.tpl.html\",\"<ul class=\\\"ui-select-no-choice dropdown-menu\\\" ng-show=\\\"$select.items.length\\\"><li ng-transclude=\\\"\\\"></li></ul>\");\n$templateCache.put(\"bootstrap/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple ui-select-bootstrap dropdown form-control\\\" ng-class=\\\"{open: $select.open}\\\"><div><div class=\\\"ui-select-match\\\"></div><span ng-show=\\\"$select.open && $select.refreshing && $select.spinnerEnabled\\\" class=\\\"ui-select-refreshing {{$select.spinnerClass}}\\\"></span> <input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" class=\\\"ui-select-search input-xs\\\" placeholder=\\\"{{$select.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" ng-model=\\\"$select.search\\\" role=\\\"combobox\\\" aria-expanded=\\\"{{$select.open}}\\\" aria-label=\\\"{{$select.baseTitle}}\\\" ng-class=\\\"{\\'spinner\\': $select.refreshing}\\\" data-disallow-drop=\\\"data-disallow-drop\\\"></div><div ng-show=\\\"$select.open && $select.items.length > 0\\\" class=\\\"ui-select-dropdown dropdown-menu\\\"><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-footer\\\"></div></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"bootstrap/select.tpl.html\",\"<div class=\\\"ui-select-container ui-select-bootstrap dropdown\\\" ng-class=\\\"{open: $select.open}\\\"><div class=\\\"ui-select-match\\\"></div><span ng-show=\\\"$select.open && $select.refreshing && $select.spinnerEnabled\\\" class=\\\"ui-select-refreshing {{$select.spinnerClass}}\\\"></span> <input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" aria-expanded=\\\"true\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" class=\\\"form-control ui-select-search\\\" ng-class=\\\"{\\'ui-select-search-hidden\\' : !$select.searchEnabled}\\\" ng-model=\\\"$select.search\\\" placeholder=\\\"{{$select.getSelectedText() || $select.placeholder}}\\\" ng-show=\\\"$select.open\\\"><div ng-show=\\\"$select.open && $select.items.length > 0\\\" class=\\\"ui-select-dropdown dropdown-menu\\\"><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-footer\\\"></div></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"selectize/choices.tpl.html\",\"<div class=\\\"ui-select-choices\\\"><div class=\\\"ui-select-choices-content selectize-dropdown-content\\\"><div class=\\\"ui-select-choices-group optgroup\\\"><div ng-show=\\\"$select.isGrouped && $group.name\\\" class=\\\"ui-select-choices-group-label optgroup-header\\\" ng-bind=\\\"$group.name\\\"></div><div role=\\\"option\\\" class=\\\"ui-select-choices-row\\\" ng-switch=\\\"this[$select.itemProperty].$$null\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\"><div ng-switch-default=\\\"\\\" class=\\\"option ui-select-choices-row-inner\\\" data-selectable=\\\"\\\"></div><div ng-switch-when=\\\"true\\\" class=\\\"option ui-select-choices-row-null\\\" data-selectable=\\\"\\\" ng-bind=\\\"$select.nullLabel\\\"></div></div></div></div></div>\");\n$templateCache.put(\"selectize/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"selectize/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"selectize/match-multiple.tpl.html\",\"<div class=\\\"ui-select-match\\\" data-value=\\\"\\\" ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ui-select-sort=\\\"$select.selected\\\" ng-class=\\\"{\\'active\\':$selectMultiple.activeMatchIndex === $index}\\\"><span class=\\\"ui-select-match-item\\\" ng-class=\\\"{\\'select-locked\\':$select.isLocked(this, $index)}\\\"><span uis-transclude-append=\\\"\\\"></span> <span class=\\\"remove ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&times;</span></span></div>\");\n$templateCache.put(\"selectize/match.tpl.html\",\"<div ng-hide=\\\"$select.searchEnabled && ($select.open || $select.isEmpty())\\\" class=\\\"ui-select-match\\\"><span ng-show=\\\"!$select.searchEnabled && ($select.isEmpty() || $select.open)\\\" class=\\\"ui-select-placeholder text-muted\\\" ng-bind=\\\"$select.placeholder\\\"></span> <span ng-hide=\\\"$select.isEmpty() || $select.open\\\" ng-transclude=\\\"\\\"></span></div>\");\n$templateCache.put(\"selectize/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice selectize-dropdown\\\" ng-show=\\\"!$select.items.length\\\"><div class=\\\"selectize-dropdown-content\\\"><div data-selectable=\\\"\\\" ng-transclude=\\\"\\\"></div></div></div>\");\n$templateCache.put(\"selectize/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container selectize-control multi plugin-remove_button\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"><div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" placeholder=\\\"{{$select.getSelectedText() || $select.getPlaceholder()}}\\\" ng-model=\\\"$select.search\\\" ng-disabled=\\\"$select.disabled\\\" aria-expanded=\\\"{{$select.open}}\\\" data-disallow-drop=\\\"data-disallow-drop\\\"></div><div ng-show=\\\"$select.open\\\" class=\\\"ui-select-dropdown selectize-dropdown\\\" ng-class=\\\"{\\'single\\': !$select.multiple, \\'multi\\': $select.multiple}\\\"><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-footer\\\"></div></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"selectize/select.tpl.html\",\"<div class=\\\"ui-select-container selectize-control single\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"><div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search ui-select-toggle\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled}\\\" ng-click=\\\"$select.toggle($event)\\\" placeholder=\\\"{{$select.getSelectedText() || $select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-hide=\\\"!$select.isEmpty() && !$select.open\\\" ng-disabled=\\\"$select.disabled\\\" aria-label=\\\"{{ $select.baseTitle }}\\\"></div><div ng-show=\\\"$select.open\\\" class=\\\"ui-select-dropdown selectize-dropdown\\\" ng-class=\\\"{\\'single\\': !$select.multiple, \\'multi\\': $select.multiple}\\\"><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-footer\\\"></div></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");}]);",null,null]}