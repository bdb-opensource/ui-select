{"version":3,"sources":["select.js","select_without_templates.js","templates.js"],"names":["isNil","value","angular","isUndefined","KEY","TAB","ENTER","ESC","SPACE","LEFT","UP","RIGHT","DOWN","SHIFT","CTRL","ALT","PAGE_UP","PAGE_DOWN","HOME","END","BACKSPACE","DELETE","COMMAND","MAP","91","8","9","13","16","17","18","19","20","27","32","33","34","35","36","37","38","39","40","43","44","45","46","48","49","50","51","52","53","54","55","56","57","59","61","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","96","97","98","99","100","101","102","103","104","105","106","107","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","144","145","186","187","188","189","190","191","192","219","220","221","222","isControl","e","k","which","metaKey","ctrlKey","isFunctionKey","isVerticalMovement","indexOf","isHorizontalMovement","toSeparator","sep","undefined","element","prototype","querySelectorAll","selector","this","closest","elem","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","bind","parentElement","latestId","uis","module","constant","theme","searchEnabled","sortable","placeholder","refreshDelay","closeOnSelect","skipFocusser","dropdownPosition","removeSelected","resetSearchInput","generateId","appendToBody","spinnerEnabled","spinnerClass","backspaceReset","nullLabel","nullValue","service","minErr","$$minErr","error","apply","arguments","message","replace","RegExp","Error","directive","link","scope","attrs","ctrl","transclude","clone","append","filter","escapeRegexp","queryToEscape","matchItem","query","factory","$document","$window","boundingClientRect","getBoundingClientRect","width","prop","height","top","pageYOffset","documentElement","scrollTop","left","pageXOffset","scrollLeft","uiSelectConfig","RepeatParser","uiSelectMinErr","$compile","restrict","require","templateUrl","tElement","addClass","parent","attr","compile","tAttrs","repeat","groupByExp","groupBy","groupFilterExp","groupFilter","groups","length","getGroupNgRepeatExpression","parserResult","parse","choices","repeatExpression","rowsInner","clickTarget","document","addEventListener","itemName","$select","parseRepeatAttr","disableChoiceExpression","uiDisableChoice","onHighlightCallback","onHighlight","minimumInputLength","parseInt","position","toLowerCase","$watch","newValue","open","multiple","activate","activeIndex","tagging","isActivated","search","refresh","items","$observe","$eval","removeAttr","controller","$scope","$element","$timeout","$filter","$$uisDebounce","$parse","_findIndex","collection","predicate","thisArg","findIndex","list","Object","i","call","_resetSearchInput","EMPTY_SEARCH","setActiveIndexToSelected","active","selected","$$null","trackBy","trackByExp","trackSkipFirst","getter","slice","obj","trackedValue","item","equals","_isItemDisabled","_groupsFilter","groupNames","j","result","name","push","_updateItemDisabled","isDisabled","disabledItemIndex","disabledItems","splice","_initaliseLockedChoices","doInitalise","_updateItemLocked","isLocked","lockedItemIndex","lockedItems","_isItemlocked","itemScope","itemIndex","lockChoiceExpression","_handleDropDownSelection","key","shiftKey","processed","idx","index","isEmpty","select","tabNavigate","close","_ensureHighlightVisible","container","highlighted","posY","offsetTop","clientHeight","offsetHeight","isGrouped","paste","refreshing","focus","disabled","focusser","fct","taggingTokens","tokens","clickTriggeredSelect","searchInput","getSelectedText","find","text","getPlaceholder","initSearchValue","avoidReset","$broadcast","taggingLabel","focusSearchInput","findGroupByName","noStrict","group","repeatAttr","updateGroups","groupFn","forEach","groupName","isFunction","groupFilterFn","isArray","reduce","concat","required","some","isNullItem","nullItem","createNullItem","unshift","setPlainItems","itemProperty","setItemsFn","originalSource","source","createArrayFromObject","origSrc","$uisSource","keys","map","v","keyName","filters","newVal","oldVal","refreshItems","data","selectedItems","filteredItems","every","selectedItem","calculateDropdownPos","$watchCollection","isDefined","ngModel","$modelValue","_refreshDelayPromise","refreshAttr","cancel","refreshPromise","then","isActive","_isItemSelected","selection","isTag","$event","type","trim","$setTouched","setFocus","focusInput","clear","stopPropagation","toggle","cancelEvent","sizeWatch","updaterScheduled","sizeSearchInput","input","calculateContainerWidth","clientWidth","offsetParent","updateIfVisible","containerWidth","inputWidth","offsetLeft","css","$$postDigest","noop","preventDefault","focusEl","focusable","el","on","$apply","tagged","keyCode","triggerHandler","newItem","window","clipboardData","getData","originalEvent","separator","split","oldsearch","onResize","$on","off","generatedId","uisOffset","controllerAs","match","exec","ngClass","combined","inputId","id","ctrls","transcludeFn","closeOnClick","contains","target","srcElement","jQuery","focusableControls","targetController","tagName","$digest","closeOnResize","closeOnScroll","calculateSelectLeftPosition","offset","body","edgeOffscreenAmount","paddingFromEdge","leftPosition","positionDropdown","style","after","originalWidth","removeGlobalHandlers","removeEventListener","resetDropdown","replaceWith","resetFocus","$fieldset","baseTitle","title","focusserTitle","focusserId","onSelectCallback","onSelect","onRemoveCallback","onRemove","choiceGrouped","tabindex","limit","taggingEval","ngRequired","oldRequired","autofocus","focusOn","transcluded","transcludedMatch","transcludedChoices","transcludedNoChoice","transcludedHeader","remove","transcludedFooter","isOpen","$evalAsync","dropdown","directionUpClassName","setDropdownPosUp","offsetDropdown","setDropdownPosDown","removeClass","setDropdownHorizontalPos","calculateDropdownPosAfterAnimation","classList","opened","add","isEnabled","getElements","console","enableClick","hasClass","disableClick","getAttribute","attribute","hasAttribute","multi","uiLockChoice","activeMatchIndex","updateModel","$setViewValue","Date","now","refreshComponent","removeChoice","removedChoice","locals","$item","$model","modelMapper","_getCaretPosition","isNumber","selectionStart","_handleMatchSelection","getNewActiveMatchIndex","$selectMultiple","prev","last","curr","next","caretPosition","first","newIndex","Math","min","max","_findCaseInsensitiveDupe","arr","hasDupe","origItem","toUpperCase","_findApproxDupe","haystack","needle","dupeIndex","tempArr","copy","mockObj","isObject","$isEmpty","$parsers","resultMultiple","$formatters","inputValue","checkFnMultiple","p","propsItemNameMatches","oldValue","$render","$viewValue","event","tagItems","tagItem","stashArr","hasTag","itemsWithoutTag","checkFnSingle","d","prepend","val","uiSelectSort","$ngModel","options","extend","axis","uiSelectSortOptions","draggingClassName","droppingClassName","droppingBeforeClassName","droppingAfterClassName","dataTransfer","setData","$index","toString","dropTimeout","move","from","to","className","dragOverHandler","offsetY","layerY","offsetX","layerX","dropHandler","droppedItemIndex","_dropHandler","theList","itemToMove","$emit","array","callback","debounceTime","timeoutPromise","self","args","Array","onOpenCloseCallback","uisOpenClose","previousState","expression","filterMatch","grouped","run","$templateCache","put"],"mappings":"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","file":"select.min.js","sourcesContent":["/*! ui-select@0.20.0 https://github.com/bdb-opensource/ui-select (MIT License)*/\n(function () { \n\"use strict\";\nvar KEY = {\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27,\n    SPACE: 32,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    SHIFT: 16,\n    CTRL: 17,\n    ALT: 18,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    HOME: 36,\n    END: 35,\n    BACKSPACE: 8,\n    DELETE: 46,\n    COMMAND: 91,\n\n    MAP: { 91 : \"COMMAND\", 8 : \"BACKSPACE\" , 9 : \"TAB\" , 13 : \"ENTER\" , 16 : \"SHIFT\" , 17 : \"CTRL\" , 18 : \"ALT\" , 19 : \"PAUSEBREAK\" , 20 : \"CAPSLOCK\" , 27 : \"ESC\" , 32 : \"SPACE\" , 33 : \"PAGE_UP\", 34 : \"PAGE_DOWN\" , 35 : \"END\" , 36 : \"HOME\" , 37 : \"LEFT\" , 38 : \"UP\" , 39 : \"RIGHT\" , 40 : \"DOWN\" , 43 : \"+\" , 44 : \"PRINTSCREEN\" , 45 : \"INSERT\" , 46 : \"DELETE\", 48 : \"0\" , 49 : \"1\" , 50 : \"2\" , 51 : \"3\" , 52 : \"4\" , 53 : \"5\" , 54 : \"6\" , 55 : \"7\" , 56 : \"8\" , 57 : \"9\" , 59 : \";\", 61 : \"=\" , 65 : \"A\" , 66 : \"B\" , 67 : \"C\" , 68 : \"D\" , 69 : \"E\" , 70 : \"F\" , 71 : \"G\" , 72 : \"H\" , 73 : \"I\" , 74 : \"J\" , 75 : \"K\" , 76 : \"L\", 77 : \"M\" , 78 : \"N\" , 79 : \"O\" , 80 : \"P\" , 81 : \"Q\" , 82 : \"R\" , 83 : \"S\" , 84 : \"T\" , 85 : \"U\" , 86 : \"V\" , 87 : \"W\" , 88 : \"X\" , 89 : \"Y\" , 90 : \"Z\", 96 : \"0\" , 97 : \"1\" , 98 : \"2\" , 99 : \"3\" , 100 : \"4\" , 101 : \"5\" , 102 : \"6\" , 103 : \"7\" , 104 : \"8\" , 105 : \"9\", 106 : \"*\" , 107 : \"+\" , 109 : \"-\" , 110 : \".\" , 111 : \"/\", 112 : \"F1\" , 113 : \"F2\" , 114 : \"F3\" , 115 : \"F4\" , 116 : \"F5\" , 117 : \"F6\" , 118 : \"F7\" , 119 : \"F8\" , 120 : \"F9\" , 121 : \"F10\" , 122 : \"F11\" , 123 : \"F12\", 144 : \"NUMLOCK\" , 145 : \"SCROLLLOCK\" , 186 : \";\" , 187 : \"=\" , 188 : \",\" , 189 : \"-\" , 190 : \".\" , 191 : \"/\" , 192 : \"`\" , 219 : \"[\" , 220 : \"\\\\\" , 221 : \"]\" , 222 : \"'\"\n    },\n\n    isControl: function (e) {\n        var k = e.which;\n        switch (k) {\n        case KEY.COMMAND:\n        case KEY.SHIFT:\n        case KEY.CTRL:\n            return true;\n        }\n\n        if (e.metaKey || e.ctrlKey) return true;\n\n        return false;\n    },\n    isFunctionKey: function (k) {\n        k = k.which ? k.which : k;\n        return k >= 112 && k <= 123;\n    },\n    isVerticalMovement: function (k){\n      return ~[KEY.UP, KEY.DOWN].indexOf(k);\n    },\n    isHorizontalMovement: function (k){\n      return ~[KEY.LEFT,KEY.RIGHT,KEY.BACKSPACE,KEY.DELETE].indexOf(k);\n    },\n    toSeparator: function (k) {\n      var sep = {ENTER:\"\\n\",TAB:\"\\t\",SPACE:\" \"}[k];\n      if (sep) return sep;\n      // return undefined for special keys other than enter, tab or space.\n      // no way to use them to cut strings.\n      return KEY[k] ? undefined : k;\n    }\n  };\n\nfunction isNil(value) {\n  return angular.isUndefined(value) || value === null;\n}\n\n/**\n * Add querySelectorAll() to jqLite.\n *\n * jqLite find() is limited to lookups by tag name.\n * TODO This will change with future versions of AngularJS, to be removed when this happens\n *\n * See jqLite.find - why not use querySelectorAll? https://github.com/angular/angular.js/issues/3586\n * See feat(jqLite): use querySelectorAll instead of getElementsByTagName in jqLite.find https://github.com/angular/angular.js/pull/3598\n */\nif (angular.element.prototype.querySelectorAll === undefined) {\n  angular.element.prototype.querySelectorAll = function(selector) {\n    return angular.element(this[0].querySelectorAll(selector));\n  };\n}\n\n/**\n * Add closest() to jqLite.\n */\nif (angular.element.prototype.closest === undefined) {\n  angular.element.prototype.closest = function( selector) {\n    var elem = this[0];\n    var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\n\n    while (elem) {\n      if (matchesSelector.bind(elem)(selector)) {\n        return elem;\n      } else {\n        elem = elem.parentElement;\n      }\n    }\n    return false;\n  };\n}\n\nvar latestId = 0;\n\nvar uis = angular.module('ui.select', [])\n\n.constant('uiSelectConfig', {\n  theme: 'bootstrap',\n  searchEnabled: true,\n  sortable: false,\n  placeholder: '', // Empty by default, like HTML tag <select>\n  refreshDelay: 1000, // In milliseconds\n  closeOnSelect: true,\n  skipFocusser: false,\n  dropdownPosition: 'auto',\n  removeSelected: true,\n  resetSearchInput: true,\n  generateId: function() {\n    return latestId++;\n  },\n  appendToBody: false,\n  spinnerEnabled: false,\n  spinnerClass: 'glyphicon glyphicon-refresh ui-select-spin',\n  backspaceReset: true,\n  nullLabel: '(none)',\n  nullValue: null,\n})\n\n// See Rename minErr and make it accessible from outside https://github.com/angular/angular.js/issues/6913\n.service('uiSelectMinErr', function() {\n  var minErr = angular.$$minErr('ui.select');\n  return function() {\n    var error = minErr.apply(this, arguments);\n    var message = error.message.replace(new RegExp('\\nhttp://errors.angularjs.org/.*'), '');\n    return new Error(message);\n  };\n})\n\n// Recreates old behavior of ng-transclude. Used internally.\n.directive('uisTranscludeAppend', function () {\n  return {\n    link: function (scope, element, attrs, ctrl, transclude) {\n        transclude(scope, function (clone) {\n          element.append(clone);\n        });\n      }\n    };\n})\n\n/**\n * Highlights text that matches $select.search.\n *\n * Taken from AngularUI Bootstrap Typeahead\n * See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L340\n */\n.filter('highlight', function() {\n  function escapeRegexp(queryToEscape) {\n    return ('' + queryToEscape).replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  return function(matchItem, query) {\n    return query && matchItem ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<span class=\"ui-select-highlight\">$&</span>') : matchItem;\n  };\n})\n\n/**\n * A read-only equivalent of jQuery's offset function: http://api.jquery.com/offset/\n *\n * Taken from AngularUI Bootstrap Position:\n * See https://github.com/angular-ui/bootstrap/blob/master/src/position/position.js#L70\n */\n.factory('uisOffset',\n  ['$document', '$window',\n  function ($document, $window) {\n\n  return function(element) {\n    var boundingClientRect = element[0].getBoundingClientRect();\n    return {\n      width: boundingClientRect.width || element.prop('offsetWidth'),\n      height: boundingClientRect.height || element.prop('offsetHeight'),\n      top: boundingClientRect.top + ($window.pageYOffset || $document[0].documentElement.scrollTop),\n      left: boundingClientRect.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft)\n    };\n  };\n}]);\n\nuis.directive('uiSelectChoices',\n  ['uiSelectConfig', 'uisRepeatParser', 'uiSelectMinErr', '$compile', '$window',\n  function(uiSelectConfig, RepeatParser, uiSelectMinErr, $compile, $window) {\n\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-choices');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/choices.tpl.html';\n    },\n\n    compile: function(tElement, tAttrs) {\n\n      if (!tAttrs.repeat) throw uiSelectMinErr('repeat', \"Expected 'repeat' expression.\");\n\n      // var repeat = RepeatParser.parse(attrs.repeat);\n      var groupByExp = tAttrs.groupBy;\n      var groupFilterExp = tAttrs.groupFilter;\n\n      if (groupByExp) {\n        var groups = tElement.querySelectorAll('.ui-select-choices-group');\n        if (groups.length !== 1) throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-group but got '{0}'.\", groups.length);\n        groups.attr('ng-repeat', RepeatParser.getGroupNgRepeatExpression());\n      }\n\n      var parserResult = RepeatParser.parse(tAttrs.repeat);\n\n      var choices = tElement.querySelectorAll('.ui-select-choices-row');\n      if (choices.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row but got '{0}'.\", choices.length);\n      }\n\n      choices.attr('ng-repeat', parserResult.repeatExpression(groupByExp));\n\n      var rowsInner = tElement.querySelectorAll('.ui-select-choices-row-inner');\n      if (rowsInner.length !== 1) {\n        throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row-inner but got '{0}'.\", rowsInner.length);\n      }\n      rowsInner.attr('uis-transclude-append', ''); //Adding uisTranscludeAppend directive to row element after choices element has ngRepeat\n\n      // If IE8 then need to target rowsInner to apply the ng-click attr as choices will not capture the event.\n      var clickTarget = $window.document.addEventListener ? choices : rowsInner;\n      clickTarget.attr('ng-click', '$select.select(' + parserResult.itemName + ',$select.skipFocusser,$event)');\n\n      return function link(scope, element, attrs, $select) {\n        $select.parseRepeatAttr(attrs.repeat, groupByExp, groupFilterExp); //Result ready at $select.parserResult\n        $select.disableChoiceExpression = attrs.uiDisableChoice;\n        $select.onHighlightCallback = attrs.onHighlight;\n        $select.minimumInputLength = parseInt(attrs.minimumInputLength) || 0;\n        $select.dropdownPosition = attrs.position ? attrs.position.toLowerCase() : uiSelectConfig.dropdownPosition;\n\n        scope.$watch('$select.search', function(newValue) {\n          if(newValue && !$select.open && $select.multiple) $select.activate(false, true);\n          $select.activeIndex = $select.tagging.isActivated ? -1 : 0;\n          if (!attrs.minimumInputLength || $select.search.length >= attrs.minimumInputLength) {\n            $select.refresh(attrs.refresh);\n          } else {\n            $select.items = [];\n          }\n        });\n\n        attrs.$observe('refreshDelay', function(refreshDelay) {\n          refreshDelay = scope.$eval(refreshDelay);\n          $select.refreshDelay = refreshDelay !== undefined ? refreshDelay : uiSelectConfig.refreshDelay;\n        });\n\n        attrs.$observe('nullValue', function(value) {\n          value = scope.$eval(value);\n          $select.nullValue = value !== undefined ? value : null;\n        });\n\n        attrs.$observe('nullLabel', function(value) {\n          $select.nullLabel = value !== undefined && value !== '' ? value : uiSelectConfig.nullLabel;\n        });\n\n        scope.$watch('$select.open', function(open) {\n          if (open) {\n            element.attr('role', 'listbox');\n            $select.refresh(attrs.refresh);\n          } else {\n            element.removeAttr('role');\n          }\n        });\n      };\n    }\n  };\n}]);\n\n/**\n * Contains ui-select \"intelligence\".\n *\n * The goal is to limit dependency on the DOM whenever possible and\n * put as much logic in the controller (instead of the link functions) as possible so it can be easily tested.\n */\nuis.controller('uiSelectCtrl',\n  ['$scope', '$element', '$timeout', '$filter', '$$uisDebounce', 'uisRepeatParser', 'uiSelectMinErr', 'uiSelectConfig', '$parse', '$window',\n  function($scope, $element, $timeout, $filter, $$uisDebounce, RepeatParser, uiSelectMinErr, uiSelectConfig, $parse, $window) {\n\n  var ctrl = this;\n\n  var EMPTY_SEARCH = '';\n\n  ctrl.placeholder = uiSelectConfig.placeholder;\n  ctrl.searchEnabled = uiSelectConfig.searchEnabled;\n  ctrl.sortable = uiSelectConfig.sortable;\n  ctrl.refreshDelay = uiSelectConfig.refreshDelay;\n  ctrl.paste = uiSelectConfig.paste;\n  ctrl.resetSearchInput = uiSelectConfig.resetSearchInput;\n  ctrl.refreshing = false;\n  ctrl.spinnerEnabled = uiSelectConfig.spinnerEnabled;\n  ctrl.spinnerClass = uiSelectConfig.spinnerClass;\n  ctrl.removeSelected = uiSelectConfig.removeSelected; //If selected item(s) should be removed from dropdown list\n  ctrl.closeOnSelect = true; //Initialized inside uiSelect directive link function\n  ctrl.skipFocusser = false; //Set to true to avoid returning focus to ctrl when item is selected\n  ctrl.search = EMPTY_SEARCH;\n  ctrl.nullLabel = uiSelectConfig.nullLabel;\n  ctrl.nullValue = uiSelectConfig.nullValue;\n\n  ctrl.activeIndex = 0; //Dropdown of choices\n  ctrl.items = []; //All available choices\n\n  ctrl.open = false;\n  ctrl.focus = false;\n  ctrl.disabled = false;\n  ctrl.selected = undefined;\n\n  ctrl.dropdownPosition = 'auto';\n\n  ctrl.focusser = undefined; //Reference to input element used to handle focus events\n  ctrl.multiple = undefined; // Initialized inside uiSelect directive link function\n  ctrl.disableChoiceExpression = undefined; // Initialized inside uiSelectChoices directive link function\n  ctrl.tagging = {isActivated: false, fct: undefined};\n  ctrl.taggingTokens = {isActivated: false, tokens: undefined};\n  ctrl.lockChoiceExpression = undefined; // Initialized inside uiSelectMatch directive link function\n  ctrl.clickTriggeredSelect = false;\n  ctrl.$filter = $filter;\n  ctrl.$element = $element;\n\n  ctrl.searchInput = $element.querySelectorAll('input.ui-select-search');\n  if (ctrl.searchInput.length !== 1) {\n    throw uiSelectMinErr('searchInput', \"Expected 1 input.ui-select-search but got '{0}'.\", ctrl.searchInput.length);\n  }\n\n  ctrl.isEmpty = function() {\n    return isNil(ctrl.selected) || ctrl.selected === '' || ctrl.selected.$$null || (ctrl.multiple && ctrl.selected.length === 0);\n  };\n\n  ctrl.getSelectedText = function() {\n    return ctrl.$element.find('.ui-select-match-text').text();\n  };\n\n  ctrl.getPlaceholder = function(){\n    if(ctrl.selected && ctrl.selected.length) return;\n    return ctrl.placeholder;\n  };\n\n  function _findIndex(collection, predicate, thisArg){\n    if (collection.findIndex){\n      return collection.findIndex(predicate, thisArg);\n    } else {\n      var list = Object(collection);\n      var length = list.length >>> 0;\n      var value;\n\n      for (var i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  }\n\n  // Most of the time the user does not want to empty the search input when in typeahead mode\n  function _resetSearchInput() {\n    if (ctrl.resetSearchInput) {\n      ctrl.search = EMPTY_SEARCH;\n      setActiveIndexToSelected();\n    }\n  }\n\n  function setActiveIndexToSelected() {\n    // Don't change activeIndex to selected if we can select multiple items\n    if (ctrl.multiple) { return; }\n\n    // If we have a track by expression, use that to find the selected item since it might be a copy/different\n    // prototype. Otherwise, do equality checks.\n    var active = -1;\n    var selected = ctrl.selected;\n    if (selected && !selected.$$null && ctrl.items.length) {\n      var trackBy = ctrl.parserResult && ctrl.parserResult.trackByExp;\n      var trackSkipFirst = trackBy ? trackBy.indexOf('.') : -1;\n      var getter = trackSkipFirst > -1 ? $parse(trackBy.slice(trackSkipFirst + 1)) : function(obj) { return obj; };\n      var trackedValue = getter(selected);\n      active = _findIndex(ctrl.items, function(item) {\n        return angular.equals(getter(item), trackedValue);\n      });\n    }\n\n    // If we don't have an active index, select first enabled non-generated null item.\n    if (active < 0) {\n      active = _findIndex(ctrl.items, function(item) {\n        return !item.$$null && !_isItemDisabled(item);\n      });\n    }\n    ctrl.activeIndex = active;\n  }\n\n  function _groupsFilter(groups, groupNames) {\n    var i, j, result = [];\n    for(i = 0; i < groupNames.length ;i++){\n      for(j = 0; j < groups.length ;j++){\n        if(groups[j].name == [groupNames[i]]){\n          result.push(groups[j]);\n        }\n      }\n    }\n    return result;\n  }\n\n  // When the user clicks on ui-select, displays the dropdown list\n  ctrl.activate = function(initSearchValue, avoidReset) {\n    if (!ctrl.disabled && !ctrl.open) {\n      if (!avoidReset) {\n        _resetSearchInput();\n      }\n\n      $scope.$broadcast('uis:activate');\n      ctrl.open = true;\n\n      // Tagging label variant should select the first item\n      if (ctrl.taggingLabel) {\n        ctrl.activeIndex = 0;\n      } else {\n        setActiveIndexToSelected();\n      }\n\n      $timeout(function () {\n        ctrl.focusSearchInput(initSearchValue);\n        if (!ctrl.tagging.isActivated && ctrl.items.length > 1 && ctrl.open) {\n          _ensureHighlightVisible();\n        }\n      });\n    } else if (ctrl.open && !ctrl.searchEnabled) {\n      // Close the selection if we don't have search enabled, and we click on the select again\n      ctrl.close();\n    }\n  };\n\n  ctrl.focusSearchInput = function (initSearchValue) {\n    ctrl.search = initSearchValue || ctrl.search;\n    ctrl.searchInput[0].focus();\n  };\n\n  ctrl.findGroupByName = function(name, noStrict) {\n    return ctrl.groups && ctrl.groups.filter(function(group) {\n      if (noStrict)\n        return group.name == name;\n      else\n        return group.name === name;\n    })[0];\n  };\n\n  ctrl.parseRepeatAttr = function(repeatAttr, groupByExp, groupFilterExp) {\n    function updateGroups(items) {\n      items = items || ctrl.items;\n\n      // Group items together by the group by expression\n      var groupFn = $scope.$eval(groupByExp);\n      ctrl.items = [];\n      ctrl.groups = [];\n      items.forEach(function(item) {\n        var groupName = angular.isFunction(groupFn) ? groupFn(item) : item[groupFn];\n        var group = ctrl.findGroupByName(groupName);\n        if (group) {\n          group.items.push(item);\n        } else {\n          ctrl.groups.push({name: groupName, items: [item]});\n        }\n      });\n\n      // Filter the groups by the given filter expression\n      var groupFilterFn = groupFilterExp && $scope.$eval(groupFilterExp);\n      if (angular.isFunction(groupFilterFn)) {\n        ctrl.groups = groupFilterFn(ctrl.groups);\n      } else if (angular.isArray(groupFilterFn)) {\n        ctrl.groups = _groupsFilter(ctrl.groups, groupFilterFn);\n      }\n\n      // Collect the remaining items in the same order of the filtered groups.\n      items = ctrl.items = ctrl.groups.reduce(function(items, group) {\n        return items.concat(group.items);\n      }, []);\n\n      // Insert our null item at the head of the list if we dont have an item that represents null.\n      if (ctrl.groups.length && !ctrl.taggingLabel && !ctrl.required && !ctrl.selected && !items.some(isNullItem)) {\n        var nullItem = createNullItem();\n        items.unshift(nullItem);\n        ctrl.groups[0].items.unshift(nullItem);\n      }\n    }\n\n    function setPlainItems(items) {\n      ctrl.items = items;\n\n      // Insert our null item at the head of the items\n      if (!ctrl.taggingLabel && !ctrl.required && !ctrl.selected && !items.some(isNullItem)) {\n        items.unshift(createNullItem());\n      }\n    }\n\n    function createNullItem() {\n      var nullItem = {$$null: true};\n      nullItem[ctrl.itemProperty] = ctrl.nullValue;\n      return nullItem;\n    }\n\n    function isNullItem(item) {\n      return item.$$null || angular.equals(item[ctrl.itemProperty], ctrl.nullValue);\n    }\n\n    ctrl.setItemsFn = groupByExp ? updateGroups : setPlainItems;\n    ctrl.parserResult = RepeatParser.parse(repeatAttr);\n    ctrl.isGrouped = !!groupByExp;\n    ctrl.itemProperty = ctrl.parserResult.itemName;\n\n    //If collection is an Object, convert it to Array\n    var originalSource = ctrl.parserResult.source;\n\n    //When an object is used as source, we better create an array and use it as 'source'\n    var createArrayFromObject = function() {\n      var origSrc = originalSource($scope);\n      $scope.$uisSource = Object.keys(origSrc).map(function(v){\n        var result = {};\n        result[ctrl.parserResult.keyName] = v;\n        result.value = origSrc[v];\n        return result;\n      });\n    };\n\n    if (ctrl.parserResult.keyName){ // Check for (key,value) syntax\n      createArrayFromObject();\n      ctrl.parserResult.source = $parse('$uisSource' + ctrl.parserResult.filters);\n      $scope.$watch(originalSource, function(newVal, oldVal){\n        if (newVal !== oldVal) createArrayFromObject();\n      }, true);\n    }\n\n    ctrl.refreshItems = function(data) {\n      data = data || ctrl.parserResult.source($scope) || ctrl.items || [];\n\n      //TODO should implement for single mode removeSelected\n      var selectedItems = ctrl.selected;\n      if (!ctrl.multiple || !ctrl.removeSelected || ctrl.isEmpty() || (angular.isArray(selectedItems) && !selectedItems.length)) {\n        ctrl.setItemsFn(data);\n      } else if (data !== undefined && data !== null) {\n        var filteredItems = data.filter(function(i) {\n          return angular.isArray(selectedItems) ? selectedItems.every(function(selectedItem) {\n            return !angular.equals(i, selectedItem);\n          }) : !angular.equals(i, selectedItems);\n        });\n        ctrl.setItemsFn(filteredItems);\n      }\n      if (ctrl.dropdownPosition === 'auto' || ctrl.dropdownPosition === 'up'){\n        $scope.calculateDropdownPos();\n      }\n      $scope.$broadcast('uis:refresh');\n    };\n\n    // See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L259\n    $scope.$watchCollection(ctrl.parserResult.source, function(items) {\n      if (items === undefined || items === null) {\n        // If the user specifies undefined or null => reset the collection\n        // Special case: items can be undefined if the user did not initialized the collection on the scope\n        // i.e $scope.addresses = [] is missing\n        ctrl.items = [];\n      } else if (!angular.isArray(items)) {\n        throw uiSelectMinErr('items', \"Expected an array but got '{0}'.\", items);\n      } else {\n        //Remove already selected items (ex: while searching)\n        //TODO Should add a test\n        ctrl.refreshItems(items);\n\n        //update the view value with fresh data from items, if there is a valid model value\n        if (angular.isDefined(ctrl.ngModel.$modelValue)) {\n          ctrl.ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n        }\n      }\n    });\n  };\n\n  var _refreshDelayPromise;\n\n  /**\n   * Typeahead mode: lets the user refresh the collection using his own function.\n   *\n   * See Expose $select.search for external / remote filtering https://github.com/angular-ui/ui-select/pull/31\n   */\n  ctrl.refresh = function(refreshAttr) {\n    if (refreshAttr !== undefined) {\n      // Debounce\n      // See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L155\n      // FYI AngularStrap typeahead does not have debouncing: https://github.com/mgcrea/angular-strap/blob/v2.0.0-rc.4/src/typeahead/typeahead.js#L177\n      if (_refreshDelayPromise) {\n        $timeout.cancel(_refreshDelayPromise);\n      }\n      _refreshDelayPromise = $timeout(function() {\n        if ($scope.$select.search.length >= $scope.$select.minimumInputLength) {\n          var refreshPromise = $scope.$eval(refreshAttr);\n          if (refreshPromise && angular.isFunction(refreshPromise.then) && !ctrl.refreshing) {\n            ctrl.refreshing = true;\n            refreshPromise.finally(function() {\n              ctrl.refreshing = false;\n            });\n          }\n        }\n      }, ctrl.refreshDelay);\n    }\n  };\n\n  ctrl.isActive = function(itemScope) {\n    if ( !ctrl.open ) {\n      return false;\n    }\n    var itemIndex = ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n    var isActive =  itemIndex == ctrl.activeIndex;\n\n    if ( !isActive || itemIndex < 0 ) {\n      return false;\n    }\n\n    if (isActive && !angular.isUndefined(ctrl.onHighlightCallback)) {\n      itemScope.$eval(ctrl.onHighlightCallback);\n    }\n\n    return isActive;\n  };\n\n  var _isItemSelected = function (item) {\n    return (ctrl.selected && angular.isArray(ctrl.selected) &&\n        ctrl.selected.filter(function (selection) { return angular.equals(selection, item); }).length > 0);\n  };\n\n  var disabledItems = [];\n\n  function _updateItemDisabled(item, isDisabled) {\n    var disabledItemIndex = disabledItems.indexOf(item);\n    if (isDisabled && disabledItemIndex === -1) {\n      disabledItems.push(item);\n    }\n\n    if (!isDisabled && disabledItemIndex > -1) {\n      disabledItems.splice(disabledItemIndex, 1);\n    }\n  }\n\n  function _isItemDisabled(item) {\n    return disabledItems.indexOf(item) > -1;\n  }\n\n  ctrl.isDisabled = function(itemScope) {\n\n    if (!ctrl.open) return;\n\n    var item = itemScope[ctrl.itemProperty];\n    var itemIndex = ctrl.items.indexOf(item);\n    var isDisabled = false;\n\n    if (itemIndex >= 0 && (angular.isDefined(ctrl.disableChoiceExpression) || ctrl.multiple)) {\n\n      if (item.isTag) return false;\n\n      if (ctrl.multiple) {\n        isDisabled = _isItemSelected(item);\n      }\n\n      if (!isDisabled && angular.isDefined(ctrl.disableChoiceExpression)) {\n        isDisabled = !!(itemScope.$eval(ctrl.disableChoiceExpression));\n      }\n\n      _updateItemDisabled(item, isDisabled);\n    }\n\n    return isDisabled;\n  };\n\n\n  // When the user selects an item with ENTER or clicks the dropdown\n  ctrl.select = function(item, skipFocusser, $event) {\n    if (isNil(item) || !_isItemDisabled(item)) {\n\n      if ( ! ctrl.items && ! ctrl.search && ! ctrl.tagging.isActivated) return;\n\n      if (!item || !_isItemDisabled(item)) {\n        // if click is made on existing item, prevent from tagging, ctrl.search does not matter\n        ctrl.clickTriggeredSelect = false;\n        if($event && ($event.type === 'click' || $event.type === 'touchend') && item)\n          ctrl.clickTriggeredSelect = true;\n\n        if(ctrl.tagging.isActivated && ctrl.clickTriggeredSelect === false) {\n          // if taggingLabel is disabled and item is undefined we pull from ctrl.search\n          if ( ctrl.taggingLabel === false ) {\n            if ( ctrl.activeIndex < 0 ) {\n              if (item === undefined) {\n                item = ctrl.tagging.fct !== undefined ? ctrl.tagging.fct(ctrl.search) : ctrl.search;\n              }\n              if (!item || angular.equals( ctrl.items[0], item ) ) {\n                return;\n              }\n            } else {\n              // keyboard nav happened first, user selected from dropdown\n              item = ctrl.items[ctrl.activeIndex];\n            }\n          } else {\n            // tagging always operates at index zero, taggingLabel === false pushes\n            // the ctrl.search value without having it injected\n            if ( ctrl.activeIndex === 0 ) {\n              // ctrl.tagging pushes items to ctrl.items, so we only have empty val\n              // for `item` if it is a detected duplicate\n              if ( item === undefined ) return;\n\n              // create new item on the fly if we don't already have one;\n              // use tagging function if we have one\n              if ( ctrl.tagging.fct !== undefined && typeof item === 'string' ) {\n                item = ctrl.tagging.fct(item);\n                if (!item) return;\n              // if item type is 'string', apply the tagging label\n              } else if ( typeof item === 'string' ) {\n                // trim the trailing space\n                item = item.replace(ctrl.taggingLabel,'').trim();\n              }\n            }\n          }\n          // search ctrl.selected for dupes potentially caused by tagging and return early if found\n          if (_isItemSelected(item)) {\n            ctrl.close(skipFocusser);\n            return;\n          }\n        }\n        _resetSearchInput();\n        $scope.$broadcast('uis:select', item);\n\n        if (ctrl.closeOnSelect) {\n          ctrl.close(skipFocusser);\n        }\n      }\n    }\n  };\n\n  // Closes the dropdown\n  ctrl.close = function(skipFocusser) {\n    if (!ctrl.open) return;\n    if (ctrl.ngModel && ctrl.ngModel.$setTouched) ctrl.ngModel.$setTouched();\n    ctrl.open = false;\n    _resetSearchInput();\n    $scope.$broadcast('uis:close', skipFocusser);\n\n  };\n\n  ctrl.setFocus = function(){\n    if (!ctrl.focus) ctrl.focusInput[0].focus();\n  };\n\n  ctrl.clear = function($event) {\n    ctrl.select(ctrl.nullValue);\n    $event.stopPropagation();\n    $timeout(function() {\n      ctrl.focusser[0].focus();\n    }, 0, false);\n  };\n\n  // Toggle dropdown\n  ctrl.toggle = function(e) {\n    if (ctrl.open) {\n      ctrl.close();\n    } else {\n      ctrl.activate();\n    }\n\n    ctrl.cancelEvent(e);\n  };\n\n  // Set default function for locked choices - avoids unnecessary\n  // logic if functionality is not being used\n  ctrl.isLocked = function () {\n    return false;\n  };\n\n  $scope.$watch(function () {\n    return angular.isDefined(ctrl.lockChoiceExpression) && ctrl.lockChoiceExpression !== \"\";\n  }, _initaliseLockedChoices);\n\n  function _initaliseLockedChoices(doInitalise) {\n    if(!doInitalise) return;\n\n    var lockedItems = [];\n\n    function _updateItemLocked(item, isLocked) {\n      var lockedItemIndex = lockedItems.indexOf(item);\n      if (isLocked && lockedItemIndex === -1) {\n        lockedItems.push(item);\n        }\n\n      if (!isLocked && lockedItemIndex > -1) {\n        lockedItems.splice(lockedItemIndex, 1);\n      }\n    }\n\n    function _isItemlocked(item) {\n      return lockedItems.indexOf(item) > -1;\n    }\n\n    ctrl.isLocked = function (itemScope, itemIndex) {\n      var isLocked = false,\n          item = ctrl.selected[itemIndex];\n\n      if(item) {\n        if (itemScope) {\n          isLocked = !!(itemScope.$eval(ctrl.lockChoiceExpression));\n          _updateItemLocked(item, isLocked);\n        } else {\n          isLocked = _isItemlocked(item);\n        }\n      }\n\n      return isLocked;\n    };\n  }\n\n  var sizeWatch = null;\n  var updaterScheduled = false;\n  ctrl.sizeSearchInput = function() {\n\n    var input = ctrl.searchInput[0],\n        container = ctrl.$element[0],\n        calculateContainerWidth = function() {\n          // Return the container width only if the search input is visible\n          return container.clientWidth * !!input.offsetParent;\n        },\n        updateIfVisible = function(containerWidth) {\n          if (containerWidth === 0) {\n            return false;\n          }\n          var inputWidth = containerWidth - input.offsetLeft;\n          if (inputWidth < 50) inputWidth = containerWidth;\n          ctrl.searchInput.css('width', inputWidth+'px');\n          return true;\n        };\n\n    ctrl.searchInput.css('width', '10px');\n    $timeout(function() { //Give tags time to render correctly\n      if (sizeWatch === null && !updateIfVisible(calculateContainerWidth())) {\n        sizeWatch = $scope.$watch(function() {\n          if (!updaterScheduled) {\n            updaterScheduled = true;\n            $scope.$$postDigest(function() {\n              updaterScheduled = false;\n              if (updateIfVisible(calculateContainerWidth())) {\n                sizeWatch();\n                sizeWatch = null;\n              }\n            });\n          }\n        }, angular.noop);\n      }\n    });\n  };\n\n  function _handleDropDownSelection(key, shiftKey) {\n    var processed = true;\n    switch (key) {\n      case KEY.DOWN:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex < ctrl.items.length - 1) {\n          var idx = ++ctrl.activeIndex;\n          while(_isItemDisabled(ctrl.items[idx]) && idx < ctrl.items.length) {\n            ctrl.activeIndex = ++idx;\n          }\n        }\n        break;\n      case KEY.UP:\n        if (!ctrl.open && ctrl.multiple) {\n          // In case its the search input in 'multiple' mode\n          ctrl.activate(false, true);\n        } else if (ctrl.items.length) {\n          // Move up in the index, skipping over disabled items\n          var index = ctrl.activeIndex - 1;\n          while (index > 0 && _isItemDisabled(ctrl.items[index])) {\n            --index;\n          }\n\n          // Ensure inbounds and skip over if the selected index is $$null.\n          if (index >= (!ctrl.multiple && ctrl.isEmpty() ? 1 : 0)) {\n            ctrl.activeIndex = index;\n          }\n        }\n        break;\n      case KEY.TAB:\n        if (!ctrl.multiple || ctrl.open) {\n          ctrl.select(ctrl.items[ctrl.activeIndex], true);\n          ctrl.tabNavigate(shiftKey);\n        }\n\n        break;\n      case KEY.ENTER:\n        if(ctrl.open && (ctrl.tagging.isActivated || ctrl.activeIndex >= 0)){\n          ctrl.select(ctrl.items[ctrl.activeIndex], ctrl.skipFocusser); // Make sure at least one dropdown item is highlighted before adding if not in tagging mode\n        } else {\n          ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        }\n        break;\n      case KEY.ESC:\n        ctrl.close();\n        break;\n      default:\n        processed = false;\n    }\n    return processed;\n  }\n\n  ctrl.cancelEvent = function(e) {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  ctrl.tabNavigate = function(shiftKey) {\n    $timeout(function() {\n      var focusEl = ctrl.focusser && ctrl.focusser[0];\n      if (!focusEl) { return; }\n\n      var focusable = angular.element(':tabbable');\n      var index = focusable.index(focusEl);\n      if (index > -1) {\n        var el = focusable[index + (shiftKey ? -1 : 1)];\n        if (el) {\n          el.focus();\n        }\n      }\n    }, 10);\n  };\n\n  // Bind to keyboard shortcuts\n  ctrl.searchInput.on('keydown', function(e) {\n\n    var key = e.which;\n\n    if (~[KEY.ENTER,KEY.ESC,KEY.TAB].indexOf(key)){\n      ctrl.cancelEvent(e);\n    }\n\n    $scope.$apply(function() {\n\n      var tagged = false;\n\n      if (ctrl.items.length > 0 || ctrl.tagging.isActivated) {\n        if(!_handleDropDownSelection(key, e.shiftKey) && !ctrl.searchEnabled) {\n          ctrl.cancelEvent(e);\n        }\n        if ( ctrl.taggingTokens.isActivated ) {\n          for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {\n            if ( ctrl.taggingTokens.tokens[i] === KEY.MAP[e.keyCode] ) {\n              // make sure there is a new value to push via tagging\n              if ( ctrl.search.length > 0 ) {\n                tagged = true;\n              }\n            }\n          }\n          if ( tagged ) {\n            $timeout(function() {\n              ctrl.searchInput.triggerHandler('tagged');\n              var newItem = ctrl.search.replace(KEY.MAP[e.keyCode],'').trim();\n              if ( ctrl.tagging.fct ) {\n                newItem = ctrl.tagging.fct( newItem );\n              }\n              if (newItem) ctrl.select(newItem, true);\n            });\n          }\n        }\n      } else if (key === KEY.TAB) {\n        // Don't trap users in lists with no items\n        ctrl.tabNavigate(e.shiftKey);\n      }\n    });\n\n    if(KEY.isVerticalMovement(key) && ctrl.items.length > 0){\n      _ensureHighlightVisible();\n    }\n  });\n\n  ctrl.searchInput.on('paste', function (e) {\n    var data;\n\n    if (window.clipboardData && window.clipboardData.getData) { // IE\n      data = window.clipboardData.getData('Text');\n    } else {\n      data = (e.originalEvent || e).clipboardData.getData('text/plain');\n    }\n\n    // Prepend the current input field text to the paste buffer.\n    data = ctrl.search + data;\n\n    if (data && data.length > 0) {\n      // If tagging try to split by tokens and add items\n      if (ctrl.taggingTokens.isActivated) {\n        var items = [];\n        for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {  // split by first token that is contained in data\n          var separator = KEY.toSeparator(ctrl.taggingTokens.tokens[i]) || ctrl.taggingTokens.tokens[i];\n          if (data.indexOf(separator) > -1) {\n            items = data.split(separator);\n            break;  // only split by one token\n          }\n        }\n        if (items.length === 0) {\n          items = [data];\n        }\n        var oldsearch = ctrl.search;\n        items.forEach(function (item) {\n          var newItem = ctrl.tagging.fct ? ctrl.tagging.fct(item) : item;\n          if (newItem) {\n            ctrl.select(newItem, true);\n          }\n        });\n        ctrl.search = oldsearch || EMPTY_SEARCH;\n        ctrl.cancelEvent(e);\n      } else if (ctrl.paste) {\n        ctrl.paste(data);\n        ctrl.search = EMPTY_SEARCH;\n        ctrl.cancelEvent(e);\n      }\n    }\n  });\n\n  ctrl.searchInput.on('tagged', function() {\n    $timeout(function() {\n      _resetSearchInput();\n    });\n  });\n\n  // See https://github.com/ivaynberg/select2/blob/3.4.6/select2.js#L1431\n  function _ensureHighlightVisible() {\n    var container = $element.querySelectorAll('.ui-select-choices-content');\n    var choices = container.querySelectorAll('.ui-select-choices-row');\n    if (choices.length < 1) {\n      throw uiSelectMinErr('choices', \"Expected multiple .ui-select-choices-row but got '{0}'.\", choices.length);\n    }\n\n    // Bail out if we can't find the highlighted row.\n    var highlighted = choices[ctrl.activeIndex];\n    if (!highlighted) { return; }\n\n    var posY = highlighted.offsetTop + highlighted.clientHeight - container[0].scrollTop;\n    var height = container[0].offsetHeight;\n    if (posY > height) {\n      container[0].scrollTop += posY - height;\n    } else if (posY < highlighted.clientHeight) {\n      if (ctrl.isGrouped && ctrl.activeIndex === 0) {\n        container[0].scrollTop = 0; //To make group header visible when going all the way up\n      } else {\n        container[0].scrollTop -= highlighted.clientHeight - posY;\n      }\n    }\n  }\n\n  var onResize = $$uisDebounce(function() {\n    ctrl.sizeSearchInput();\n  }, 50);\n\n  angular.element($window).on('resize', onResize);\n\n  $scope.$on('$destroy', function() {\n    ctrl.searchInput.off('keyup keydown tagged blur paste');\n    angular.element($window).off('resize', onResize);\n  });\n\n  $scope.$watch('$select.activeIndex', function(activeIndex) {\n    if (activeIndex)\n      $element.find('input').attr(\n        'aria-activedescendant',\n        'ui-select-choices-row-' + ctrl.generatedId + '-' + activeIndex);\n  });\n\n  $scope.$watch('$select.open', function(open) {\n    if (!open)\n      $element.find('input').removeAttr('aria-activedescendant');\n  });\n}]);\n\nuis.directive('uiSelect',\n  ['$document', 'uiSelectConfig', 'uiSelectMinErr', 'uisOffset', '$parse', '$timeout', '$window',\n  function($document, uiSelectConfig, uiSelectMinErr, uisOffset, $parse, $timeout, $window) {\n\n  return {\n    restrict: 'EA',\n    templateUrl: function(tElement, tAttrs) {\n      var theme = tAttrs.theme || uiSelectConfig.theme;\n      return theme + (angular.isDefined(tAttrs.multiple) ? '/select-multiple.tpl.html' : '/select.tpl.html');\n    },\n    replace: true,\n    transclude: true,\n    require: ['uiSelect', '^ngModel', '?^^fieldset'],\n    scope: true,\n\n    controller: 'uiSelectCtrl',\n    controllerAs: '$select',\n    compile: function(tElement, tAttrs) {\n\n      // Allow setting ngClass on uiSelect\n      var match = /{(.*)}\\s*{(.*)}/.exec(tAttrs.ngClass);\n      if(match) {\n        var combined = '{'+ match[1] +', '+ match[2] +'}';\n        tAttrs.ngClass = combined;\n        tElement.attr('ng-class', combined);\n      }\n\n      //Multiple or Single depending if multiple attribute presence\n      if (angular.isDefined(tAttrs.multiple))\n        tElement.append('<ui-select-multiple/>').removeAttr('multiple');\n      else\n        tElement.append('<ui-select-single/>');\n\n      if (tAttrs.inputId)\n        tElement.querySelectorAll('input.ui-select-search')[0].id = tAttrs.inputId;\n\n      return function(scope, element, attrs, ctrls, transcludeFn) {\n\n        var $select = ctrls[0];\n        var ngModel = ctrls[1];\n        var $fieldset = ctrls[2];\n\n        $select.generatedId = uiSelectConfig.generateId();\n        $select.baseTitle = attrs.title || 'Select box';\n        $select.focusserTitle = $select.baseTitle + ' focus';\n        $select.focusserId = 'focusser-' + $select.generatedId;\n\n        $select.closeOnSelect = function() {\n          if (angular.isDefined(attrs.closeOnSelect)) {\n            return $parse(attrs.closeOnSelect)();\n          } else {\n            return uiSelectConfig.closeOnSelect;\n          }\n        }();\n\n        scope.$watch('skipFocusser', function() {\n            var skipFocusser = scope.$eval(attrs.skipFocusser);\n            $select.skipFocusser = skipFocusser !== undefined ? skipFocusser : uiSelectConfig.skipFocusser;\n        });\n\n        $select.onSelectCallback = $parse(attrs.onSelect);\n        $select.onRemoveCallback = $parse(attrs.onRemove);\n\n        //Set reference to ngModel from uiSelectCtrl\n        $select.ngModel = ngModel;\n\n        $select.choiceGrouped = function(group){\n          return $select.isGrouped && group && group.name;\n        };\n\n        if(attrs.tabindex){\n          attrs.$observe('tabindex', function(value) {\n            $select.focusInput.attr('tabindex', value);\n            element.removeAttr('tabindex');\n          });\n        }\n\n        scope.$watch(function () { return scope.$eval(attrs.searchEnabled); }, function(newVal) {\n          $select.searchEnabled = newVal !== undefined ? newVal : uiSelectConfig.searchEnabled;\n        });\n\n        scope.$watch('sortable', function() {\n            var sortable = scope.$eval(attrs.sortable);\n            $select.sortable = sortable !== undefined ? sortable : uiSelectConfig.sortable;\n        });\n\n        attrs.$observe('backspaceReset', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var backspaceReset = scope.$eval(attrs.backspaceReset);\n          $select.backspaceReset = backspaceReset !== undefined ? backspaceReset : true;\n        });\n\n        attrs.$observe('limit', function() {\n          //Limit the number of selections allowed\n          $select.limit = (angular.isDefined(attrs.limit)) ? parseInt(attrs.limit, 10) : undefined;\n        });\n\n        scope.$watch('removeSelected', function() {\n            var removeSelected = scope.$eval(attrs.removeSelected);\n            $select.removeSelected = removeSelected !== undefined ? removeSelected : uiSelectConfig.removeSelected;\n        });\n\n        // If the disable attribute is applied, or a parent fieldset becomes disabled, disable the select.\n        scope.$watch(function() { return element.attr('disabled') || $fieldset && $fieldset.isDisabled(); }, function(disabled) {\n          $select.disabled = disabled;\n        });\n\n        attrs.$observe('resetSearchInput', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var resetSearchInput = scope.$eval(attrs.resetSearchInput);\n          $select.resetSearchInput = resetSearchInput !== undefined ? resetSearchInput : true;\n        });\n\n        attrs.$observe('paste', function() {\n          $select.paste = scope.$eval(attrs.paste);\n        });\n\n        attrs.$observe('tagging', function() {\n          if(attrs.tagging !== undefined)\n          {\n            // $eval() is needed otherwise we get a string instead of a boolean\n            var taggingEval = scope.$eval(attrs.tagging);\n            $select.tagging = {isActivated: true, fct: taggingEval !== true ? taggingEval : undefined};\n          }\n          else\n          {\n            $select.tagging = {isActivated: false, fct: undefined};\n          }\n        });\n\n        attrs.$observe('taggingLabel', function() {\n          if(attrs.tagging !== undefined )\n          {\n            // check eval for FALSE, in this case, we disable the labels\n            // associated with tagging\n            if ( attrs.taggingLabel === 'false' ) {\n              $select.taggingLabel = false;\n            }\n            else\n            {\n              $select.taggingLabel = attrs.taggingLabel !== undefined ? attrs.taggingLabel : '(new)';\n            }\n          }\n        });\n\n        attrs.$observe('taggingTokens', function() {\n          if (attrs.tagging !== undefined) {\n            var tokens = attrs.taggingTokens !== undefined ? attrs.taggingTokens.split('|') : [',','ENTER'];\n            $select.taggingTokens = {isActivated: true, tokens: tokens };\n          }\n        });\n\n        attrs.$observe('spinnerEnabled', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var spinnerEnabled = scope.$eval(attrs.spinnerEnabled);\n          $select.spinnerEnabled = spinnerEnabled !== undefined ? spinnerEnabled : uiSelectConfig.spinnerEnabled;\n        });\n\n        attrs.$observe('spinnerClass', function() {\n          var spinnerClass = attrs.spinnerClass;\n          $select.spinnerClass = spinnerClass !== undefined ? attrs.spinnerClass : uiSelectConfig.spinnerClass;\n        });\n\n        // Keep track of whether or not this field is required, if it is, do not allow it to be cleared.\n        scope.$watch(\n          function() { return !!scope.$eval(attrs.ngRequired); },\n          function(required, oldRequired) {\n            $select.required = required;\n\n            // If required changes, we need to refresh the items since the null item may be created/destroyed\n            if ($select.refreshItems) {\n              $select.refreshItems();\n            }\n          }\n        );\n\n        //Automatically gets focus when loaded\n        if (angular.isDefined(attrs.autofocus)) {\n          resetFocus();\n        }\n\n        //Gets focus based on scope event name (e.g. focus-on='SomeEventName')\n        if (angular.isDefined(attrs.focusOn)) {\n          scope.$on(attrs.focusOn, resetFocus);\n        }\n\n        // Move transcluded elements to their correct position in main template\n        transcludeFn(scope, function(clone) {\n          // See Transclude in AngularJS http://blog.omkarpatil.com/2012/11/transclude-in-angularjs.html\n\n          // One day jqLite will be replaced by jQuery and we will be able to write:\n          // var transcludedElement = clone.filter('.my-class')\n          // instead of creating a hackish DOM element:\n          var transcluded = angular.element('<div>').append(clone);\n\n          var transcludedMatch = transcluded.querySelectorAll('.ui-select-match');\n          transcludedMatch.removeAttr('ui-select-match'); //To avoid loop in case directive as attr\n          transcludedMatch.removeAttr('data-ui-select-match'); // Properly handle HTML5 data-attributes\n          if (transcludedMatch.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-match but got '{0}'.\", transcludedMatch.length);\n          }\n          element.querySelectorAll('.ui-select-match').replaceWith(transcludedMatch);\n\n          var transcludedChoices = transcluded.querySelectorAll('.ui-select-choices');\n          transcludedChoices.removeAttr('ui-select-choices'); //To avoid loop in case directive as attr\n          transcludedChoices.removeAttr('data-ui-select-choices'); // Properly handle HTML5 data-attributes\n          if (transcludedChoices.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-choices but got '{0}'.\", transcludedChoices.length);\n          }\n          element.querySelectorAll('.ui-select-choices').replaceWith(transcludedChoices);\n\n          var transcludedNoChoice = transcluded.querySelectorAll('.ui-select-no-choice');\n          transcludedNoChoice.removeAttr('ui-select-no-choice'); //To avoid loop in case directive as attr\n          transcludedNoChoice.removeAttr('data-ui-select-no-choice'); // Properly handle HTML5 data-attributes\n          if (transcludedNoChoice.length == 1) {\n            element.querySelectorAll('.ui-select-no-choice').replaceWith(transcludedNoChoice);\n          }\n\n          var transcludedHeader = transcluded.querySelectorAll('.ui-select-header');\n          transcludedHeader.removeAttr('ui-select-header'); // To avoid loop in case directive as attr\n          transcludedHeader.removeAttr('data-ui-select-header'); // Properly handle HTML5 data-attributes\n          if (transcludedHeader.length == 1) {\n            element.querySelectorAll('.ui-select-header').replaceWith(transcludedHeader);\n          } else {\n            element.querySelectorAll('.ui-select-header').remove();\n          }\n\n          var transcludedFooter = transcluded.querySelectorAll('.ui-select-footer');\n          transcludedFooter.removeAttr('ui-select-footer'); // To avoid loop in case directive as attr\n          transcludedFooter.removeAttr('data-ui-select-footer'); // Properly handle HTML5 data-attributes\n          if (transcludedFooter.length == 1) {\n            element.querySelectorAll('.ui-select-footer').replaceWith(transcludedFooter);\n          } else {\n            element.querySelectorAll('.ui-select-footer').remove();\n          }\n        });\n\n        // Support for appending the select field to the body when its open\n        var appendToBody = scope.$eval(attrs.appendToBody);\n        if (appendToBody === undefined) {\n          appendToBody = uiSelectConfig.appendToBody;\n        }\n\n        scope.$watch('$select.open', function(isOpen) {\n          if (isOpen) {\n            // Attach global handlers that cause the dropdowns to close\n            $window.addEventListener('mousedown', closeOnClick, true);\n            $window.addEventListener('scroll', closeOnScroll, true);\n            $window.addEventListener('resize', closeOnResize, true);\n\n            if (appendToBody) {\n              // Wait for ui-select-match child directive, it hasn't started rendering yet.\n              scope.$evalAsync(positionDropdown);\n            }\n          } else if (appendToBody) {\n            resetDropdown();\n          } else {\n            removeGlobalHandlers();\n          }\n\n          // Support changing the direction of the dropdown if there isn't enough space to render it.\n          if ($select.dropdownPosition === 'auto' || $select.dropdownPosition === 'up'){\n            scope.calculateDropdownPos();\n          }\n        });\n\n        // Move the dropdown back to its original location when the scope is destroyed. Otherwise\n        // it might stick around when the user routes away or the select field is otherwise removed\n        scope.$on('$destroy', appendToBody ? resetDropdown : removeGlobalHandlers);\n\n        // Hold on to a reference to the .ui-select-container element for appendToBody support\n        var placeholder = null,\n            originalWidth = '';\n\n        function closeOnClick(e) {\n          if (!$select.open) return; //Skip it if dropdown is close\n\n          var contains = false;\n          var target = e.target || e.srcElement;\n\n          if (window.jQuery) {\n            // Firefox 3.6 does not support element.contains()\n            // See Node.contains https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\n            contains = window.jQuery.contains(element[0], target);\n          } else {\n            contains = element[0].contains(target);\n          }\n          if (!contains && !$select.clickTriggeredSelect) {\n            var skipFocusser;\n            if (!$select.skipFocusser) {\n              //Will lose focus only with certain targets\n              var focusableControls = ['input','button','textarea','select'];\n              var targetController = angular.element(target).controller('uiSelect'); //To check if target is other ui-select\n              skipFocusser = targetController && targetController !== $select; //To check if target is other ui-select\n              if (!skipFocusser) skipFocusser =  ~focusableControls.indexOf(target.tagName.toLowerCase()); //Check if target is input, button or textarea\n            } else {\n              skipFocusser = true;\n            }\n\n            $select.close(skipFocusser);\n            scope.$digest();\n          }\n          $select.clickTriggeredSelect = false;\n        }\n\n        function closeOnResize() {\n          $select.close(false);\n        }\n\n        function closeOnScroll(e) {\n          if (!element[0].contains(e.target || e.srcElement)) {\n            $select.close(false);\n          }\n        }\n\n        function calculateSelectLeftPosition(offset) {\n          var scrollLeft = $document[0].documentElement.scrollLeft || $document[0].body.scrollLeft;\n          var edgeOffscreenAmount = (offset.left + offset.width) - (scrollLeft + $document[0].documentElement.clientWidth);\n          var paddingFromEdge = 30;\n\n          var leftPosition = offset.left;\n          if (edgeOffscreenAmount > 0) {\n            leftPosition -= (edgeOffscreenAmount + paddingFromEdge);\n          }\n\n          return leftPosition;\n        }\n\n        function positionDropdown() {\n          // Remember the absolute position of the element\n          var offset = uisOffset(element);\n\n          // Clone the element into a placeholder element to take its original place in the DOM\n          placeholder = angular.element('<div class=\"ui-select-placeholder\"></div>');\n          placeholder[0].style.width = offset.width + 'px';\n          placeholder[0].style.height = offset.height + 'px';\n          element.after(placeholder);\n\n          // Remember the original value of the element width inline style, so it can be restored\n          // when the dropdown is closed\n          originalWidth = element[0].style.width;\n\n          // Now move the actual dropdown element to the end of the body\n          $document.find('body').append(element);\n\n          element[0].style.position = 'absolute';\n          element[0].style.left = calculateSelectLeftPosition(offset) + 'px';\n          element[0].style.top = offset.top + 'px';\n          element[0].style.width = offset.width + 'px';\n        }\n\n        function removeGlobalHandlers() {\n          $window.removeEventListener('mousedown', closeOnClick, true);\n          $window.removeEventListener('scroll', closeOnResize, true);\n          $window.removeEventListener('resize', resetDropdown, true);\n        }\n\n        function resetDropdown() {\n          removeGlobalHandlers();\n\n          if (placeholder === null) {\n            // The dropdown has not actually been display yet, so there's nothing to reset\n            return;\n          }\n\n          // Move the dropdown element back to its original location in the DOM\n          placeholder.replaceWith(element);\n          placeholder = null;\n\n          element[0].style.position = '';\n          element[0].style.left = '';\n          element[0].style.top = '';\n          element[0].style.width = originalWidth;\n\n          // Set focus back on to the moved element\n          $select.setFocus();\n        }\n\n        function resetFocus() {\n          $timeout(function(){\n            $select.setFocus();\n          });\n        }\n\n        // Hold on to a reference to the .ui-select-dropdown element for direction support.\n        var dropdown = null,\n            directionUpClassName = 'direction-up';\n\n        var setDropdownPosUp = function(offset, offsetDropdown){\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = 'absolute';\n          dropdown[0].style.top = (offsetDropdown.height * -1) + 'px';\n          element.addClass(directionUpClassName);\n\n        };\n\n        var setDropdownPosDown = function(offset, offsetDropdown){\n\n          element.removeClass(directionUpClassName);\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = '';\n          dropdown[0].style.top = '';\n\n        };\n\n        var setDropdownHorizontalPos = function(offset, offsetDropdown){\n          var scrollLeft = $document[0].documentElement.scrollLeft || $document[0].body.scrollLeft;\n\n          if (offset.left + offsetDropdown.width > scrollLeft + $document[0].documentElement.clientWidth) {\n            dropdown.addClass('dropdown-menu-right');\n          }else{\n            dropdown.removeClass('dropdown-menu-right');\n          }\n        };\n\n        var calculateDropdownPosAfterAnimation = function() {\n          // Delay positioning the dropdown until all choices have been added so its height is correct.\n          $timeout(function() {\n            if ($select.dropdownPosition === 'up') {\n              //Go UP\n              setDropdownPosUp();\n            } else {\n              //AUTO\n              element.removeClass(directionUpClassName);\n\n              var offset = uisOffset(element);\n              var offsetDropdown = uisOffset(dropdown);\n\n              //https://code.google.com/p/chromium/issues/detail?id=342307#c4\n              var scrollTop = $document[0].documentElement.scrollTop || $document[0].body.scrollTop; //To make it cross browser (blink, webkit, IE, Firefox).\n\n              // Determine if the direction of the dropdown needs to be changed.\n              if (offset.top + offset.height + offsetDropdown.height > scrollTop + $document[0].documentElement.clientHeight) {\n                //Go UP\n                setDropdownPosUp(offset, offsetDropdown);\n              }else{\n                //Go DOWN\n                setDropdownPosDown(offset, offsetDropdown);\n              }\n              setDropdownHorizontalPos(offset, offsetDropdown);\n            }\n\n            // Display the dropdown once it has been positioned.\n            dropdown[0].classList.remove('ui-select-detached');\n          });\n        };\n\n        var opened = false;\n\n        scope.calculateDropdownPos = function() {\n          if ($select.open) {\n            dropdown = angular.element(element).querySelectorAll('.ui-select-dropdown');\n\n            if (dropdown.length === 0) {\n              return;\n            }\n\n           // Hide the dropdown so there is no flicker until $timeout is done executing.\n           if ($select.search === '' && !opened) {\n              dropdown[0].classList.add('ui-select-detached');\n              opened = true;\n           }\n\n            calculateDropdownPosAfterAnimation();\n          } else {\n            if (dropdown === null || dropdown.length === 0) {\n              return;\n            }\n\n            // Reset the position of the dropdown.\n            dropdown[0].classList.add('ui-select-detached');\n            dropdown.removeClass('dropdown-menu-right');\n            dropdown[0].style.position = '';\n            dropdown[0].style.top = '';\n            element.removeClass(directionUpClassName);\n          }\n        };\n      };\n    }\n  };\n}]);\n\nuis.directive('uiSelectFooter', ['uiSelectConfig', function (uiSelectConfig) {\n  return {\n    templateUrl: function (tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-footer');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/footer.tpl.html';\n    },\n    restrict: 'EA',\n    transclude: true,\n    replace: true\n  };\n}]);\n\nuis.directive('uiSelectHeader', ['uiSelectConfig', function (uiSelectConfig) {\n  return {\n    templateUrl: function (tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-header');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/header.tpl.html';\n    },\n    restrict: 'EA',\n    transclude: true,\n    replace: true\n  };\n}]);\n\nuis.directive('uiSelectHeaderGroupSelectable', ['$timeout', function($timeout) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect'],\n    scope: {\n      isEnabled: \"<?uiSelectHeaderGroupSelectable\"\n    },\n    link: function ($scope, $element, attrs, select) {\n      // TODO Why that???\n      var $select = select[0];\n      if (angular.isUndefined($scope.isEnabled)) {\n        $scope.isEnabled = true;\n      }\n\n      function isEnabled() {\n        return angular.isUndefined($scope.isEnabled) || $scope.isEnabled;\n      }\n\n      function getElements() {\n        if ($select.multiple && $select.groups) {\n          return $element.querySelectorAll('.ui-select-choices-group-label');\n        } else {\n          console.error('Use uiSelectHeaderGroupSelectable with no multiple uiSelect or without groupBy');\n          return [];\n        }\n      }\n\n      function enableClick() {\n        if (isEnabled()) {\n          getElements().forEach(function(e) {\n            var element = angular.element(e);\n\n            // Check the onClick event is not already listen\n            if (!element.hasClass('ui-select-header-group-selectable')) {\n              element.addClass('ui-select-header-group-selectable');\n\n              element.on('click', function () {\n                if (isEnabled()) {\n                  var group = $select.findGroupByName(element.text(), true);\n\n                  group.items.forEach(function(item) {\n                    $timeout(function() {\n                      $select.select(item, false, ' ');\n                    });\n                  });\n                }\n              });\n            }\n          });\n        }\n      }\n\n      function disableClick() {\n        if (!isEnabled()) {\n          getElements().forEach(function(e) {\n            var element = angular.element(e);\n            element.removeClass('ui-select-header-group-selectable');\n            element.off('click');\n          });\n        }\n      }\n\n      // Watch element to trigger select event\n      $scope.$watch('isEnabled', function() {\n        if (!isEnabled()) {\n          disableClick();\n        } else {\n          enableClick();\n        }\n      });\n\n      $scope.$watch('$select.groups', enableClick);\n      $scope.$watch(function() {\n        return $select.selected && $select.selected.length ? $select.selected.length : -1;\n      }, enableClick);\n    }\n  };\n}]);\n\nuis.directive('uiSelectMatch', ['uiSelectConfig', function(uiSelectConfig) {\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-match');\n\n      var parent = tElement.parent();\n      // Gets theme attribute from parent (ui-select)\n      var theme = getAttribute(parent, 'theme') || uiSelectConfig.theme;\n      var multi = angular.isDefined(getAttribute(parent, 'multiple'));\n\n      return theme + (multi ? '/match-multiple.tpl.html' : '/match.tpl.html');\n    },\n    link: function(scope, element, attrs, $select) {\n      $select.lockChoiceExpression = attrs.uiLockChoice;\n      attrs.$observe('placeholder', function(placeholder) {\n        $select.placeholder = placeholder !== undefined ? placeholder : uiSelectConfig.placeholder;\n      });\n\n      if($select.multiple){\n        $select.sizeSearchInput();\n      }\n    }\n  };\n\n  function getAttribute(elem, attribute) {\n    if (elem[0].hasAttribute(attribute))\n      return elem.attr(attribute);\n\n    if (elem[0].hasAttribute('data-' + attribute))\n      return elem.attr('data-' + attribute);\n\n    if (elem[0].hasAttribute('x-' + attribute))\n      return elem.attr('x-' + attribute);\n  }\n}]);\n\nuis.directive('uiSelectMultiple', ['uiSelectMinErr','$timeout', function(uiSelectMinErr, $timeout) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n\n    controller: ['$scope','$timeout', function($scope, $timeout){\n\n      var ctrl = this,\n          $select = $scope.$select,\n          ngModel;\n\n      if (angular.isUndefined($select.selected))\n        $select.selected = [];\n\n      //Wait for link fn to inject it\n      $scope.$evalAsync(function(){ ngModel = $scope.ngModel; });\n\n      ctrl.activeMatchIndex = -1;\n\n      ctrl.updateModel = function(){\n        ngModel.$setViewValue(Date.now()); //Set timestamp as a unique string to force changes\n        ctrl.refreshComponent();\n      };\n\n      ctrl.refreshComponent = function(){\n        //Remove already selected items\n        //e.g. When user clicks on a selection, the selected array changes and\n        //the dropdown should remove that item\n        if($select.refreshItems){\n          $select.refreshItems();\n        }\n        if($select.sizeSearchInput){\n          $select.sizeSearchInput();\n        }\n      };\n\n      // Remove item from multiple select\n      ctrl.removeChoice = function(index){\n\n        // if the choice is locked, don't remove it\n        if($select.isLocked(null, index)) return false;\n\n        var removedChoice = $select.selected[index];\n\n        var locals = {};\n        locals[$select.parserResult.itemName] = removedChoice;\n\n        $select.selected.splice(index, 1);\n        ctrl.activeMatchIndex = -1;\n        $select.sizeSearchInput();\n\n        // Give some time for scope propagation.\n        $timeout(function(){\n          $select.onRemoveCallback($scope, {\n            $item: removedChoice,\n            $model: $select.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        ctrl.updateModel();\n\n        return true;\n      };\n\n\n    }],\n    controllerAs: '$selectMultiple',\n\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = scope.ngModel = ctrls[1];\n      var $selectMultiple = scope.$selectMultiple;\n\n      //$select.selected = raw selected objects (ignoring any property binding)\n\n      $select.multiple = true;\n\n      //Input that will handle focus\n      $select.focusInput = $select.searchInput;\n\n      //Properly check for empty if set to multiple\n      ngModel.$isEmpty = function(value) {\n        return !value || value.length === 0;\n      };\n\n      //From view --> model\n      ngModel.$parsers.unshift(function () {\n        var locals = {},\n            result,\n            resultMultiple = [];\n        for (var j = $select.selected.length - 1; j >= 0; j--) {\n          locals = {};\n          locals[$select.parserResult.itemName] = $select.selected[j];\n          result = $select.parserResult.modelMapper(scope, locals);\n          resultMultiple.unshift(result);\n        }\n        return resultMultiple;\n      });\n\n      // From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (!data) return inputValue;\n        var resultMultiple = [];\n        var checkFnMultiple = function(list, value){\n          if (!list || !list.length) return;\n          for (var p = list.length - 1; p >= 0; p--) {\n            locals[$select.parserResult.itemName] = list[p];\n            result = $select.parserResult.modelMapper(scope, locals);\n            if($select.parserResult.trackByExp){\n                var propsItemNameMatches = /(\\w*)\\./.exec($select.parserResult.trackByExp);\n                var matches = /\\.([^\\s]+)/.exec($select.parserResult.trackByExp);\n                if(propsItemNameMatches && propsItemNameMatches.length > 0 && propsItemNameMatches[1] == $select.parserResult.itemName){\n                  if(matches && matches.length>0 && result[matches[1]] == value[matches[1]]){\n                      resultMultiple.unshift(list[p]);\n                      return true;\n                  }\n                }\n            }\n            if (angular.equals(result,value)){\n              resultMultiple.unshift(list[p]);\n              return true;\n            }\n          }\n          return false;\n        };\n        if (!inputValue) return resultMultiple; //If ngModel was undefined\n        for (var k = inputValue.length - 1; k >= 0; k--) {\n          //Check model array of currently selected items\n          if (!checkFnMultiple($select.selected, inputValue[k])){\n            //Check model array of all items available\n            if (!checkFnMultiple(data, inputValue[k])){\n              //If not found on previous lists, just add it directly to resultMultiple\n              resultMultiple.unshift(inputValue[k]);\n            }\n          }\n        }\n        return resultMultiple;\n      });\n\n      //Watch for external model changes\n      scope.$watchCollection(function(){ return ngModel.$modelValue; }, function(newValue, oldValue) {\n        if (oldValue != newValue){\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ngModel.$modelValue)) {\n            ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n          $selectMultiple.refreshComponent();\n        }\n      });\n\n      ngModel.$render = function() {\n        // Make sure that model value is array\n        if(!angular.isArray(ngModel.$viewValue)){\n          // Have tolerance for null or undefined values\n          if (isNil(ngModel.$viewValue)){\n            ngModel.$viewValue = [];\n          } else {\n            throw uiSelectMinErr('multiarr', \"Expected model value to be array but got '{0}'\", ngModel.$viewValue);\n          }\n        }\n        $select.selected = ngModel.$viewValue;\n        $selectMultiple.refreshComponent();\n        scope.$evalAsync(); //To force $digest\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        if($select.selected.length >= $select.limit) {\n          return;\n        }\n        $select.selected.push(item);\n        var locals = {};\n        locals[$select.parserResult.itemName] = item;\n\n        $timeout(function(){\n          $select.onSelectCallback(scope, {\n            $item: item,\n            $model: $select.parserResult.modelMapper(scope, locals)\n          });\n        });\n        $selectMultiple.updateModel();\n      });\n\n      scope.$on('uis:activate', function () {\n        $selectMultiple.activeMatchIndex = -1;\n      });\n\n      scope.$watch('$select.disabled', function(newValue, oldValue) {\n        // As the search input field may now become visible, it may be necessary to recompute its size\n        if (oldValue && !newValue) $select.sizeSearchInput();\n      });\n\n      $select.searchInput.on('keydown', function(e) {\n        var key = e.which;\n        scope.$apply(function() {\n          var processed = false;\n          // var tagged = false; //Checkme\n          if(KEY.isHorizontalMovement(key)){\n            processed = _handleMatchSelection(key);\n          }\n          if (processed  && key != KEY.TAB) {\n            //TODO Check si el tab selecciona aun correctamente\n            //Crear test\n            $select.cancelEvent(e);\n          }\n        });\n      });\n      function _getCaretPosition(el) {\n        if(angular.isNumber(el.selectionStart)) return el.selectionStart;\n        // selectionStart is not supported in IE8 and we don't want hacky workarounds so we compromise\n        else return el.value.length;\n      }\n      // Handles selected options in \"multiple\" mode\n      function _handleMatchSelection(key){\n        var caretPosition = _getCaretPosition($select.searchInput[0]),\n            length = $select.selected.length,\n            // none  = -1,\n            first = 0,\n            last  = length-1,\n            curr  = $selectMultiple.activeMatchIndex,\n            next  = $selectMultiple.activeMatchIndex+1,\n            prev  = $selectMultiple.activeMatchIndex-1,\n            newIndex = curr;\n\n        if(caretPosition > 0 || ($select.search.length && key == KEY.RIGHT)) return false;\n\n        $select.close();\n\n        function getNewActiveMatchIndex(){\n          switch(key){\n            case KEY.LEFT:\n              // Select previous/first item\n              if(~$selectMultiple.activeMatchIndex) return prev;\n              // Select last item\n              else return last;\n              break;\n            case KEY.RIGHT:\n              // Open drop-down\n              if(!~$selectMultiple.activeMatchIndex || curr === last){\n                $select.activate();\n                return false;\n              }\n              // Select next/last item\n              else return next;\n              break;\n            case KEY.BACKSPACE:\n              // Remove selected item and select previous/first\n              if(~$selectMultiple.activeMatchIndex){\n                if($selectMultiple.removeChoice(curr)) {\n                  return prev;\n                } else {\n                  return curr;\n                }\n\n              } else {\n                // If nothing yet selected, select last item\n                return last;\n              }\n              break;\n            case KEY.DELETE:\n              // Remove selected item and select next item\n              if(~$selectMultiple.activeMatchIndex){\n                $selectMultiple.removeChoice($selectMultiple.activeMatchIndex);\n                return curr;\n              }\n              else return false;\n          }\n        }\n\n        newIndex = getNewActiveMatchIndex();\n\n        if(!$select.selected.length || newIndex === false) $selectMultiple.activeMatchIndex = -1;\n        else $selectMultiple.activeMatchIndex = Math.min(last,Math.max(first,newIndex));\n\n        return true;\n      }\n\n      $select.searchInput.on('keyup', function(e) {\n\n        if ( ! KEY.isVerticalMovement(e.which) ) {\n          scope.$evalAsync( function () {\n            $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          });\n        }\n        // Push a \"create new\" item into array if there is a search string\n        if ( $select.tagging.isActivated && $select.search.length > 0 ) {\n\n          // return early with these keys\n          if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || KEY.isVerticalMovement(e.which) ) {\n            return;\n          }\n          // always reset the activeIndex to the first item when tagging\n          $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          // taggingLabel === false bypasses all of this\n          if ($select.taggingLabel === false) return;\n\n          var items = angular.copy( $select.items );\n          var stashArr = angular.copy( $select.items );\n          var newItem;\n          var item;\n          var hasTag = false;\n          var dupeIndex = -1;\n          var tagItems;\n          var tagItem;\n\n          // case for object tagging via transform `$select.tagging.fct` function\n          if ( $select.tagging.fct !== undefined) {\n            tagItems = $select.$filter('filter')(items,{'isTag': true});\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            // remove the first element, if it has the `isTag` prop we generate a new one with each keyup, shaving the previous\n            if ( items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.tagging.fct($select.search);\n            // verify the new tag doesn't match the value of a possible selection choice or an already selected item.\n            if (\n              stashArr.some(function (origItem) {\n                 return angular.equals(origItem, newItem);\n              }) ||\n              $select.selected.some(function (origItem) {\n                return angular.equals(origItem, newItem);\n              })\n            ) {\n              scope.$evalAsync(function () {\n                $select.activeIndex = 0;\n                $select.items = items;\n              });\n              return;\n            }\n            if (newItem) newItem.isTag = true;\n          // handle newItem string and stripping dupes in tagging string context\n          } else {\n            // find any tagging items already in the $select.items array and store them\n            tagItems = $select.$filter('filter')(items,function (item) {\n              return item.match($select.taggingLabel);\n            });\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            item = items[0];\n            // remove existing tag item if found (should only ever be one tag item)\n            if ( item !== undefined && items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.search+' '+$select.taggingLabel;\n            if ( _findApproxDupe($select.selected, $select.search) > -1 ) {\n              return;\n            }\n            // verify the the tag doesn't match the value of an existing item from\n            // the searched data set or the items already selected\n            if ( _findCaseInsensitiveDupe(stashArr.concat($select.selected)) ) {\n              // if there is a tag from prev iteration, strip it / queue the change\n              // and return early\n              if ( hasTag ) {\n                items = stashArr;\n                scope.$evalAsync( function () {\n                  $select.activeIndex = 0;\n                  $select.items = items;\n                });\n              }\n              return;\n            }\n            if ( _findCaseInsensitiveDupe(stashArr) ) {\n              // if there is a tag from prev iteration, strip it\n              if ( hasTag ) {\n                $select.items = stashArr.slice(1,stashArr.length);\n              }\n              return;\n            }\n          }\n          if ( hasTag ) dupeIndex = _findApproxDupe($select.selected, newItem);\n          // dupe found, shave the first item\n          if ( dupeIndex > -1 ) {\n            items = items.slice(dupeIndex+1,items.length-1);\n          } else {\n            items = [];\n            if (newItem) items.push(newItem);\n            items = items.concat(stashArr);\n          }\n          scope.$evalAsync( function () {\n            $select.activeIndex = 0;\n            $select.items = items;\n\n            if ($select.isGrouped) {\n              // update item references in groups, so that indexOf will work after angular.copy\n              var itemsWithoutTag = newItem ? items.slice(1) : items;\n              $select.setItemsFn(itemsWithoutTag);\n              if (newItem) {\n                // add tag item as a new group\n                $select.items.unshift(newItem);\n                $select.groups.unshift({name: '', items: [newItem], tagging: true});\n              }\n            }\n          });\n        }\n      });\n      function _findCaseInsensitiveDupe(arr) {\n        if ( arr === undefined || $select.search === undefined ) {\n          return false;\n        }\n        var hasDupe = arr.filter( function (origItem) {\n          if ( $select.search.toUpperCase() === undefined || origItem === undefined ) {\n            return false;\n          }\n          return origItem.toUpperCase() === $select.search.toUpperCase();\n        }).length > 0;\n\n        return hasDupe;\n      }\n      function _findApproxDupe(haystack, needle) {\n        var dupeIndex = -1;\n        if(angular.isArray(haystack)) {\n          var tempArr = angular.copy(haystack);\n          for (var i = 0; i <tempArr.length; i++) {\n            // handle the simple string version of tagging\n            if ( $select.tagging.fct === undefined ) {\n              // search the array for the match\n              if ( tempArr[i]+' '+$select.taggingLabel === needle ) {\n              dupeIndex = i;\n              }\n            // handle the object tagging implementation\n            } else {\n              var mockObj = tempArr[i];\n              if (angular.isObject(mockObj)) {\n                mockObj.isTag = true;\n              }\n              if ( angular.equals(mockObj, needle) ) {\n                dupeIndex = i;\n              }\n            }\n          }\n        }\n        return dupeIndex;\n      }\n\n      $select.searchInput.on('blur', function() {\n        $timeout(function() {\n          $selectMultiple.activeMatchIndex = -1;\n        });\n      });\n\n    }\n  };\n}]);\n\nuis.directive('uiSelectNoChoice',\n    ['uiSelectConfig', function (uiSelectConfig) {\n        return {\n            restrict: 'EA',\n            require: '^uiSelect',\n            replace: true,\n            transclude: true,\n            templateUrl: function (tElement) {\n                // Needed so the uiSelect can detect the transcluded content\n                tElement.addClass('ui-select-no-choice');\n      \n                // Gets theme attribute from parent (ui-select)\n                var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n                return theme + '/no-choice.tpl.html';\n            }\n        };\n    }]);\n\nuis.directive('uiSelectSingle', ['$timeout','$compile', function($timeout, $compile) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = ctrls[1];\n\n      //From view --> model\n      ngModel.$parsers.unshift(function (inputValue) {\n        // Keep original value for undefined and null\n        if (isNil(inputValue)) {\n          return inputValue;\n        }\n\n        // Allow the null value to be considered a valid model value\n        if (inputValue.$$null) {\n          return inputValue[$select.itemProperty];\n        }\n\n        var locals = {};\n        locals[$select.parserResult.itemName] = inputValue;\n        return $select.parserResult.modelMapper(scope, locals);\n      });\n\n      //From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        // Keep original value for undefined and null\n        if (isNil(inputValue)) {\n          return inputValue;\n        }\n\n        var data = $select.parserResult && $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (data){\n          var checkFnSingle = function(d){\n            locals[$select.parserResult.itemName] = d;\n            result = $select.parserResult.modelMapper(scope, locals);\n            return result === inputValue;\n          };\n          //If possible pass same object stored in $select.selected\n          if ($select.selected && checkFnSingle($select.selected)) {\n            return $select.selected;\n          }\n          for (var i = data.length - 1; i >= 0; i--) {\n            if (checkFnSingle(data[i])) return data[i];\n          }\n        }\n        return inputValue;\n      });\n\n      //Update viewValue if model change\n      scope.$watch('$select.selected', function(newValue) {\n        if (ngModel.$viewValue !== newValue) {\n          ngModel.$setViewValue(newValue);\n        }\n      });\n\n      ngModel.$render = function() {\n        $select.selected = ngModel.$viewValue;\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        $select.selected = item;\n        var locals = {};\n        locals[$select.parserResult.itemName] = item;\n\n        $timeout(function() {\n          $select.onSelectCallback(scope, {\n            $item: item,\n            $model: isNil(item) ? item : $select.parserResult.modelMapper(scope, locals)\n          });\n        });\n      });\n\n      scope.$on('uis:close', function (event, skipFocusser) {\n        $timeout(function(){\n          $select.focusser.prop('disabled', false);\n          if (!skipFocusser) $select.focusser[0].focus();\n        },0,false);\n      });\n\n      scope.$on('uis:activate', function () {\n        focusser.prop('disabled', true); //Will reactivate it on .close()\n      });\n      //Idea from: https://github.com/ivaynberg/select2/blob/79b5bf6db918d7560bdd959109b7bcfb47edaf43/select2.js#L1954\n      var focusser = angular.element(\"<input ng-disabled='$select.disabled' class='ui-select-focusser ui-select-offscreen' type='text' id='{{ $select.focusserId }}' aria-label='{{ $select.focusserTitle }}' aria-haspopup='true' role='button' />\");\n      $compile(focusser)(scope);\n      $select.focusser = focusser;\n       //Input that will handle focus\n      $select.focusInput = focusser;\n\n      // Move focuser out of <ui-select> because append-to-body=\"true\" will move the focusser out of :tabbable order.\n      element.parent().parent().prepend(focusser);\n\n      scope.$on('$destroy', function() {\n        if ($select.focusser) {\n          $select.focusser.remove();\n        }\n      });\n\n      focusser.on(\"focus\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = true;\n        });\n      });\n\n      focusser.on(\"blur\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = false;\n        });\n      });\n\n      focusser.on(\"keydown\", function(e){\n        if (e.which === KEY.BACKSPACE && $select.backspaceReset !== false) {\n          $select.select($select.nullValue);\n          $select.cancelEvent(e);\n          scope.$apply();\n          return;\n        }\n\n        if (e.which === KEY.TAB) {\n          $select.tabNavigate(e.shiftKey);\n          $select.cancelEvent(e);\n          return;\n        }\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\n          return;\n        }\n\n        if (e.which == KEY.DOWN  || e.which == KEY.UP || e.which == KEY.ENTER || e.which == KEY.SPACE){\n          $select.cancelEvent(e);\n          $select.activate();\n        }\n\n        scope.$digest();\n      });\n\n      focusser.on(\"keyup input\", function(e){\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || e.which == KEY.ENTER || e.which === KEY.BACKSPACE) {\n          return;\n        }\n\n        $select.activate(focusser.val()); //User pressed some regular key, so we pass it to the search input\n        focusser.val('');\n        scope.$digest();\n      });\n    }\n  };\n}]);\n\n// Make multiple matches sortable\nuis.directive('uiSelectSort', ['$timeout', 'uiSelectConfig', 'uiSelectMinErr', function($timeout, uiSelectConfig, uiSelectMinErr) {\n  return {\n    require: ['^^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n      if (scope[attrs.uiSelectSort] === null) {\n        throw uiSelectMinErr('sort', 'Expected a list to sort');\n      }\n\n      var $select = ctrls[0];\n      var $ngModel = ctrls[1];\n\n      var options = angular.extend({\n          axis: 'horizontal'\n        },\n        scope.$eval(attrs.uiSelectSortOptions));\n\n      var axis = options.axis;\n      var draggingClassName = 'dragging';\n      var droppingClassName = 'dropping';\n      var droppingBeforeClassName = 'dropping-before';\n      var droppingAfterClassName = 'dropping-after';\n\n      scope.$watch(function(){\n        return $select.sortable;\n      }, function(newValue){\n        if (newValue) {\n          element.attr('draggable', true);\n        } else {\n          element.removeAttr('draggable');\n        }\n      });\n\n      if (element.data('disallowDrop')) {\n        return;\n      }\n\n      element.on('dragstart', function(event) {\n        element.addClass(draggingClassName);\n\n        (event.dataTransfer || event.originalEvent.dataTransfer).setData('text', scope.$index.toString());\n      });\n\n      element.on('dragend', function() {\n        removeClass(draggingClassName);\n      });\n\n      var move = function(from, to) {\n        /*jshint validthis: true */\n        this.splice(to, 0, this.splice(from, 1)[0]);\n      };\n\n      var removeClass = function(className) {\n        angular.forEach($select.$element.querySelectorAll('.' + className), function(el){\n          angular.element(el).removeClass(className);\n        });\n      };\n\n      var dragOverHandler = function(event) {\n        event.preventDefault();\n\n        var offset = axis === 'vertical' ? event.offsetY || event.layerY || (event.originalEvent ? event.originalEvent.offsetY : 0) : event.offsetX || event.layerX || (event.originalEvent ? event.originalEvent.offsetX : 0);\n\n        if (offset < (this[axis === 'vertical' ? 'offsetHeight' : 'offsetWidth'] / 2)) {\n          removeClass(droppingAfterClassName);\n          element.addClass(droppingBeforeClassName);\n\n        } else {\n          removeClass(droppingBeforeClassName);\n          element.addClass(droppingAfterClassName);\n        }\n      };\n\n      var dropTimeout;\n\n      var dropHandler = function(event) {\n        event.preventDefault();\n\n        var droppedItemIndex = parseInt((event.dataTransfer || event.originalEvent.dataTransfer).getData('text'), 10);\n\n        // prevent event firing multiple times in firefox\n        $timeout.cancel(dropTimeout);\n        dropTimeout = $timeout(function() {\n          _dropHandler(droppedItemIndex);\n        }, 20);\n      };\n\n      var _dropHandler = function(droppedItemIndex) {\n        var theList = scope.$eval(attrs.uiSelectSort);\n        var itemToMove = theList[droppedItemIndex];\n        var newIndex = null;\n\n        if (element.hasClass(droppingBeforeClassName)) {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index - 1;\n          } else {\n            newIndex = scope.$index;\n          }\n        } else {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index;\n          } else {\n            newIndex = scope.$index + 1;\n          }\n        }\n\n        move.apply(theList, [droppedItemIndex, newIndex]);\n\n        $ngModel.$setViewValue(Date.now());\n\n        scope.$apply(function() {\n          scope.$emit('uiSelectSort:change', {\n            array: theList,\n            item: itemToMove,\n            from: droppedItemIndex,\n            to: newIndex\n          });\n        });\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('drop', dropHandler);\n      };\n\n      element.on('dragenter', function() {\n        if (element.hasClass(draggingClassName)) {\n          return;\n        }\n\n        element.addClass(droppingClassName);\n\n        element.on('dragover', dragOverHandler);\n        element.on('drop', dropHandler);\n      });\n\n      element.on('dragleave', function(event) {\n        if (event.target != element) {\n          return;\n        }\n\n        removeClass(droppingClassName);\n        removeClass(droppingBeforeClassName);\n        removeClass(droppingAfterClassName);\n\n        element.off('dragover', dragOverHandler);\n        element.off('drop', dropHandler);\n      });\n    }\n  };\n}]);\n\n/**\n * Debounces functions\n *\n * Taken from UI Bootstrap $$debounce source code\n * See https://github.com/angular-ui/bootstrap/blob/master/src/debounce/debounce.js\n *\n */\nuis.factory('$$uisDebounce', ['$timeout', function($timeout) {\n  return function(callback, debounceTime) {\n    var timeoutPromise;\n\n    return function() {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments);\n      if (timeoutPromise) {\n        $timeout.cancel(timeoutPromise);\n      }\n\n      timeoutPromise = $timeout(function() {\n        callback.apply(self, args);\n      }, debounceTime);\n    };\n  };\n}]);\n\nuis.directive('uisOpenClose', ['$parse', '$timeout', function ($parse, $timeout) {\n  return {\n    restrict: 'A',\n    require: 'uiSelect',\n    link: function (scope, element, attrs, $select) {\n      $select.onOpenCloseCallback = $parse(attrs.uisOpenClose);\n\n      scope.$watch('$select.open', function (isOpen, previousState) {\n        if (isOpen !== previousState) {\n          $timeout(function () {\n            $select.onOpenCloseCallback(scope, {\n              isOpen: isOpen\n            });\n          });\n        }\n      });\n    }\n  };\n}]);\n\n/**\n * Parses \"repeat\" attribute.\n *\n * Taken from AngularJS ngRepeat source code\n * See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L211\n *\n * Original discussion about parsing \"repeat\" attribute instead of fully relying on ng-repeat:\n * https://github.com/angular-ui/ui-select/commit/5dd63ad#commitcomment-5504697\n */\n\nuis.service('uisRepeatParser', ['uiSelectMinErr','$parse', function(uiSelectMinErr, $parse) {\n  var self = this;\n\n  /**\n   * Example:\n   * expression = \"address in addresses | filter: {street: $select.search} track by $index\"\n   * itemName = \"address\",\n   * source = \"addresses | filter: {street: $select.search}\",\n   * trackByExp = \"$index\",\n   */\n  self.parse = function(expression) {\n\n\n    var match;\n    //var isObjectCollection = /\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)/.test(expression);\n    // If an array is used as collection\n\n    // if (isObjectCollection){\n    // 000000000000000000000000000000111111111000000000000000222222222222220033333333333333333333330000444444444444444444000000000000000055555555555000000000000000000000066666666600000000\n    match = expression.match(/^\\s*(?:([\\s\\S]+?)\\s+as\\s+)?(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(\\s*[\\s\\S]+?)?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n    // 1 Alias\n    // 2 Item\n    // 3 Key on (key,value)\n    // 4 Value on (key,value)\n    // 5 Source expression (including filters)\n    // 6 Track by\n\n    if (!match) {\n      throw uiSelectMinErr('iexp', \"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\",\n              expression);\n    }\n    \n    var source = match[5], \n        filters = '';\n\n    // When using (key,value) ui-select requires filters to be extracted, since the object\n    // is converted to an array for $select.items \n    // (in which case the filters need to be reapplied)\n    if (match[3]) {\n      // Remove any enclosing parenthesis\n      source = match[5].replace(/(^\\()|(\\)$)/g, '');\n      // match all after | but not after ||\n      var filterMatch = match[5].match(/^\\s*(?:[\\s\\S]+?)(?:[^\\|]|\\|\\|)+([\\s\\S]*)\\s*$/);\n      if(filterMatch && filterMatch[1].trim()) {\n        filters = filterMatch[1];\n        source = source.replace(filters, '');\n      }      \n    }\n\n    return {\n      itemName: match[4] || match[2], // (lhs) Left-hand side,\n      keyName: match[3], //for (key, value) syntax\n      source: $parse(source),\n      filters: filters,\n      trackByExp: match[6],\n      modelMapper: $parse(match[1] || match[4] || match[2]),\n      repeatExpression: function (grouped) {\n        var expression = this.itemName + ' in ' + (grouped ? '$group.items' : '$select.items');\n        if (this.trackByExp) {\n          expression += ' track by ' + this.trackByExp;\n        }\n        return expression;\n      } \n    };\n\n  };\n\n  self.getGroupNgRepeatExpression = function() {\n    return '$group in $select.groups track by $group.name';\n  };\n\n}]);\n\n}());\nangular.module(\"ui.select\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bootstrap/choices.tpl.html\",\"<ul class=\\\"ui-select-choices ui-select-choices-content\\\"><li class=\\\"ui-select-choices-group\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\"><div class=\\\"divider\\\" ng-show=\\\"$select.isGrouped && $index > 0\\\"></div><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label dropdown-header\\\" ng-bind=\\\"$group.name\\\"></div><div ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\" role=\\\"option\\\" ng-show=\\\"!this[$select.itemProperty].$$null || ($select.selected && $select.selected !== this[$select.itemProperty])\\\" ng-switch=\\\"this[$select.itemProperty].$$null\\\"><span ng-switch-when=\\\"true\\\" class=\\\"ui-select-choices-row-null\\\" ng-bind=\\\"$select.nullLabel\\\"></span> <span ng-switch-default=\\\"\\\" class=\\\"ui-select-choices-row-inner\\\"></span></div></li></ul>\");\n$templateCache.put(\"bootstrap/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"bootstrap/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"bootstrap/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><span ng-repeat=\\\"$item in $select.selected track by $index\\\"><span class=\\\"ui-select-match-item btn btn-default btn-xs\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ng-class=\\\"{\\'btn-primary\\':$selectMultiple.activeMatchIndex === $index, \\'select-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span class=\\\"close ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&nbsp;&times;</span> <span uis-transclude-append=\\\"\\\"></span></span></span></span>\");\n$templateCache.put(\"bootstrap/match.tpl.html\",\"<div class=\\\"ui-select-match\\\" ng-hide=\\\"$select.open && $select.searchEnabled\\\" ng-disabled=\\\"$select.disabled\\\" ng-class=\\\"{\\'btn-default-focus\\':$select.focus}\\\"><span tabindex=\\\"-1\\\" class=\\\"btn btn-default form-control ui-select-toggle\\\" aria-label=\\\"{{ $select.baseTitle }} activate\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" style=\\\"outline: 0;\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"ui-select-match-text pull-left\\\" ng-class=\\\"{\\'ui-select-allow-clear\\': !$select.required && !$select.isEmpty()}\\\" ng-transclude=\\\"\\\"></span> <i class=\\\"caret pull-right\\\" ng-click=\\\"$select.toggle($event)\\\"></i></span></div>\");\n$templateCache.put(\"bootstrap/no-choice.tpl.html\",\"<ul class=\\\"ui-select-no-choice dropdown-menu\\\" ng-show=\\\"$select.items.length == 0\\\"><li ng-transclude=\\\"\\\"></li></ul>\");\n$templateCache.put(\"bootstrap/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple ui-select-bootstrap dropdown form-control\\\" ng-class=\\\"{open: $select.open}\\\"><div><div class=\\\"ui-select-match\\\"></div><span ng-show=\\\"$select.open && $select.refreshing && $select.spinnerEnabled\\\" class=\\\"ui-select-refreshing {{$select.spinnerClass}}\\\"></span> <input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" class=\\\"ui-select-search input-xs\\\" placeholder=\\\"{{$select.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" ng-model=\\\"$select.search\\\" role=\\\"combobox\\\" aria-expanded=\\\"{{$select.open}}\\\" aria-label=\\\"{{$select.baseTitle}}\\\" ng-class=\\\"{\\'spinner\\': $select.refreshing}\\\" data-disallow-drop=\\\"data-disallow-drop\\\"></div><div ng-show=\\\"$select.open && $select.items.length > 0\\\" class=\\\"ui-select-dropdown dropdown-menu\\\"><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-footer\\\"></div></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"bootstrap/select.tpl.html\",\"<div class=\\\"ui-select-container ui-select-bootstrap dropdown\\\" ng-class=\\\"{open: $select.open}\\\"><div class=\\\"ui-select-match\\\"></div><span ng-show=\\\"$select.open && $select.refreshing && $select.spinnerEnabled\\\" class=\\\"ui-select-refreshing {{$select.spinnerClass}}\\\"></span> <input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" aria-expanded=\\\"true\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" class=\\\"form-control ui-select-search\\\" ng-class=\\\"{ \\'ui-select-search-hidden\\' : !$select.searchEnabled }\\\" placeholder=\\\"{{$select.getSelectedText() || $select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-show=\\\"$select.open\\\"><div ng-show=\\\"$select.open && $select.items.length > 0\\\" class=\\\"ui-select-dropdown dropdown-menu\\\"><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-footer\\\"></div></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"selectize/choices.tpl.html\",\"<div class=\\\"ui-select-choices\\\"><div class=\\\"ui-select-choices-content selectize-dropdown-content\\\"><div class=\\\"ui-select-choices-group optgroup\\\"><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label optgroup-header\\\" ng-bind=\\\"$group.name\\\"></div><div role=\\\"option\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\" ng-show=\\\"!this[$select.itemProperty].$$null || ($select.selected && !select.required)\\\" ng-switch=\\\"this[$select.itemProperty].$$null\\\"><div ng-switch-default=\\\"\\\" class=\\\"option ui-select-choices-row-inner\\\" data-selectable=\\\"\\\"></div><div ng-switch-when=\\\"true\\\" class=\\\"option ui-select-choices-row-null\\\" data-selectable=\\\"\\\" ng-bind=\\\"$select.nullLabel\\\"></div></div></div></div></div>\");\n$templateCache.put(\"selectize/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"selectize/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"selectize/match-multiple.tpl.html\",\"<div class=\\\"ui-select-match\\\" data-value=\\\"\\\" ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ng-class=\\\"{\\'active\\':$selectMultiple.activeMatchIndex === $index}\\\" ui-select-sort=\\\"$select.selected\\\"><span class=\\\"ui-select-match-item\\\" ng-class=\\\"{\\'select-locked\\':$select.isLocked(this, $index)}\\\"><span uis-transclude-append=\\\"\\\"></span> <span class=\\\"remove ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&times;</span></span></div>\");\n$templateCache.put(\"selectize/match.tpl.html\",\"<div ng-hide=\\\"$select.searchEnabled && ($select.open || $select.isEmpty())\\\" class=\\\"ui-select-match\\\"><span ng-show=\\\"!$select.searchEnabled && ($select.isEmpty() || $select.open)\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty() || $select.open\\\" ng-transclude=\\\"\\\"></span></div>\");\n$templateCache.put(\"selectize/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice selectize-dropdown\\\" ng-show=\\\"!$select.items.length\\\"><div class=\\\"selectize-dropdown-content\\\"><div data-selectable=\\\"\\\" ng-transclude=\\\"\\\"></div></div></div>\");\n$templateCache.put(\"selectize/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container selectize-control multi plugin-remove_button\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"><div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled}\\\" placeholder=\\\"{{$select.getSelectedText() || $select.getPlaceholder()}}\\\" ng-model=\\\"$select.search\\\" ng-disabled=\\\"$select.disabled\\\" aria-expanded=\\\"{{$select.open}}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" data-disallow-drop=\\\"data-disallow-drop\\\"></div><div ng-show=\\\"$select.open\\\" class=\\\"ui-select-dropdown selectize-dropdown\\\" ng-class=\\\"{\\'single\\': !$select.multiple, \\'multi\\': $select.multiple}\\\"><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-footer\\\"></div></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"selectize/select.tpl.html\",\"<div class=\\\"ui-select-container selectize-control single\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"><div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"search\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search ui-select-toggle\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled}\\\" ng-click=\\\"$select.toggle($event)\\\" placeholder=\\\"{{$select.getSelectedText() || $select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-hide=\\\"!$select.isEmpty() && !$select.open\\\" ng-disabled=\\\"$select.disabled\\\" aria-label=\\\"{{ $select.baseTitle }}\\\"></div><div ng-show=\\\"$select.open\\\" class=\\\"ui-select-dropdown selectize-dropdown\\\" ng-class=\\\"{\\'single\\': !$select.multiple, \\'multi\\': $select.multiple}\\\"><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-footer\\\"></div></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"select2/choices.tpl.html\",\"<ul tabindex=\\\"-1\\\" class=\\\"ui-select-choices ui-select-choices-content select2-results\\\"><li class=\\\"ui-select-choices-group\\\" ng-class=\\\"{\\'select2-result-with-children\\': $select.choiceGrouped($group)}\\\"><div ng-show=\\\"$select.choiceGrouped($group)\\\" class=\\\"ui-select-choices-group-label select2-result-label\\\" ng-bind=\\\"$group.name\\\"></div><ul id=\\\"ui-select-choices-{{ $select.generatedId }}\\\" ng-class=\\\"{\\'select2-result-sub\\': $select.choiceGrouped($group), \\'select2-result-single\\': !$select.choiceGrouped($group)}\\\"><li role=\\\"option\\\" ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{\\'select2-highlighted\\': $select.isActive(this), \\'select2-disabled\\': $select.isDisabled(this)}\\\" ng-show=\\\"!this[$select.itemProperty].$$null || ($select.selected && !select.required)\\\" ng-switch=\\\"this[$select.itemProperty].$$null\\\"><div ng-switch-default=\\\"\\\" class=\\\"select2-result-label ui-select-choices-row-inner\\\"></div><div ng-switch-when=\\\"true\\\" class=\\\"select2-result-label ui-select-choices-row-null\\\" ng-bind=\\\"$select.nullLabel\\\"></div></li></ul></li></ul>\");\n$templateCache.put(\"select2/footer.tpl.html\",\"<div class=\\\"ui-select-footer\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"select2/header.tpl.html\",\"<div class=\\\"ui-select-header\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"select2/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><li class=\\\"ui-select-match-item select2-search-choice\\\" ng-repeat=\\\"$item in $select.selected track by $index\\\" ng-class=\\\"{\\'select2-search-choice-focus\\':$selectMultiple.activeMatchIndex === $index, \\'select2-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span uis-transclude-append=\\\"\\\"></span> <a href=\\\"javascript:;\\\" class=\\\"ui-select-match-close select2-search-choice-close\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\" tabindex=\\\"-1\\\"></a></li></span>\");\n$templateCache.put(\"select2/match.tpl.html\",\"<a class=\\\"select2-choice ui-select-match\\\" ng-class=\\\"{\\'select2-default\\': $select.isEmpty()}\\\" ng-click=\\\"$select.toggle($event)\\\" aria-label=\\\"{{ $select.baseTitle }} select\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\" ng-transclude=\\\"\\\"></span> <span class=\\\"select2-arrow ui-select-toggle\\\"><b></b></span></a>\");\n$templateCache.put(\"select2/no-choice.tpl.html\",\"<div class=\\\"ui-select-no-choice dropdown\\\" ng-show=\\\"$select.items.length == 0\\\"><div class=\\\"dropdown-content\\\"><div data-selectable=\\\"\\\" ng-transclude=\\\"\\\"></div></div></div>\");\n$templateCache.put(\"select2/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple select2 select2-container select2-container-multi\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled}\\\"><ul class=\\\"select2-choices\\\"><span class=\\\"ui-select-match\\\"></span><li class=\\\"select2-search-field\\\"><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"select2-input ui-select-search\\\" placeholder=\\\"{{$select.getSelectedText() || $select.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" ng-model=\\\"$select.search\\\" ng-click=\\\"$select.activate()\\\" style=\\\"width: 34px;\\\" data-disallow-drop=\\\"data-disallow-drop\\\"></li></ul><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open || $select.items.length === 0}\\\"><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-footer\\\"></div></div></div>\");\n$templateCache.put(\"select2/select.tpl.html\",\"<div class=\\\"ui-select-container select2 select2-container\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled, \\'select2-container-active\\': $select.focus, \\'select2-allowclear\\': !$select.required && !$select.isEmpty()}\\\"><div class=\\\"ui-select-match\\\"></div><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open}\\\"><div class=\\\"search-container\\\" ng-class=\\\"{\\'ui-select-search-hidden\\':!$select.searchEnabled, \\'select2-search\\':$select.searchEnabled}\\\"><input type=\\\"search\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" ng-class=\\\"{\\'select2-active\\': $select.refreshing}\\\" placeholder=\\\"{{$select.getSelectedText() || $select.placeholder}}\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" class=\\\"ui-select-search select2-input\\\" ng-model=\\\"$select.search\\\"></div><div class=\\\"ui-select-header\\\"></div><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div><div class=\\\"ui-select-footer\\\"></div></div></div>\");}]);",null,null]}